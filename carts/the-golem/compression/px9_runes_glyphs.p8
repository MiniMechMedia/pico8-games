pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- px9 data compression v9
-- by zep & co.
--
-- changelog:
--
-- v9:
--  @pancelor
--  ★ redo bitstream order
--  234 tokens (but ~4% slower)
--
-- v8:
--  @pancelor
--  ★ smaller vlist initialization
--  241 tokens
--
-- v7:
--  smaller vlist_val by @felice
--  7b -> 254 tokens (fastest)
--  7a -> 247 tokens (smallest)
--
-- v6:
--  smaller vlist_val by @p01
--  -> 258 tokens
--
-- v5:
--  fixed bug found by @icegoat
--  262 tokens (the bug was caused by otherwise redundant code!)
--
-- v4:
--  @catatafish
--  ★ smaller decomp
--
--  @felice
--  ★ fix bit flush at end
--  ★ use 0.2.0 functionality
--  ★ even smaller decomp
--  ★ some code simpler/cleaner
--  ★ hey look, a changelog!
--
-- v3:
--  @felice
--  ★ smaller decomp
--
-- v2:
--  @zep
--  ★ original release
--
--[[

	features:
	★ 273 token decompress
	★ handles any bit size data
	★ no manual tuning required
	★ decent compression ratios


	██▒ how to use ▒██

	1. compress your data

		px9_comp(source_x, source_y,
			width, height,
			destination_memory_addr,
			read_function)
				
		e.g. to compress the whole
		spritesheet to the map:
		
		px9_comp(0,0,128,128,
			0x2000, sget)

	…………………………………
	2. decompress
	
		px9_decomp(dest_x, dest_y,
			source_memory_addr,
			read_function,
			write_function)

		e.g. to decompress from map
		memory space back to the
		screen:
		
		px9_decomp(0,0,0x2000,
			pget,pset)

		…………………………………

		(see example below)

		note: only the decompress
		code (tab 1) is needed in
		your release cart after
		storing compressed data.
		
]]

function _init()

	-- test: compress from
	-- spritesheet to map, and
	-- then decomp back to screen

	cls()
	print("compressing..",5)
	flip()

	w=128 h=128
	raw_size=(w*h+1)\2 -- bytes

	ctime=stat(1)

	-- compress spritesheet to map
	-- area (0x2000) and save cart

	clen = px9_comp(
		0,0,
		w,h,
		0x2000,
		sget)

	ctime=stat(1)-ctime

	--cstore() -- save to cart

	-- show compression stats
	print("                 "..(ctime/30).." seconds",0,0)
	print("")
	print("compressed spritesheet to map",6)
	ratio=tostr(clen/raw_size*100)
	print("bytes: "
		..clen.." / "..raw_size
		.." ("..sub(ratio,1,4).."%)"
		,12)
	print("")
	print("press ❎ to decompress",14)

	memcpy(0x7000,0x2000,0x1000)

	-- wait for user
	repeat until (btn(❎) or true)

	print("")
	print("decompressing..",5)
	flip()

	-- save stats screen
	local cx,cy=cursor()
	local sdata={}
	for a=0x6000,0x7ffc do
		sdata[a]=peek4(a)
	end

	dtime=stat(1)

	-- decompress data from map
	-- (0x2000) to screen

	px9_decomp(0,0,0x2000,pget,pset)

	dtime=stat(1)-dtime

	-- wait for user
	repeat until (btn(❎) or true)

	-- restore stats screen
	for a,v in pairs(sdata) do
		poke4(a,v)
	end

	-- add decompression stats
	print("                 "..(dtime/30).." seconds",cx,cy-6,5)
	print("")

end

-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 8 and
	-- 15 bits long with the next
	-- bits in these positions:
	--   0b0000.12345678...
	-- (1 is the next bit in the
	--   stream, 2 is the next bit
	--   after that, etc.
	--  0 is a literal zero)
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<8 then
			-- cache next 8 bits
			cache_bits+=8
			cache+=@src>>cache_bits
			src+=1
		end

		-- shift requested bits up
		-- into the integer slots
		cache<<=bits
		local val=cache&0xffff
		-- remove the integer bits
		cache^^=val
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)
		end
	end
end

-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function
	px9_comp(x0,y0,w,h,dest,vget)
	local mytable = {}
	local dest0=dest
	local bit=1
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	local cache,cache_bits=0,0
	function putbit(bval)
	 cache=cache<<1|bval
	 cache_bits+=1
		if cache_bits==8 then
			mytable[dest] = cache
			poke(dest,cache)
			dest+=1
			cache,cache_bits=0,0
		end
	end

	function putval(val, bits)
		for i=bits-1,0,-1 do
			putbit(val>>i&1)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if cache_bits>0 then
		-- flush
		mytable[dest] = cache<<8-cache_bits
		poke(dest,cache<<8-cache_bits)
		dest+=1
	end

	local str = ''
	for i = dest0, dest do
		-- str ..= (chr(mytable[i]))
		str ..= chr(peek(i))
	end
	str = escape_binary_str(str)
	print('' .. dest-dest0 .. ', ' .. #str) -- .. dest0 .. ', ' .. dest .. ', ' .. str)
	printh(str, 'output.bin')
	printh(str, '@clip')
	return dest-dest0
end

function byte_to_hex(byte)
	local hi = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte\16]
	local lo = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte%16]
	return '\\x' .. hi .. lo
end

function escape_binary_str(s)
 local out=""
 for i=1,#s do
  local c  = sub(s,i,i)
  local nc = ord(s,i+1)
  local pr = (nc and nc>=48 and nc<=57) and "00" or ""
  local v=c
  if(c=="\"") v="\\\""
  if(c=="\\") v="\\\\"
  if(ord(c)==0) v="\\"..pr.."0"
  if(ord(c)==10) v="\\n"
  if(ord(c)==13) v="\\r"
  if(ord(c)==9) v="\\t"
  	-- v = byte_to_hex(ord(c))
  out..= v
 end
 return out
end
-- 40% - 50%
-- 14 images per cart...
-- dw = 8 images per cart...

__gfx__
000000000000000001001010100101155455554555454444f444d44f4f444f455555515555550010000000000000000000000000000000000000000000000000
001000000000101010100101010100554555545555544dad9daf9d4afafda4455555555555550000000000000010101010010000000000000000000000000000
00010000010000000101003010301015555555455454a54f9d4f4ad4ffaff4a45455050555500010100100001000000000000010100100000000000000000000
000001000000101010103010501030154555544545454f4adaeadf4fae44464f4555450505501000000000000001010101001000000000000000000000000000
0000000000100000103001150305050555555545444a5ade9e4f9f4ff464d94a5545555055500100010000100100000000000010000000000100000000001000
001001001000011030510103010150355555554a55ad4f9dada4d9faf4ad4adf4554555550500150000010000000101010010000000101000000000100000000
00001000000100000403054150503500545555544a5ad9daeaef4fae4d4ad4a4d454555055550050001000000100010000000000010000000010000000010000
0000000000000103054155505035051555454545a5d4f4ff9e4adaeadad4ad4f455a555010500011000000000001000300100010000010000000000000000000
01000100100100001015401503051050515454a5d4a4f9fffa64fead44ad4d9d4555545535550105001505151010030000000000010000101000000000000100
0000000000000301015541035150550505555554a5d9daeaeeae9f4fad4f44da4545554500500030100445044500000000000100005500040010000000100000
01001010010100010550545050550535053544545a4f4f9faf4f4af9eaf964ad4d5554b455050101010054014001010100100000100405500000000000000000
001000000000101050010555150530505055554a5d4f9dfe4fae4f4f4f4fad44a54b455550503001000054545000000000000100000155000000000010001000
00100001000000300301105505355150555555554a44f9eafe969d4444f44f4d4554550550500103030455440010100100000001000504000000000000000000
001001000101010101055505350550515050545a5d4f4f4f4ad9d9d4d454d9da5455555055050300105000450000030000000100010500501000010000500000
000100000000000101030130515515050555555444d9d9f4f9e4f44a55a545454545555555030010105455450301000000000000055000040000000000440000
0100001000103030103050550550550535055545545a4d9f4f4ad4d4a5554d45a555555555501010305554540000000000100000000000000000000000541000
00101000100000010305050551555530505555554a554ad4adad9fadaea4a5555555555505501030010055055010100100500010010000010001000000540000
0100000000101010105013511551505150550554554d4d9da4e4d4a4e44f4a4d4555555550503001054010054100000001950000000100000000500000545000
003010100000030103015050535555050505555544a5a54f4f4a4d9e44a5f4a55555555055550110355155014500100004445000000000000101450000440000
01010000103000030110515350555030515055555554d4a4d9d4d4f4a55454d44555555555050103000000035000000054f44000000000100004400001450000
0100300000001010105305055555305105055555544a54d4ad4a54ad5554544d454550505550301011130300010101054a54a100000000000000441054400000
01010010100100103010535151555015030505555555ad9d44d4d4a4a4d455a55555555305050103000010100000000445054410000100100000544444000000
1030100001051030150515555155510105055505554544d4ad95a5d4f4a545554b45555550510301130300103010304d91004450000000001000005545001000
01010030000054010311555505555035010505555554544d44d454a4d44a555455555555550305010101100100000544500054a1000001000000000045000000
103030003030054550515555553553005050305555554b4a5a5545da4d5554545555555550550130503050301030144500000544000100000000000044000100
101010100010000444555550555550501030505055555445454d45ad4545554b4555555055503050301010001001445000000044500000101000000014500000
030300010153010055455505355555030101050550555554d4a54d44d4d455455555505555550501010303010105455000000054410000000000000004450000
01010100300100550015455555555101010505050555555454d4545a4da545a55050551505051030505010010055450001001005440010000000000000444100
010010300100305503055551515553050010105055055555554b454d4555a5555555505050530501030010103045500000000005455000010010000000044442
1030010100300001150105555555510103010505055505554b445a55a5a555555550555305550305001030000554000000000100545000000000010000000000
101030010301110505155051535555030010500110505555545555555d4d4d455551505050050501301001010540010010010000055001000000000000000000
11010103001003011030535555555301010103050505555555554545454d45555555555505050310103010300050000000000000000000010010000010000000
150303001011010305151505355550501010101010505055555555545d4b4a555550505050305050300100000000101001010101001001000000001054545525
50305010105455555555554545455503010301050105050505555555a554d5545555550501050310501030101010000300000000000000001000100002444444
5150101030054444454444544da45301010000505050105055055555554d45d55555053050105105010101010003010001010301010101000010000000444522
15010301010004454454544d44dd5510503010011105105055555555555b4a545553050505050530303010301010001000000000001000101000100100044000
1553050501000444515555355ad45503000001003050530505505555545455555555505010013050505030010301010103010101030030000100010001044501
5050501030300544505035554d4555105010005005050505505555555554d54b4555550550305115010101030001003000010110100100101010001010054410
55110305010500444535505544d553501030100301050501151550555555a5545555050501001503113010101010300010105555551001000301030001054410
555305030101101444515554d4555503000001005050305050505555554555555555050305005150505050301030010103555355555500300001001030014451
15051110513030104445554455555550110100300105010105350555555555555553505010105051050301010100100350555505150551010100101001014454
551111503010511314445454555b5531030030010501010501050505555555555550550500505315301010301010035545505555553055001030103010304544
5153050305050305034454d55354d550101001010030101030505050555555555555050010151505051130101030105044505505355505503001001030154501
550511505111505150554d4355555550100100501000010105001355355555555350515050505350503010103001505554403055050555050010301001045500
15115031050305050554545555555531030010030105005010105050555555555555550503055051305050300105055004450000505545051010010301554010
515031505305131535544d445555d550501003000000100105050505505555555555055515053505050101010055550000445050015440111003010101055010
50350503051050505545554d45555553010300150101030050105550555555535555553050505515130530103050505100544103544400011010010301050501
550111505053051554555554d4bd5555101001000100001001050305050553555055555550551503050101010515053010044514445001003001030010101030
515050311305115554515355ad455d55301010010130100105030505515305505551505053053055051030101050350501024454400000100001001030101010
50503105050150555505155154d55555050301010000100010505050505505555055551505055505103050103050505550005444000101050100301010303010
51130505031053555515051555445555305001030110501003050505030550505550305050501130505010300504550505054440001011030000010301010101
105050311051055205053551554d4b55510103050110100300150530550505051115050305035050301101010105405035442042010105000101030010105030
1501050150305505515150553554d455103010010503050001050505050503505050505010105105050305010000441504420044505050300000001010301010
01031030105105505035053505535555305010110305010100105050505050105305030105010301101010301010045544000014405030010301010301010301
10305015030550550505350555555551010103005010103010053050350305050501001050305050301030000300044440011002450105010000030010103010
10101301050105031511505515555555030010103010305001005050050100030103505030500101003001030050004200105500445044501010001010301010
03050103105303105035055151505350100101010105010000301505105150101050010105010300100100001000005001505010044540000003010103010501
10103050501050510505511515355551001003001010101010500135050505050101103010010010010001000110100505055150052400101010001030010301
01010101030511053150350535505550000000105010501000103005030303010000300501050101000100010050005050550550004010100000103001101010
10305030511305305051505505555155000100010030030010305010505050101000010010003000301010000000100105055053001001030100000101030501
01010305030505051503515151505535000001003001001000000105010501010101005003050010000300101003010301303505500010000001030103050310
10305011050511305350505355155555500000100100100010105010503010500000500105001001030010030000000050000010010101001000001030105011
01010305031051555051535050535151500000001010030000010030305050030301030000100103001035051510500000100000000000000000101010503050
11130503105555555515051555550555100000100003001010103000500103000050001030130010115505550544101000001001000100100100003011305111
01050110555555555550550513055535500000001000000000000010050500101001030500001010050550555050550001000000010000010001000130501050
10305055505515555535135505553555000000000101010101010005003010100100000010500030135055050505355000000010000101000100301010513501
11050350555555355550505155515515500000000000000000001010100105000013050101001001050505505030550000010000100000300030001051050151
05103055515355550515153503550555000000000010101001030003010030010000001000010103015050501505050501000010003010001000103030305155
10315150555505555030505055055355300000100000000000000100001001001030500301000301005051051555050000010000300001000101010505151555
15001051505550503150535151535051500000000000100101010010100300010000010000101050100305305005000001003010001010301030130115055551
10350503030105030505010503050550500000000100000000000000010010101010100100030001030010050500000001300103010301010301050505555351
15010301050503150113053051505135510000000000010001010101001000000300010010001030001001000010010000010301030103010105031135535551
10503050503010505010501050350501100000000000000000000000030010300010003001010101010100010000001030301010505050503503105055555051
11305050301111030110305030013050530000100010000100103001000100001001000100300050103010000101000101050503010301110110501305505505
05050501050030501030101050500103010000000000000000000000010001010100300010001003000030350300103050103010503050305050310555555151
10301030103010003005050301030100100000000000100010010100000100000010001001000300103005003010300103010110305011050301050150515030
10503010500105010103001001000010000000010000000000000001010001010001010100100050300500100010050300503050501105030115031035505511
11050501030103001050100100101000100100000010000001000100000000001000000030010300010000030001001050105030110303050503050505035050
05030103001010100300000010000010000000000000000100000000000100100030103000000010100103000000100010301010305050111030503011505530
10301010100100010000101000100000010001000000000000001001000000000000000001000005030030500100030103010505050311503050110503503051
10105010103010000100000010001001000000000000010000100000000000010000000100001000001000010030001010103030503050115051050305055501
10500300300001030001010000100000000100001000000000000000010010000010010000000010300105003001010301050105115150301301305051101050
10301010010100000100000300000100100000000000000000000001000000000000000000000000001030100100300010305155545454555050103010535031
10101030100030100001030000100000000001000000000000000000000000001000000001001010301010301030050301055444545555454551105030501501
10303000103000010100000000001001001000000000000000010000000000000000010000010030010501050105010105545455050001055540501010105010
10100110010010000030001001000000000000000100010001000000000000100103000101001001050305030501030505505545303150105550030103010301
01050003001001030000100000001001000010000000000000000000010101003000010000030100100103050130505155030554501010354501001010100000
10301300100100000010000100100000010000010000000000000001555555500010103010000030130105013050115513050155450505045500103001010100
01000010030010101000010000000100000000000000000000100155505544445500030003010100001103050503555055051055550530555010105010000010
10103001000000000010000010010000100100000000010100015550555455554555000100003010501301050310555555103005545051454001030503010300
01000100010103001000010000000010000000010010000010015055155400004455550010100050030050105055505051550500555015550100101050000000
00300010000000000010000001000000000010000000000001055503004501000453551103001003001010301105555535051030045405550013050105010000
01001003010300100000010100001000100000000000100100503550104405010540505510001010010501050350505505505105055555250000505030100100
00010000000000003001000000000000001001001010000001050505004530500545055555010301001030503051553555053501004525550110503050030000
01000100010010000000000010010010000300000000030003055050005451501450530505530000003001010105050505550503005500255050305015000010
00000001000000100010010000000000100010300100000000105505000445035450105150550001000101030503505515051505000440052405050500510000
00100100001000001000000001001000003003000030100100050301000554554501505053055100100050101050515053505050101550000540501010030100
00000000100010000001001000000030000000100000010000100050100004545001050505005010010003010301053505053051300545000055505030500000
00010010000000100100000301030000103000001001000000010003000005450105113010501010003010130505305055105050100052050005550101011010
00000000010010010001010000000010000101000000303000003001010004524050505010103001000103050010105105515030505045010100250500500300
01000100000000000300000010301000301100301050010000000050500145004405050105010100100000001030501530505505050055501010055050030000
00000000100101030001030000000100001130000100005000001001010555000450305030300000101030100010103010530550301004010101005010101101
00000010000000000100001030100030100100100030100010000001010540000145050105050010300000010100301050150505010152501010005505010050
00001000103010300010300000030000030010505001030000000010505500010054010505000000503010100010010503050503501005501010100501050100
00000000000000001000001001000101000010000300000100000000010450000004503001000010000000010301001010105305050104050103000550000010
00000001000103010100100000030000010000300001050010000010105500100005500100000000010301000000100301030050503005500300010005010000
00010000010000000030010101001010000100010100003000010000000401010105400000000000000050103010030000101010501015010010000105000100
00000101000301030001000000000301000001001030100000000001005500000000500100010001003000301001000010010103015004500101010005010000
00101000300000001000103001030000010010100000000100000000000540010000450000000000100000000500000001000300100305001000101000500100
00000010001010100100000000000001000105030500100000000000000050000001500000000103000000103000010000030001010050500010030010010000
00100101000000300103000101001010010030000000000100000000000041001000400000010300010500000000000010000100003050001003000000005000
00000000010010001000010030100000000000101010050000000010000004000000500000100101000000100000000000000001000010000000001000000000
00001001000001000301010100010100010010000000000000010000000001000005000000000103000000000010001000100100010100101010000010000000
00100000001000100000000001000001000000001030101000000000001000500000000000100300000010500000100000000000000001000000100000100100
00000001000010001001030100300000001000000005010001000000000000000000000000010000001000000000050000000010010100001000001000000000
00000100101003000100000030001010100300100100103000000100000000000000000000001000000000000105000010001000000000100010000001000000
00010000000300000001010000000000000000000000000000100000000000000000000010010001000050010000000000100000000100000000100100001000
00000010300000100100000100100000000000001000000000001000100010000000010000003000001000000000010000000001010000010010000000000000
00000000001000000003000000000100010010000001000010000010000002000100000000000001000000010010000100100000000100000000100010000010
00010000100000101000001000010000000000010100001000000000001000010000000001001000010001000000000000001003000001001000001000101000
00000100000010000000100001000010010000000010000000010100000000000000001000000005000100010000000100300000010300000030000010000010
00000001000000000010000000010001000000010000300010000001000001010010000000010000000010001001000000000100030010103000001003001000
00010000000000001000000010000300300010001000000000001000010000000000100000000000000001000100001000010001000100000000000000000000
00000000010010000000001000000000000000000300001000000010000100001000000010010000001000000001000010003000001010301001001000000010
00000010000000101000000000000001000000100000100001000000010000000000001000000010000000010000030000100103000300000300000010010000
00000000000010000000100000100100010000000000000000000000000000000001000000100000000010000010000000000000010001030000101000301010
00001000000000000000000000000000000000010010000100010010000001001100000010010000000000000000000000010000000300000010000000010010
00000000010000000100000010010000000100101000000000000000001000000030010000000101001000001000100100000100000000100000010010001000
__label__

ccccccccccccccccccccccccccc11111111111111ccccccccccccc111111111111111111ccccccccc1111111cccc111111111111111111111111111111111111
ccccccccccccccccccc11cccccccc1111111111111111c1111111111111c111cc11ccc111ccccccccc1111111cccc11111111111111111111111111111111111
ccccccccccccccccccc111cc11cccc11cccc1111111111111111111111ccc11cc111ccc11ccccccccccc1111111ccc1111111111111111111111111111111111
cccccccccccccccccccc11cc111ccccc11111ccc11111111111111111ccccccccc11cccccccccccc11cccc1111111cc111111111111111111111111111111111
cccccccccccccccccccccc1cc11cccccc1cccc111111111111111111cccccccccccc11cccccccccc111cc111111111cc11111111111111111111111111111111
cccccccccccccccccccccc11111ccccccccc111111111111111111cccccccccccccc111cccccccccc11c11111111111cc1111111111111111111111111111111
ccccccccccccccccccccccc11111111111111111ccccc11111ccccccccccccccccccc11cccccccccccc11cccc111111111111111111111111111111111111111
ccccccccccccccccccccc11cccccc111111111cc11cccccccccccccccccccccccccccccccccccccccc11cccccc11111111111111111111111111111111111111
cccccccccccccccccccc111cccc11ccccccccc11111cccccccccccccccccccccccccccccccccccccc111ccccccc1111111111111111111111111111111111111
cccccccccccccccccccc11cccc111cccccccc111c11cccccccccccccccccccccccccccccccccccccc11ccccccccc111111111111111111111111111111111111
cccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11ccccccccccc1111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc11cccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc1111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccc1111ccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccc111cc11c1111c111cccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc11cccc11cccc111ccccc11cccccccccc1111111111111111111111111111
ccccccccccccfffccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccccc11111ccc11111111ccccccccc111111111111111111111111111
ccccccccccffff77fccccccccccccccccccccccccccccccccccccccccccccccccc1cc11cccccc1cccc1111111111111111111111111111111111111111111111
cccccccccfff77777fcccccccccccccccccccccccccccccccccccccccccccccccc11111ccccccccc1111111cccc1111111111111111111111111111111111111
cccccccffff777777fccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111ccccccccc11111111111111111111111111111111111
ccccccffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111cc11ccccccccc111111111111111111111111111111111
cccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11111cccccccccc1111111111111111111111111111111
ccccffff7777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccc111cccccccc111c11ccccccccccccc1111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccc111111111111111111111111111
ccccffff77777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccfff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccfffffff77777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11111111111111111111111111
ccccccfffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccc11111111111111111111111111
77777cffffffff777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777fffffffffffff7777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c11111111111111111111111111
77777777ffffffff7fff77ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111111
77777777ffffff7777fffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c111111111111111111111111111
777777777777777777ffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111c111111111111111111111111111
777777777777777777fffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777777777777777fffcccf77777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
777777777777777777ffffff777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
7777777777777777777fffff7777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
77777777777777777777fffff77777777777fffffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
7777777777777777777777fffffff77777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
777777777777777777777777ffffff77777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffff77777777777777777777fffff77777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
ffffff7777777777777777777fffffff777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffffff777777777777777777fffffffffffffff7fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc191111111111111111111111111
ffffffff77777777777777777cccccfffcccccccccccccccccccccccccccccccccccccccccccccccccccc9ccccccccccccccc199111111111111111111111111
fffffffff7777777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9f9cccccccccccccc9ff911111111111111111111111
ffffffffff77777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccff99ccccccccccccc9ff911111111111111111111111
fffffffffff77777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc999999999999999999999911111111111111111111111
fffffffffffffffff7777cccccccccccccccccccffffccccccccccccccccccccccccccccccccccccccc999999999999999999999991111111111111111111111
fffffffffffffff7f77777cccccccccccccffff77777ffcccccccccccccccccccccccccccccccccccc9999999999999999999999991111111111111111111111
ffffffffffffffff77777777ccccccccccffff77777777fcccccccccccccccccccccccccccccccccc99999999999999999999999999111111111111111111111
fffffffffffffffff77777777cccccccfffffff777777777cccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
fffffffffffffffffffff7777ffffffffffffffff7777777fccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff999990099999999999009999999911111111111111111111
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9999990099999999999009999999911111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9999999999999999999999999999911111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999991111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc99999999999999999999999999999991111111111111111111
d6666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999999111111111111111111
df66666666666666666666666666666666666666dd66666666666666666666666666666666666999999999944444444449999999999999991111111111111111
ddff6666666666666666666666666666666666ddddf6666666666666666666666666666666666999999999999999999999999999999999999111111111111111
dddf666666666666666666666666666666666ddddddf666666666666666666666666666666669999999999999999999999999999999999999111111111111111
ddfff6666666666666ddd66666666666666ddddddddff66666666666666666666666666666699999999999999999999999999999999999999911111111111111
ddddfd66666666666ddddf666666666666ddddddddffff66666666666666666666666666669999999999ffffffffffffffffff99999999999911111111111111
dddddddd666666ddddddddf666666666dddddddddddffdd77777777777777777777777777799999999ffffffffffffffffffffff999999999911111111111111
dddddddddddddddddddddddfd66666ddddddddddddddddd6666666666666666666666666699999999ffffffffffffffffffffffff99999999991111111111111
dddddddfdddddddddddddddddddddddddddddddddddddddd77777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
dddddddffdddddddddddddddddddddddddddddddddddddddd7777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddd77dd7777777777777777777999999ffffffffffffffffffffffffff9999999911111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddd777777777777777777779999ffffffffffffffffffffffffff9999991111111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd7777717177777777779999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd717771777777777777999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddd9dddddddddddddddddd71717777777377777999fffffffffffffffffffffffff99999911111111111111111
dddddddddddddddddddddddddddddddddddddddd979ddddddddddddddd1dd1711771777377711999fffffffffffffffff5fffffff99999911111111111111111
ddddddddddddddddddddddddddddddddddedddddd9dddd1ddddddddddd1dd111117111773711199993fff3ffffffffff5fffffff999999111111111111111111
ddddddddddddddddddddddddddddddddde7edddddd3dddd1dddd1dddd1d3d131111111173111109993fff3ffffff5555fffffff9993999111111333111133311
ddddddddddddddddddddddddddddddddddeddddddd3d33d11dddd1d111d3313131111111313300999939933f3fff67ddfff3f999993333333313333333333331
dddddddddddddddddddddddddddddddddd3bdddddd333dddd1d3d1dd11113331311313111337700999393333333367dd39933933333333333311333333333333
ddddddddddddddddddddddddddddddddddbdddbddd3dddddd113301d11313331333333138877773333333333333367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbdbdddddd33dddd33010330333313333113333888777777888888888883367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbbbddddbd33ddddd30133b3333311333133333887733337788888998888867dd23333333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbdbddb33b33333d33bb333333333333338888877333377888893a9888867dd22888333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbbbbbb33b33bbbd33bb3333333333333888888873333722889999a9888555528838333333333333333333333333333
dddddddddddddddddddddbdddbdddbbbbdbbbbbbbbb33bbbbbbbbbb3333333333888888888888888888999999888888888883333333333333333333333333333
ddddddddaddddddddddddbbddbbdbbbbbbbbbbbbbbb3bbbbbbbbbbb3333333383888888888888888888899992288888888833333333333333333333333333333
ddddddda7addddddddddddbdbbbdbbbbebbbbbbbbbbbbbbbbbbbbbbbb333388888888888888888888888899228888888388333333333333333333333b3333333
ddddddddaddddddddddbbdbbbbbbbbbe7ebbbbbbbbbbbbbbbbbbbbbbbbb3888888888888888888888888888888888883883333333333333333333333b3333333
dddbdddd3ddddddbd333bdbbbbbbbbbbe3bbbbbbbbbbbbbbbbbbbbbbbbb888bb88888888888888888888888888888883833b3333333b3333b3333333b3333333
dddbdddbbbddddbbd3bbbdbbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbb88888b8888888b88888888888888b888888b83333b33bb333b3333b3333333bbb3b333
dddbbdbbbddddbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb8888888888888bb8888b8bbb3b3b33bb333b33333b33b333bbbb3333
dddbbddb3bdbdbddbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb888bbb8bbb888b88888b88bbbbbbbbbb333bbb333b33b33bbbbb3333
bbdbbbdb3bdbb33dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbb88888b8bbbbbbbbbbb3b3bbbbbbb33bb3bbbbb3333
bbbbbbbb3b3bbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbbbbbbbbbbbbbbbbbbbbbb3bbbb3b333b3333
bbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbb3bbb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b3b3bb3bb3333bb333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b3b3bb3bb333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333b3333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3b3bbb3333bbb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb33333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3b3333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33333333333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333333b333bb3333333
bbbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333b33b333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b33b333333333
bbbbabbbbbb3bbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bb3b33b333333333
bbba7abbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33333bb33
bbbba3bbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33b33bbb3
b3333333333bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b3bbbb
b3bb3bb3bb3bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbb
b33b3bb3bb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3b33b33b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbb
b3bb3bb3b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

__gff__
0081030301811303030301010000010003030101010103030101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
fffffff0ffff0ffd89e32fc19aa67c51f47fc01ffcc05f7c3c8cff11bf818b9b851f420042b8c21112fee70148c0f8f821e008c20b0a84ff733842c042f8295c940f8c62f83f23e01906fe092f3811f00dff6fc641c03fe046f8427887ff73183f50caf8851bc3f87ff12338f818ffb342f9df13065ec2ff8a7084ff3fc0022e
12f03fe3e37fce013ef0bfe6ff2ff0ff57f8ffd360e003ff7f3a20bce1ff1f87833ff8ffc760fcc1ffbf0eff7f1f08c0cdff82ffbf03168484ff7f0bce4258085ff8ff8f0148180290e10bff3309ffd3702402168431aef07f927593ff2732788681ff215f0207ff5719070165fc9f780438c2ff344c7e201cfcdf643ce07fca
c107c1c7ff4ac617fec782977081ff8f8c13fc6f255c24e024fc2fc3ff990ffcc5ffdfe4ff007ee7ff8f12fe1789ffff6f08c0ffff178430feff7ea83c82ffffcd8df0ffafc31fe0ffdf08fe47899ff8ff3f89ff83952b9c99ff3f13fe47f2519af8ff3730e17f22e40a02feffd2f03b7f3090c4ffff41f89d4b4e59e2ffff10
fe9784ffff44f81f72642be4ff6f70f0ff4b207cfcff6ffe08ffffc4fe871c5c25f9ffd3e18fc2ffdf90ff6558f82095ffbf4c180f1bfeff3168380bff7f8df25bf82bfcffbdf02ff8ffafe1672efeff43ea7f127e92121ef93fa6fe59f8972bc98ffcaf63f883f12b5ff843feffc3f0bf4df2caff5f88fe0f79e59025fe92f1
ff17c2ff6963a91f648941fe47f6bfe497851a3933e1e37f633f871ff9273c591e3bc233c9ffc4fea7fcc498fd012ef9ff83e1e27fc0ffc881173ce1ff8fcae1f8ffd9ff5f73fcff3cffffc9fe17e137fbffff865cf9ffc7e1afede8ffca85ff8fe3f49dfc007eca35f2bfb125f9ff2be12ffbdf4827f99fd8ffba8fe4070b7f
8027c9ffc2fe57e11fccf2b22cb75c24c9ffc04efb8bbf198c1c5c593e7901d7ff07fcc7ff843f6a567ef2fcedb8c2af7ce1bff00b3fdbff24fcccff22fcbf72f5ffbff1bf03c05f791cfc6f1cff7f83f29790ff91fcff1bd03e38f9ffcf8d90c299f8fff07fcffc744402474eff173b12fff3087ed90c32421c83849ff2faff
17b9355f9bf885091c5442963709e7c66187fd7f930b5d5ed9350bc391385dc3f26c9c520e494e1f6184ff4f729f40220d04b2c44190cbd67110b2efb93a721096b8c3ff66d70f1eb19a6382a06982157ce8210924d22542867be2e5ff931f2493e8f1894d481cf4e08f3f8ec439f99ff0bfdc18310cdd6e2091c58365e569ea
95f1ff3f2258788e438207cd6152c006ea43f4c82ff97f87030788d0c31124f9411f4ef80707f63591ff2faf9c96f0931cfb83ee975f58f201d9fbc70f512bbff363c242001e0b0d07a75d76f2f9e30abf73e51f3f2432fc232fd7c25ff9c5f6cf7cf27fe049863790d09c4ef983097e4c62e109f831f1479e7f5e802b825f11
f9594e0cff0712e678466d9cfbe1cadf810fff0f88c41316fe4c6018fe083fe70fe34afc118e400ef0138667482a18c6ff499e05841fc0020c7f6c08214308f922c0c2ff949384302b022e063eca41c27158e2ffca4f213cdc618c845b2e09ffff28fc4a00c20f24fcff557280f00fff7f120ce0ffbf0f06e00affff39fc42f9
ffc724349cfcffe9d0808bff3f5c1046f8ffeb0316feff3f8087ffbfcecbff3f0f77f82b8fff3f1bfe8c0fff7f34fc9c7fbeffbf19be081e967f1c9e66feff6148f82909ca92e0ff7f7281ee49cec4ffdf0d0bece408ffff7430044110f0ff7f2938863ff8ffd70f20e0ff6f872308ff7f9d868fffffceffff2f000000000000
