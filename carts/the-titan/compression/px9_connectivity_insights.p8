pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- px9 data compression v9
-- by zep & co.
--
-- changelog:
--
-- v9:
--  @pancelor
--  ★ redo bitstream order
--  234 tokens (but ~4% slower)
--
-- v8:
--  @pancelor
--  ★ smaller vlist initialization
--  241 tokens
--
-- v7:
--  smaller vlist_val by @felice
--  7b -> 254 tokens (fastest)
--  7a -> 247 tokens (smallest)
--
-- v6:
--  smaller vlist_val by @p01
--  -> 258 tokens
--
-- v5:
--  fixed bug found by @icegoat
--  262 tokens (the bug was caused by otherwise redundant code!)
--
-- v4:
--  @catatafish
--  ★ smaller decomp
--
--  @felice
--  ★ fix bit flush at end
--  ★ use 0.2.0 functionality
--  ★ even smaller decomp
--  ★ some code simpler/cleaner
--  ★ hey look, a changelog!
--
-- v3:
--  @felice
--  ★ smaller decomp
--
-- v2:
--  @zep
--  ★ original release
--
--[[

	features:
	★ 273 token decompress
	★ handles any bit size data
	★ no manual tuning required
	★ decent compression ratios


	██▒ how to use ▒██

	1. compress your data

		px9_comp(source_x, source_y,
			width, height,
			destination_memory_addr,
			read_function)
				
		e.g. to compress the whole
		spritesheet to the map:
		
		px9_comp(0,0,128,128,
			0x2000, sget)

	…………………………………
	2. decompress
	
		px9_decomp(dest_x, dest_y,
			source_memory_addr,
			read_function,
			write_function)

		e.g. to decompress from map
		memory space back to the
		screen:
		
		px9_decomp(0,0,0x2000,
			pget,pset)

		…………………………………

		(see example below)

		note: only the decompress
		code (tab 1) is needed in
		your release cart after
		storing compressed data.
		
]]

function _init()

	-- test: compress from
	-- spritesheet to map, and
	-- then decomp back to screen

	cls()
	print("compressing..",5)
	flip()

	w=128 h=128
	raw_size=(w*h+1)\2 -- bytes

	ctime=stat(1)

	-- compress spritesheet to map
	-- area (0x2000) and save cart

	clen = px9_comp(
		0,0,
		w,h,
		0x2000,
		sget)

	ctime=stat(1)-ctime

	--cstore() -- save to cart

	-- show compression stats
	print("                 "..(ctime/30).." seconds",0,0)
	print("")
	print("compressed spritesheet to map",6)
	ratio=tostr(clen/raw_size*100)
	print("bytes: "
		..clen.." / "..raw_size
		.." ("..sub(ratio,1,4).."%)"
		,12)
	print("")
	print("press ❎ to decompress",14)

	memcpy(0x7000,0x2000,0x1000)

	-- wait for user
	repeat until (btn(❎) or true)

	print("")
	print("decompressing..",5)
	flip()

	-- save stats screen
	local cx,cy=cursor()
	local sdata={}
	for a=0x6000,0x7ffc do
		sdata[a]=peek4(a)
	end

	dtime=stat(1)

	-- decompress data from map
	-- (0x2000) to screen

	px9_decomp(0,0,0x2000,pget,pset)

	dtime=stat(1)-dtime

	-- wait for user
	repeat until (btn(❎) or true)

	-- restore stats screen
	for a,v in pairs(sdata) do
		poke4(a,v)
	end

	-- add decompression stats
	print("                 "..(dtime/30).." seconds",cx,cy-6,5)
	print("")

end

-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 8 and
	-- 15 bits long with the next
	-- bits in these positions:
	--   0b0000.12345678...
	-- (1 is the next bit in the
	--   stream, 2 is the next bit
	--   after that, etc.
	--  0 is a literal zero)
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<8 then
			-- cache next 8 bits
			cache_bits+=8
			cache+=@src>>cache_bits
			src+=1
		end

		-- shift requested bits up
		-- into the integer slots
		cache<<=bits
		local val=cache&0xffff
		-- remove the integer bits
		cache^^=val
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)
		end
	end
end

-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function
	px9_comp(x0,y0,w,h,dest,vget)
	local mytable = {}
	local dest0=dest
	local bit=1
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	local cache,cache_bits=0,0
	function putbit(bval)
	 cache=cache<<1|bval
	 cache_bits+=1
		if cache_bits==8 then
			mytable[dest] = cache
			poke(dest,cache)
			dest+=1
			cache,cache_bits=0,0
		end
	end

	function putval(val, bits)
		for i=bits-1,0,-1 do
			putbit(val>>i&1)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if cache_bits>0 then
		-- flush
		mytable[dest] = cache<<8-cache_bits
		poke(dest,cache<<8-cache_bits)
		dest+=1
	end

	local str = ''
	for i = dest0, dest do
		-- str ..= (chr(mytable[i]))
		str ..= chr(peek(i))
	end
	printh('compressed to ' .. #str .. ', ' .. #str/8192)
	str = escape_binary_str(str)
	print('' .. dest-dest0 .. ', ' .. #str) -- .. dest0 .. ', ' .. dest .. ', ' .. str)
	printh(str, 'output.bin')
	printh(str, '@clip')
	return dest-dest0
end

function byte_to_hex(byte)
	local hi = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte\16]
	local lo = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte%16]
	return '\\x' .. hi .. lo
end

function escape_binary_str(s)
 local out=""
 for i=1,#s do
  local c  = sub(s,i,i)
  local nc = ord(s,i+1)
  local pr = (nc and nc>=48 and nc<=57) and "00" or ""
  local v=c
  if(c=="\"") v="\\\""
  if(c=="\\") v="\\\\"
  if(ord(c)==0) v="\\"..pr.."0"
  if(ord(c)==10) v="\\n"
  if(ord(c)==13) v="\\r"
  if(ord(c)==9) v="\\t"
  	-- v = byte_to_hex(ord(c))
  out..= v
 end
 return out
end
-- 40% - 50%
-- 14 images per cart...
-- dw = 8 images per cart...

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01001001010010010010010010010010010010010010010010010010010010101010010100101001010010010010010010010010010010101010010101010010
00000000000000000100001000000000000000000000000100000000000100000000000000000000000000000000000000000000000100000000000000000000
00100101001010100001000010101010101010101010100001001010100000010001001001001010010101010101010101010101010000010010100100100100
00001000000000001000010000000000000000000000001000010000001001000100000000100000000000000000000000000000000010000000000000000000
01000001010010100010000100100100100100100100100001000010000000010001010100000100100100100100100010010010010000100100101001010100
00010010000000002000200000000000000000000000001000001000101010000000000001010000010000000000001000000000000100000000000000000000
00000000020102000000001020020020020020020010100010100000000000100101001000000010000010010010100010101001010001010101001010010010
01010200000000001010000000000000000000000000000000000101001000010000000010010000101000100000000000000000000000000000000000100000
00000001001000100000200100101010100101001010020100200000000020000100200000000200000000002001002001001020010200100200102000001000
00100100020010002000000002000000000000000000000000001002001000100000001010200000100201000000000000000000000000000000000010000010
00000002000002000010101000001002010200102002000101000000000000001001000000000100000000001001010010100100100010010010010000102000
01020100001000010000000200100200000000000000010000010100100101000000010010010001010010000000000000000000001000000000000010000000
00000001000200002010200000020000010010200101000200000000001000010200000100000000000000101010010100200101000010101010101000000100
01001000200001000000002010000010002000000000020001002001000001000001010001001010010100000000000000000000020000000000000001010000
00020020001002010200200000200100200010010200000000000000100200000100000000000000000001002001020010010100000010020010020000000010
01000000100200000000001020001001000002000001001010200100000000100000100200101002001000000000000000000002001000000000000101002000
00201020020001020202000000100200020100020010020000000010201010001000000000000000000020010010010010100100000001001002000000000000
00000000000100000000020100020002000020000002000010010000000000100025101010100200101000000000000000000000100100000000010010010010
0102020201002020200200002000555101000010200000100000200100100000205d500000000000000001001010101010020010000001010100000000000000
0000000000200000001001000205d66dd202000000101002010000000000200000dd500100101001001000000000000000000000010000000001010101010100
02020102000202010200202001567776651002020100200000200102010000101010010000000000000010101002001002001010000102001000000000000000
00000000200000000001000102df77766d5000000020001020000000002001001001000010020010101000000000000000000000100000000010010010002000
01020200020205d41200200205677667665102010000100000010200255d10020100100000000000000001002001001010010010002000100000000000200010
020000500000147650100200156776666d5200002020020020000005d67665110000001010100100100200000000000000000000100010001020010200000000
0010200205020676552505502d66766d6d510500000000010010101d77766d500102000000000010000000100100101001010100000000000000000000010010
01020100000051555001205105d666d6d65010202050202001020026767666500000010020012100200100000000000000000002001001010010100010000000
020002020202002002000000205d6d6dd4102001000100010200015667666d510100102000005d50000001010010100200100200000010000000001000101000
0010200050002005002020200504ddd655050010201020000001005d76666d500025551011115651010000000100000000010000010000101001000010000010
0202010202050500200050020050554505002000002000201000201d666d6d501056dd5551025510000101000000200101000001000100000000020000010000
00500200500020200205020050020505020501202100500102000155d66dd50000665dd005000100100000020020000000001000010001002002000010000100
12dd50500202510210502050202050505010205551020100005150005555500101565d5000010000001002000000010010000010000100000000000000100000
5dff65020505655020200201020055d1020200dd55005020205000155101010000155d5010001001000000001001000000200000100000200100101010001010
d77765205020d5020502002020505dd4150051555155550511010210000000121001100000100000020100100000001010001010001000000000000000000000
df6d6505002020205020505050255ddd50201025555d66d5102005120105020dd500101000210102000000000100100000000000100020010010010001020000
56ddd4502020505020202020255d5d451205020511677776500511000500105565550000115d5000000100100000001001010010002000000000000100000100
555d4502050202020205020555dd51550551455121f7776d450512010050050551512010026d5100010000001010100000000000200000101001010000100000
1045050202554120505205020d6550521514777d55f776d655121055502100105010500000155101000101000000000101001020000010000000000010000100
21020205050f55020205202525552555025d6776d5766dddd5555455d50550105150150100000000000000010010010000000000001000010101001000010000
1250502042552120404052050510215251567766656fddd455556ddd65101002005ddd5001001010101010001000000100200100100001000000000002000010
50202552050204052152055020250551555df766515f664d555d6666f6510210156f761100000000000000200002000000000000000100001001010000001000
55550405202505255025525252025255215466d45115d5555d555dd6665001051f77751251020102002000000100010101010101010001000000000200100000
566525205402204042020502052050555555155105505555d555d555511214506f67650550100000000010010000000000000000000100010100200000000100
d6655054554552040525425040250455521521520215665dd55d5105510105115666655505125510010000100010100100010010010000000000000100100000
6dd5225d76552552520450425204dd5d152151050515ddd65666d5501050500005dddd105d555d00000100001000000002000000000010100200100000001010
55d5552d76d4040404554555554d64d252150250255555dd6777fd0151000101014dd100d6d50105d50020000010020000001002001000000000001010010000
55dd5254d645525252546f7f5555d4d55552502550255d55677766105020500205d6550056d5005dfd0000102000000100100000000020010010100000000010
525d55555452545254547777d45555d5d55552551215551567666d555d5501001d7f65515050100dd41010000001000000001001010000000000000101001000
55ddd5254525404245547766666d4d5d5dd55514df55511556d6d510f77d52555f77651101000015110000100100010101000010000100101010010000000000
555ddd4525545425454d76666f4667d6d45552556d5555205ddd555d7766d5111566d50052550100000100000001000000010000010000000000000100200100
52d4dd5454524244dd4df6664ddf7766dd55d505d55551555555511d6765511020555d50157d0001010002010100001001000200000101002001020000000000
525dd4d4544545476f4454d44df677665d52521555555555dd510505ddd551550010550125d50100002000000002000000020001010000000000000010010100
5454dd45454444664d44d4d4dfdf666d4dd55145025d15d666dd55515156d5555155555010001002000010010200010102000000000020010010001000000000
524544d4d4454d4f444644dadf4dd4d4dd55255125d52d7777777d50106751011566d55dd5100100010001000000000000000100010000000000100001001010
4544dd464d44d446444d4646dd444d4d565555255555d67776776515525d510501fdd11555150200100200020001001000100001000100101010001000100000
54544dfdffde4f4e464f46d4f4545dddf6d4d5551255777676dd555550551501005d5015d1010511020001000100000010001000010000000000100010000200
42454df6f644444f44fdfff4dd4d464ddf55d5252dd667776d6d55511555551255d5555d55515050501100010001010000100010000010010010000000200000
45444e7777ff6e444ff7f6f6dff666d4455d5552d7666667d5555d1510555d505dd515551501051115d6d5100100001020000000101000000000200200000010
6444dd777676ff4f4f776f6fe66f444dd4dd4d256ff6d55dd5d551552511dd5556550155100500025677fd500001000000101010000020020100000000100000
6d4447f6fff77fff4ff7fff66f6d6ddd6d4d525566d6d555555555d5d555d6555d51051105001000df7766d10200020255520000020000000000100100001000
4ed4e66ffef7766ef4f7fdf477e444f6f6d45554dfd655d5511155151555dddddd51155550102020d6766d510101005dd66d5101000001001010000001000010
d4f444f6fff67fff9f4feaef64d46d466664e45d54645d552552121051025ddad555555d51251515d676ddd1010205d67766d100001000000000010100010000
4646e96effff7e9eee96fe6f4eade4f7776666d466dd5d5555551525250104d6d5505111515150505d6ddd501001156777666510000010100100100000000100
de4644eaefeff9efaefff6ff6dfe4667676f666d666ddd5d255525055525556dd510102005555001015d55000000557776666520101000000000000101000000
e44fea4eff9f9fffffff7fff7fdf6f6666fdfdf6666fd44d45d4546d4d52546fd4542525202502502055055125202d677666d450000010010102001000010100
f4ff4effff6f77fffff7ff4f7ff4fd9de644ff6fdffdf4dadf644d444d445effd45544524454454454545454524544676766f510010000000000000001000000
4e94ae9fa9af7af77ff7fff77ef6f644446466ffedf6444d4664d44d4dd4466f4544554554545455525255040550556f66fd4510000100200100100100002000
47f4e9ef4fa777777ff7f9eae96f4f4f644dff6d46654554454d45555545676655555505566d5150205002050202055d64d45100100000000000000002000010
ef4494ea9ea77777ffaf4fefffff444444d476f6455d76ddd55d55555555777d5050d60205510505050500500005051555550100001020010101010200001000
444e4efe9ef7777ffff4aef77767fde4d4d6df765df6d46d452555255215667d5550505050050020100020010201050005001001000000000000000000100000
44f4f9e94a7777faff9e9ef7777644df66466ddd4d6dd6dd550d5550505556d51515020205010500020101020105000100000000102001010010020000000100
44444f49ee7777af7f49e96777764446d6ddd4455dd56f6651455125120515551505050550102010500102051501010001010100000000000100000010010000
444f4f449f77776ff99e4f4f76f44444ddfd6d5ddd4556665555511205502015505020155102010105102156d502000200000010100101001001001000000010
4444f4989ef7f7f996e949e494ed445466d46d4d6d555555dd66d5155d65150515020105102015502d100577f500010001010000001000000000000010101000
44464444e9fffff9efe9e4e4e4d44d4d7f6ddd55f77551155d6765120d6d05150210501001010100001055676510100100000200200001010200101000000000
5d47449e4949f9e94f4e9e4f664444546d6d455d776d555ddd6f5515555110525d61052020105010105015d65500010001010001000100000000000001001010
fe7f444494e9e49efe9444ad4f44d4d4666d5ddfdd6d5d5dd5d5551111105011d7651d4501010020100001151010100100000100010002001010101000000000
66644e44449e4949eaee4e6fdd4d445d4d6df6677dd55d5d6d55151251502105dd515f6501020100020100000100020010200001000100000000000020100100
66d4d444444498444eda4f66fe64dd45554d66f7fd5d5556651511515050150545105d5101001010101020105002000000001010010001010100102000000000
df44444449444494e944fdf6d4df4ddd45d5d6dad5555d15d5151515511201576d15501050501020010001000100010101010000100100000001000000101010
d46d444444444444444edff6e46d44645d55565555d5d15115151515105050d66515110101010101010500101001001000002010002001010100000100000000
66764444444444444e44f4664d4d4d4ddd4dd5dd155d15dddd55151515111550515d105050102010200101010100100102000000200000000002010001001000
ddd6d444444444444446444d4d4d46ddadd5555d5551515d6f615d651105151156f6550101010101010100200020010000101010000101020000000100000010
444d6645444444444f44d4d44d4566f65d55555551d1515d6661566d15115011d776d50110201020105010010100101010000100100000000100100000100000
55244d6d444444444d44d4d4d4ddf776d655555dddd155556d555d6511551215f666551050105001010010101010000200101001010101010010001001001000
22525456d44444d44fd4d44d464666764d555551dd551dd51551155150511050dfddd10101010110501020010002010010010010000000000000100000000100
52525244d6d4544dd6464ddfddad6f7d5d55d152551d1d6d151515111551551515d4511110501050010101020100101001001000201020101010001010100000
2040450454dd4d4646d4d4d4d55556d5555d5d55551155d351515151511515511151105050110201010101001010000100100200000000000000200000002010
52220425254ddddd4dd4dd455555554d555555ddddd5111515151511551151010101050101020101020100500101020010020001010101010200001010200000
02042042525544ddddad455545252555d551555d6651515151515115511511150511101111011010101020010010001002000100100010000010100000000010
25204502504045544555554555555555555515dd5d51151515115d55155105011010511050501050101010101020100100010010010100101000001001001000
02040225222504045525250520251255555d21dd5155515151511551511110505150105011011010501010102000010010100100100010000101000100000010
2040405020425250250404525552555dd125551dd15d151115ddd555111051111011501105105011010501000101010100010010010002010000100002010000
5025040404050404045250502550525d55155dd15515d1151d7dd1d1115110501110111110110101020010201010000020001001002000002010020100000100
0402022040220252502052520455151555111dd15d1155111d76d511110111115051105050105050101010010001020100100100200101000001000001001000
202040502505205025520505555215215125551515d15d515d6d5511151105011101501105101101010101010101001001010020000010101000010100010010
0502050402504042020525205051205151111151115d11d1d7655110501505110510111050110102010101001000100100002000101000010101000001000000
12050202050202055020505212105515125151151515d555676d1111110111051051105101105010105002010201010010200010010010100000201000010200
0202025020404050250402050525051121151211511115d577651105051105105101501110501105010100100000002000001001001001002010000102000000
02050202050205202051250520151205051115151115115d66d55111101511110111050105010201010010010110200010100100100100200001010000010100
05020505020502050502051055050515115050511511111515511050150101051110511110110101002010200001001001010010010020001010001010000010
02002020202020502020502505121120511515111051150111111111101151110505010205010101010100010100100100001001002000100100100001010000
00205002050502050505050502015051120511121505011111050105051010505011101010110501010010100100010001000100100010010010020100002010
12050205020205020250205021505115051112011111151050511110111150111110511105010101020101010020001001020010001001001002000020100000
00020020050502050050502105050205111505151505101501101051105011101050101050102010000010002000100100000002000100100100010000001001
12002005020020502050205050511111050511101111111111110501050110511101110501010102011002000010010020010100010010010001001010100100
00500502002010050502050502102051511115051505050105050111101105010510201010101001000500010100001000100010101002001020010000010000
02010200500502020101050110511105050501511111111110101101050501105010110501050100101001000010100010001000000200000001001010200100
00020050020020501205012051010511111151011050110505110505011011050111010101001010100100101000002000100201020001010200100020000010
10201002005001020050201010215050205105115111505010101101101105011010501050101002010001000010100010000000000100100010010000101000
00002020100205005002010512010501111111101050110111050110110501101050105001010200001000010000001000101010101001001001002010000100
02010000202000200201050201051115050502151111051010101010501010110101010101020001010020002010200010000000000100100100100001010010
00102050000505010105010105010201111110101050101105011050101105010501010101000100100100100000001000201020101001020010010100001000
01000002050000102050102050150110505051150501110501105010101010101010201020101010001000001001000010000000000200000100200010100200
00202000001020200100201010105050110101011110501010101010105010501020010000010001000010100010010000101010101001010010001000020000
10000502010200010201010505010111051120501050110501010105010101010101010110101010020000001000001020000000000100001000100102000100
00200000020010500050105010205010501011110501011010501010101020101010101001000002000101000020100000010201020001010020010000010010
00010201000100020100200101011050110501050111010101010101020101010200100200102000010000201000001001000000000100200100100201000000
01000000201020100105010205010102011105011010501020101020010010100010050010000101000100000001000010010101010010001001001000101010
00202010000000020020010101050201105010101101010101010101010101020101001001010000010001001000010000000000001000100100100010000100
00000002010205001001010101010110101051050102010500101001010100101001010010001010000100000010002001020101000200010001002001010010
01010500000000100500102010201010501101010501010010102010010020010100200100200001010001010001000000000000200001000200100010002000
00000001020102010010200101010501010201020101010101000101020101001010010010001000000200000200010101010010001010020001001001000010
01020000000000002000010102010010501010101010102010201001000010100020001000100020020000100000100000001000100001000100100100201000
00000102010501000102010200105010101010501010100100100100501001010100100020001000000010001010001002000010010100010010002000000100
01010000000000201000100010010102010501010102010101010050001010020010010000100010101000000000100000010002000020001000200010101001
__label__

ccccccccccccccccccccccccccc11111111111111ccccccccccccc111111111111111111ccccccccc1111111cccc111111111111111111111111111111111111
ccccccccccccccccccc11cccccccc1111111111111111c1111111111111c111cc11ccc111ccccccccc1111111cccc11111111111111111111111111111111111
ccccccccccccccccccc111cc11cccc11cccc1111111111111111111111ccc11cc111ccc11ccccccccccc1111111ccc1111111111111111111111111111111111
cccccccccccccccccccc11cc111ccccc11111ccc11111111111111111ccccccccc11cccccccccccc11cccc1111111cc111111111111111111111111111111111
cccccccccccccccccccccc1cc11cccccc1cccc111111111111111111cccccccccccc11cccccccccc111cc111111111cc11111111111111111111111111111111
cccccccccccccccccccccc11111ccccccccc111111111111111111cccccccccccccc111cccccccccc11c11111111111cc1111111111111111111111111111111
ccccccccccccccccccccccc11111111111111111ccccc11111ccccccccccccccccccc11cccccccccccc11cccc111111111111111111111111111111111111111
ccccccccccccccccccccc11cccccc111111111cc11cccccccccccccccccccccccccccccccccccccccc11cccccc11111111111111111111111111111111111111
cccccccccccccccccccc111cccc11ccccccccc11111cccccccccccccccccccccccccccccccccccccc111ccccccc1111111111111111111111111111111111111
cccccccccccccccccccc11cccc111cccccccc111c11cccccccccccccccccccccccccccccccccccccc11ccccccccc111111111111111111111111111111111111
cccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11ccccccccccc1111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc11cccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc1111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccc1111ccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccc111cc11c1111c111cccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc11cccc11cccc111ccccc11cccccccccc1111111111111111111111111111
ccccccccccccfffccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccccc11111ccc11111111ccccccccc111111111111111111111111111
ccccccccccffff77fccccccccccccccccccccccccccccccccccccccccccccccccc1cc11cccccc1cccc1111111111111111111111111111111111111111111111
cccccccccfff77777fcccccccccccccccccccccccccccccccccccccccccccccccc11111ccccccccc1111111cccc1111111111111111111111111111111111111
cccccccffff777777fccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111ccccccccc11111111111111111111111111111111111
ccccccffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111cc11ccccccccc111111111111111111111111111111111
cccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11111cccccccccc1111111111111111111111111111111
ccccffff7777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccc111cccccccc111c11ccccccccccccc1111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccc111111111111111111111111111
ccccffff77777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccfff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccfffffff77777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11111111111111111111111111
ccccccfffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccc11111111111111111111111111
77777cffffffff777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777fffffffffffff7777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c11111111111111111111111111
77777777ffffffff7fff77ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111111
77777777ffffff7777fffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c111111111111111111111111111
777777777777777777ffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111c111111111111111111111111111
777777777777777777fffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777777777777777fffcccf77777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
777777777777777777ffffff777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
7777777777777777777fffff7777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
77777777777777777777fffff77777777777fffffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
7777777777777777777777fffffff77777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
777777777777777777777777ffffff77777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffff77777777777777777777fffff77777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
ffffff7777777777777777777fffffff777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffffff777777777777777777fffffffffffffff7fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc191111111111111111111111111
ffffffff77777777777777777cccccfffcccccccccccccccccccccccccccccccccccccccccccccccccccc9ccccccccccccccc199111111111111111111111111
fffffffff7777777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9f9cccccccccccccc9ff911111111111111111111111
ffffffffff77777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccff99ccccccccccccc9ff911111111111111111111111
fffffffffff77777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc999999999999999999999911111111111111111111111
fffffffffffffffff7777cccccccccccccccccccffffccccccccccccccccccccccccccccccccccccccc999999999999999999999991111111111111111111111
fffffffffffffff7f77777cccccccccccccffff77777ffcccccccccccccccccccccccccccccccccccc9999999999999999999999991111111111111111111111
ffffffffffffffff77777777ccccccccccffff77777777fcccccccccccccccccccccccccccccccccc99999999999999999999999999111111111111111111111
fffffffffffffffff77777777cccccccfffffff777777777cccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
fffffffffffffffffffff7777ffffffffffffffff7777777fccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff999990099999999999009999999911111111111111111111
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9999990099999999999009999999911111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9999999999999999999999999999911111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999991111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc99999999999999999999999999999991111111111111111111
d6666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999999111111111111111111
df66666666666666666666666666666666666666dd66666666666666666666666666666666666999999999944444444449999999999999991111111111111111
ddff6666666666666666666666666666666666ddddf6666666666666666666666666666666666999999999999999999999999999999999999111111111111111
dddf666666666666666666666666666666666ddddddf666666666666666666666666666666669999999999999999999999999999999999999111111111111111
ddfff6666666666666ddd66666666666666ddddddddff66666666666666666666666666666699999999999999999999999999999999999999911111111111111
ddddfd66666666666ddddf666666666666ddddddddffff66666666666666666666666666669999999999ffffffffffffffffff99999999999911111111111111
dddddddd666666ddddddddf666666666dddddddddddffdd77777777777777777777777777799999999ffffffffffffffffffffff999999999911111111111111
dddddddddddddddddddddddfd66666ddddddddddddddddd6666666666666666666666666699999999ffffffffffffffffffffffff99999999991111111111111
dddddddfdddddddddddddddddddddddddddddddddddddddd77777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
dddddddffdddddddddddddddddddddddddddddddddddddddd7777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddd77dd7777777777777777777999999ffffffffffffffffffffffffff9999999911111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddd777777777777777777779999ffffffffffffffffffffffffff9999991111111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd7777717177777777779999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd717771777777777777999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddd9dddddddddddddddddd71717777777377777999fffffffffffffffffffffffff99999911111111111111111
dddddddddddddddddddddddddddddddddddddddd979ddddddddddddddd1dd1711771777377711999fffffffffffffffff5fffffff99999911111111111111111
ddddddddddddddddddddddddddddddddddedddddd9dddd1ddddddddddd1dd111117111773711199993fff3ffffffffff5fffffff999999111111111111111111
ddddddddddddddddddddddddddddddddde7edddddd3dddd1dddd1dddd1d3d131111111173111109993fff3ffffff5555fffffff9993999111111333111133311
ddddddddddddddddddddddddddddddddddeddddddd3d33d11dddd1d111d3313131111111313300999939933f3fff67ddfff3f999993333333313333333333331
dddddddddddddddddddddddddddddddddd3bdddddd333dddd1d3d1dd11113331311313111337700999393333333367dd39933933333333333311333333333333
ddddddddddddddddddddddddddddddddddbdddbddd3dddddd113301d11313331333333138877773333333333333367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbdbdddddd33dddd33010330333313333113333888777777888888888883367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbbbddddbd33ddddd30133b3333311333133333887733337788888998888867dd23333333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbdbddb33b33333d33bb333333333333338888877333377888893a9888867dd22888333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbbbbbb33b33bbbd33bb3333333333333888888873333722889999a9888555528838333333333333333333333333333
dddddddddddddddddddddbdddbdddbbbbdbbbbbbbbb33bbbbbbbbbb3333333333888888888888888888999999888888888883333333333333333333333333333
ddddddddaddddddddddddbbddbbdbbbbbbbbbbbbbbb3bbbbbbbbbbb3333333383888888888888888888899992288888888833333333333333333333333333333
ddddddda7addddddddddddbdbbbdbbbbebbbbbbbbbbbbbbbbbbbbbbbb333388888888888888888888888899228888888388333333333333333333333b3333333
ddddddddaddddddddddbbdbbbbbbbbbe7ebbbbbbbbbbbbbbbbbbbbbbbbb3888888888888888888888888888888888883883333333333333333333333b3333333
dddbdddd3ddddddbd333bdbbbbbbbbbbe3bbbbbbbbbbbbbbbbbbbbbbbbb888bb88888888888888888888888888888883833b3333333b3333b3333333b3333333
dddbdddbbbddddbbd3bbbdbbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbb88888b8888888b88888888888888b888888b83333b33bb333b3333b3333333bbb3b333
dddbbdbbbddddbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb8888888888888bb8888b8bbb3b3b33bb333b33333b33b333bbbb3333
dddbbddb3bdbdbddbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb888bbb8bbb888b88888b88bbbbbbbbbb333bbb333b33b33bbbbb3333
bbdbbbdb3bdbb33dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbb88888b8bbbbbbbbbbb3b3bbbbbbb33bb3bbbbb3333
bbbbbbbb3b3bbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbbbbbbbbbbbbbbbbbbbbbb3bbbb3b333b3333
bbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbb3bbb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b3b3bb3bb3333bb333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b3b3bb3bb333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333b3333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3b3bbb3333bbb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb33333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3b3333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33333333333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333333b333bb3333333
bbbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333b33b333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b33b333333333
bbbbabbbbbb3bbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bb3b33b333333333
bbba7abbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33333bb33
bbbba3bbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33b33bbb3
b3333333333bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b3bbbb
b3bb3bb3bb3bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbb
b33b3bb3bb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3b33b33b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbb
b3bb3bb3b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

__gff__
0081030301811303030301010000010003030101010103030101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
fffffff0ffff0ffd89e32fc19aa67c51f47fc01ffcc05f7c3c8cff11bf818b9b851f420042b8c21112fee70148c0f8f821e008c20b0a84ff733842c042f8295c940f8c62f83f23e01906fe092f3811f00dff6fc641c03fe046f8427887ff73183f50caf8851bc3f87ff12338f818ffb342f9df13065ec2ff8a7084ff3fc0022e
12f03fe3e37fce013ef0bfe6ff2ff0ff57f8ffd360e003ff7f3a20bce1ff1f87833ff8ffc760fcc1ffbf0eff7f1f08c0cdff82ffbf03168484ff7f0bce4258085ff8ff8f0148180290e10bff3309ffd3702402168431aef07f927593ff2732788681ff215f0207ff5719070165fc9f780438c2ff344c7e201cfcdf643ce07fca
c107c1c7ff4ac617fec782977081ff8f8c13fc6f255c24e024fc2fc3ff990ffcc5ffdfe4ff007ee7ff8f12fe1789ffff6f08c0ffff178430feff7ea83c82ffffcd8df0ffafc31fe0ffdf08fe47899ff8ff3f89ff83952b9c99ff3f13fe47f2519af8ff3730e17f22e40a02feffd2f03b7f3090c4ffff41f89d4b4e59e2ffff10
fe9784ffff44f81f72642be4ff6f70f0ff4b207cfcff6ffe08ffffc4fe871c5c25f9ffd3e18fc2ffdf90ff6558f82095ffbf4c180f1bfeff3168380bff7f8df25bf82bfcffbdf02ff8ffafe1672efeff43ea7f127e92121ef93fa6fe59f8972bc98ffcaf63f883f12b5ff843feffc3f0bf4df2caff5f88fe0f79e59025fe92f1
ff17c2ff6963a91f648941fe47f6bfe497851a3933e1e37f633f871ff9273c591e3bc233c9ffc4fea7fcc498fd012ef9ff83e1e27fc0ffc881173ce1ff8fcae1f8ffd9ff5f73fcff3cffffc9fe17e137fbffff865cf9ffc7e1afede8ffca85ff8fe3f49dfc007eca35f2bfb125f9ff2be12ffbdf4827f99fd8ffba8fe4070b7f
8027c9ffc2fe57e11fccf2b22cb75c24c9ffc04efb8bbf198c1c5c593e7901d7ff07fcc7ff843f6a567ef2fcedb8c2af7ce1bff00b3fdbff24fcccff22fcbf72f5ffbff1bf03c05f791cfc6f1cff7f83f29790ff91fcff1bd03e38f9ffcf8d90c299f8fff07fcffc744402474eff173b12fff3087ed90c32421c83849ff2faff
17b9355f9bf885091c5442963709e7c66187fd7f930b5d5ed9350bc391385dc3f26c9c520e494e1f6184ff4f729f40220d04b2c44190cbd67110b2efb93a721096b8c3ff66d70f1eb19a6382a06982157ce8210924d22542867be2e5ff931f2493e8f1894d481cf4e08f3f8ec439f99ff0bfdc18310cdd6e2091c58365e569ea
95f1ff3f2258788e438207cd6152c006ea43f4c82ff97f87030788d0c31124f9411f4ef80707f63591ff2faf9c96f0931cfb83ee975f58f201d9fbc70f512bbff363c242001e0b0d07a75d76f2f9e30abf73e51f3f2432fc232fd7c25ff9c5f6cf7cf27fe049863790d09c4ef983097e4c62e109f831f1479e7f5e802b825f11
f9594e0cff0712e678466d9cfbe1cadf810fff0f88c41316fe4c6018fe083fe70fe34afc118e400ef0138667482a18c6ff499e05841fc0020c7f6c08214308f922c0c2ff949384302b022e063eca41c27158e2ffca4f213cdc618c845b2e09ffff28fc4a00c20f24fcff557280f00fff7f120ce0ffbf0f06e00affff39fc42f9
ffc724349cfcffe9d0808bff3f5c1046f8ffeb0316feff3f8087ffbfcecbff3f0f77f82b8fff3f1bfe8c0fff7f34fc9c7fbeffbf19be081e967f1c9e66feff6148f82909ca92e0ff7f7281ee49cec4ffdf0d0bece408ffff7430044110f0ff7f2938863ff8ffd70f20e0ff6f872308ff7f9d868fffffceffff2f000000000000
