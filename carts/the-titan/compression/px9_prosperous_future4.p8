pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- px9 data compression v9
-- by zep & co.
--
-- changelog:
--
-- v9:
--  @pancelor
--  ★ redo bitstream order
--  234 tokens (but ~4% slower)
--
-- v8:
--  @pancelor
--  ★ smaller vlist initialization
--  241 tokens
--
-- v7:
--  smaller vlist_val by @felice
--  7b -> 254 tokens (fastest)
--  7a -> 247 tokens (smallest)
--
-- v6:
--  smaller vlist_val by @p01
--  -> 258 tokens
--
-- v5:
--  fixed bug found by @icegoat
--  262 tokens (the bug was caused by otherwise redundant code!)
--
-- v4:
--  @catatafish
--  ★ smaller decomp
--
--  @felice
--  ★ fix bit flush at end
--  ★ use 0.2.0 functionality
--  ★ even smaller decomp
--  ★ some code simpler/cleaner
--  ★ hey look, a changelog!
--
-- v3:
--  @felice
--  ★ smaller decomp
--
-- v2:
--  @zep
--  ★ original release
--
--[[

	features:
	★ 273 token decompress
	★ handles any bit size data
	★ no manual tuning required
	★ decent compression ratios


	██▒ how to use ▒██

	1. compress your data

		px9_comp(source_x, source_y,
			width, height,
			destination_memory_addr,
			read_function)
				
		e.g. to compress the whole
		spritesheet to the map:
		
		px9_comp(0,0,128,128,
			0x2000, sget)

	…………………………………
	2. decompress
	
		px9_decomp(dest_x, dest_y,
			source_memory_addr,
			read_function,
			write_function)

		e.g. to decompress from map
		memory space back to the
		screen:
		
		px9_decomp(0,0,0x2000,
			pget,pset)

		…………………………………

		(see example below)

		note: only the decompress
		code (tab 1) is needed in
		your release cart after
		storing compressed data.
		
]]

function _init()

	-- test: compress from
	-- spritesheet to map, and
	-- then decomp back to screen

	cls()
	print("compressing..",5)
	flip()

	w=128 h=128
	raw_size=(w*h+1)\2 -- bytes

	ctime=stat(1)

	-- compress spritesheet to map
	-- area (0x2000) and save cart

	clen = px9_comp(
		0,0,
		w,h,
		0x2000,
		sget)

	ctime=stat(1)-ctime

	--cstore() -- save to cart

	-- show compression stats
	print("                 "..(ctime/30).." seconds",0,0)
	print("")
	print("compressed spritesheet to map",6)
	ratio=tostr(clen/raw_size*100)
	print("bytes: "
		..clen.." / "..raw_size
		.." ("..sub(ratio,1,4).."%)"
		,12)
	print("")
	print("press ❎ to decompress",14)

	memcpy(0x7000,0x2000,0x1000)

	-- wait for user
	repeat until (btn(❎) or true)

	print("")
	print("decompressing..",5)
	flip()

	-- save stats screen
	local cx,cy=cursor()
	local sdata={}
	for a=0x6000,0x7ffc do
		sdata[a]=peek4(a)
	end

	dtime=stat(1)

	-- decompress data from map
	-- (0x2000) to screen

	px9_decomp(0,0,0x2000,pget,pset)

	dtime=stat(1)-dtime

	-- wait for user
	repeat until (btn(❎) or true)

	-- restore stats screen
	for a,v in pairs(sdata) do
		poke4(a,v)
	end

	-- add decompression stats
	print("                 "..(dtime/30).." seconds",cx,cy-6,5)
	print("")

end

-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 8 and
	-- 15 bits long with the next
	-- bits in these positions:
	--   0b0000.12345678...
	-- (1 is the next bit in the
	--   stream, 2 is the next bit
	--   after that, etc.
	--  0 is a literal zero)
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<8 then
			-- cache next 8 bits
			cache_bits+=8
			cache+=@src>>cache_bits
			src+=1
		end

		-- shift requested bits up
		-- into the integer slots
		cache<<=bits
		local val=cache&0xffff
		-- remove the integer bits
		cache^^=val
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)
		end
	end
end

-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function
	px9_comp(x0,y0,w,h,dest,vget)
	local mytable = {}
	local dest0=dest
	local bit=1
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	local cache,cache_bits=0,0
	function putbit(bval)
	 cache=cache<<1|bval
	 cache_bits+=1
		if cache_bits==8 then
			mytable[dest] = cache
			poke(dest,cache)
			dest+=1
			cache,cache_bits=0,0
		end
	end

	function putval(val, bits)
		for i=bits-1,0,-1 do
			putbit(val>>i&1)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if cache_bits>0 then
		-- flush
		mytable[dest] = cache<<8-cache_bits
		poke(dest,cache<<8-cache_bits)
		dest+=1
	end

	local str = ''
	for i = dest0, dest do
		-- str ..= (chr(mytable[i]))
		str ..= chr(peek(i))
	end
	printh('compressed to ' .. #str .. ', ' .. #str/8192)
	str = escape_binary_str(str)
	print('' .. dest-dest0 .. ', ' .. #str) -- .. dest0 .. ', ' .. dest .. ', ' .. str)
	printh(str, 'output.bin')
	printh(str, '@clip')
	return dest-dest0
end

function byte_to_hex(byte)
	local hi = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte\16]
	local lo = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte%16]
	return '\\x' .. hi .. lo
end

function escape_binary_str(s)
 local out=""
 for i=1,#s do
  local c  = sub(s,i,i)
  local nc = ord(s,i+1)
  local pr = (nc and nc>=48 and nc<=57) and "00" or ""
  local v=c
  if(c=="\"") v="\\\""
  if(c=="\\") v="\\\\"
  if(ord(c)==0) v="\\"..pr.."0"
  if(ord(c)==10) v="\\n"
  if(ord(c)==13) v="\\r"
  if(ord(c)==9) v="\\t"
  	-- v = byte_to_hex(ord(c))
  out..= v
 end
 return out
end
-- 40% - 50%
-- 14 images per cart...
-- dw = 8 images per cart...

__gfx__
d36cdcddcddcdcddcd3dc53dc53d3dcdd7c3d3d353d3d3d3dcd66cdc666677777777676777777777777777777677777677777777777777777777777777735b77
3cd63dcbdcb6c6bcdbcd3cd3dcd3c3d33663d3d3dc1d3d3c3d6666c6c6c6666777777677777776767677777766777766777677777777777777777777777db677
d33c66bcddc3dcddcdd3d3dc33cd3d3d336ccdc3d3d3cdcddc666666b66c6667776767667776776777777677667777667766777777777777777777777773bd77
dcd3c6c6bcddbdbcbd3c3d3d3d3d3d3c5cd6d3cd3c3d3d3c66c666766c6666676777767776776777777766776c777766777677777777777777777777777dbb77
3d3d366c6dbccdd3d3d3dc3d3d3d3c53d33d6cdcd3d3cdc6666667666666667677777776777677777777667776777766776677777777777777777766776bd677
dc3cd3c6ccd6bc3cdc3cd3dc3dc3d3dc3d3c66b6cdcd3cdb6c666676766666777776777776777777777766776c77776677667777777777776b7777db777dbb77
3dcdbc3d66c6cddbd3ddbc3d3d3d3d3d3dd3366c66b6c6c666c66c767676766767777767776777777777667766777766776c7777777777773367776b777b5677
c6bc6dcbc6666cbcdc3cdd3dc3d3c3dc3c3dcd6cb66c666c6c66c6c66676676776777677767767767777c677667777667766777777777777db7777d67773bb77
dc66c6666667776cdbdd3cd3d3cddc3dd3cd3cd6cc66666666c6c66c667766667767777777777777777766776c6666c66666777776777777db6777b6776db677
cdbcdbccbc677766c6ccdbcdcd3c3dcdc6cdcbc66bc6676766cb6c66c766666667677767767677677767666dbd33d66bd666777777777777b367776b7773db77
dcdcb6cd6cc667766c6bcdcbd3cd6cb6cb6cddbc66cb66666766cb6b666c6666667677767777677777776333dd35666dbd6c677777767777db7777d6777bdb77
cbdcdcdb6c6c667676666cddcdbcb6cd6c6bc6cdc76cc66c66c666c6cc66c6c66677676776767777777c3553555bd663db6b667777777777336777b67773b677
dcb63cdc6b6c6c77767c6cbcbcddcdbcbcdcbdbdb666c6c66c66c66cb6c66666666767776776777677635355535dbddb6dd6b77777777777db77776b777dbd66
cdcc6bcbcc6bc6667777666c6dcbcdcdcdb6cdccdc66cb6c66c66c66c666c6c6c766767676776777763535335d35d6d5bdbf667777777777b37777d6776bdb75
dcb6cdc6dcb6cc667777766cbc6cdbcdb6cdbcdbcbc66c6bc6bcb6c66c666c666667676776767677773535553535666bdd66b77777777777db6777b6777dbd6d
c6cb6cbc6c6c6bc6677777666cb6c6bc6cbc6cb6c6c666c6c6c6c6c6c66c66c6c767676766767767763d535355d3d665bdd6667777777777db77776b776bb665
6b6cc66cb6cbc6cc6677777766ccbc6cbc6cb6cdcb6bc76c6bc6bc6b6666c66c666676766666677776353515d35bd66bda6b6677777777773b677636777dbb6d
c6c66cc6c6c6c6b6cc677776666c6cb6c6cdcdcb6cc6c66666c6c6c6cc6c6c66666667676666676766355353dd35d665bd66b67777777777dbd763dd776dbd6d
6c6c666c6c6c6c6c6c66677766c666c6c6b6c66c6b6cb66cc66c6b6c6b6c6b6c6c7666676667676776353515db55bf635d66d67777777777b5b77db6777bdbfd
6666c66666c66c6c6cc677677777666c66c6c6c6c6c6cc676c666cc6c6c666c666c666667667676766355535d53566635b66b77777777777dbd763dd776dbd6d
6c666c6c6c6666c6666c66777776667766666c666c6c66c676c6c66c666c6c66c666c6666666666676353513d553d66b5df6b67777777777b53775b6777bbbfd
66c6c76c66c6c666c666c6667776c7c66666666c6666c66c66666666c666c66666c6666c7666667666351535db53d6655b66d67777777777dbd76d5d776ddb75
c66c6c66c6666c6666c666c667777666c76666666c6c6c66c66c6c6c66c666c666666c7666666666663535536555b76b566b667777777777b5b773db777bbd6d
66c766c66c6c666c666c7666c76776c6666666c7767766666666c666c66c6c76c66c76666666666676355355d353666535f6b77777777777dbd763d6776dbd65
666c66666666c666c6c666c66667777666666666c666666c6c6666c66c6666666666666666666676663535136555bf635bf6667777777777b35773db7765bb65
6c766c6c6c6666c666dbc766666667766666666666c6c66667666666666c66c66666666666666667663555355355d6d55d6bd67777777777d3d673d677653dd5
766666666666c7666c63dc6c6666776766c7666c766666c66c76666c6666677666c7c7666666767676353515d533db6bdbf6b77777777777b3d765bd7765bbd5
666666666666666666cdbd666666777677666666666666666666666666676766667676666676676766353535b555d6655d66d67777777777db5773d56dd536b5
766666666666666666db6b66666677666766c77666666c6666c6666766666676766666676767676776355515d35356b5b5d6b77777777777b5b7d53535d5b553
766767666666666666cdddb666677776667766676666666c76766667666676667676767666767677763535315535365dd3dad67777777777dbd53105d5d35350
7676767676666666666b6b6c777777766667766777666c666666666766676767667667677676776776351351535556b5b4db667777777777b531151351553530
777777676767676676cbdcb676677776767677667676666666666767676676767677676767676777763515135535b6d55d66b67777777777d315030515d53530
77777777777777776c6db666676c777667676776777766c666677677677767676767767777777766663535555355dd63bd6b6677777777773150305553553501
77767677777776776bdb6bdb776b67776676676766766666c6c67767776777777776777676776766c7535313d535b6d55bfdd677777777775353050155d50350
77677767676767776b6dbd6677c6c677767676767767c6666666667777777677677776777777776666355555db55d65b5d6b6677777777773050503105531503
7776767776776767c6bdddb6676bdb6767676767767766c6c6b6667777767777777777777777777666353535d535db655bf6b677777776765350350555553030
76777767677677676bdbddc6676c6dc67777777677666666b66c677677777777777777777777776c66535513553566635d6d6677777776763153015035d30505
77767777776777776dc636b6776bdb6b677776777776c6666c66667776776776776777777777777666353515db5356d5bdfb667777777676350501355d555303
7777776767776777cbdbdb6b776c666cd6777777777666b6c6b6677777777777777777777777776667535535d555d6b55d66b777777776763130500555535050
77777777777777676dbd56b6776b6dd6667777777776c666666c667777777777777776677777776666351535db536bf5bd6d6677777776763553053553d53030
77777777777777776b65db6d7766c6b6b777777777666c6c6b6b77777777677777776c677777776c665355356535d6655bfb667777776666bd5d666666510505
7777777777777777cdd3ddb6676db66d66777777776c66b666c6667777777777776c6667777777666635353535535db55d6d6677776dbd355535b77776113503
7777777777777777dbd5b66b776c63db6677777777666b76b6b66666777777777666b6677777776b77535535d355b655b56b667777d35353535567777d150301
7777776777777777d63ddb6b77666666c7777777776c66c6c6b6666c6677777776c66c67777777666635353b6535d6bd5df6b77776351513153567777d305051
7777667777777776bddb6bd6776bdb63667777777766c6b66b6b6c6666667777766b66677777776c663515555535b665356b667773513150505367777d553530
6776667677777777cd5db6bd6766666db777777776c6b666b6c666b66666777776c6b6677777776666313533535555355bddd7776d315030305567776d130530
67666676777777766b5dbd6b776cdd6b6677777776666b6c6b6bc666c667777776666c677777776b76355353d5355d5b5d6b667765513050513567776d553501
6666766767777776bd5d6b6d676b6b66d7777777c6c6b66b6b66b66b6666777776b6b66777777766763535355353db655bfdb77773305503053577776d305301
6666667677777776d5dbdbdb77666d6b66777776666b6c6bd6bd6b66666667676666666677777766bd5355334b55da355d65667765510350505377776d553050
6c666667677777663dbd6b6c776d666dc6666676c6666b66bdb6bdcb6c66676676cb66666677766bdd353535d535bd5b5b6db77763530503035577676d350530
d666c66676667666d5dbd6bd676cb6b6b66667766b6c6b6cd6b6db66b666667666666b7666767666dd556535b555d6655d6d667765150350505377776d353050
6b666677666c666c5b6bdb6b77666dd6d6666666666b6dbdbdbdbdb66b66666766b66666bdd63667d56dfb55d53566d35b6bd66763505030513d67776d515313
d66b66666c6666665dbd6b6b676bd6b6d6c6676c6b66b6dbdddd6dbd66666666666b6c665dc6ddd66d6665b5b5dd6b635d6da677653130513055777763535050
6b6666666666b66bdddbddb66666d6db6b666666b6c6db6d555dddb6b66666666666666d35ddb5336776355dd53bf6b55bfbd66763050530503d67776d503501
d6666b666b66666d3bddb6bd66b6d66d666b666666b66666bd35d6bd6b66666666b6b663533d53556763db65bd5567635d6d666765505050355377776d350350
d666666666666c63ddb6bd6b666db6bdb666666b6b6d367663dda3db6666666666d67765355535356763d553d5b56bb55b6db67763133030503d777765535305
db6bd3db66b66b655b65db6b6b66d6d6d6b66666c535d666bdf6ddb63d6666666bdc7663535d35037665bd5db55b66635d6b666665150505015577676d350530
66d6dd66666666636dbdb6bd66bdb6bdb666b666b553d35bdd77dbddbdbb6666d3db6663153553556763553555536b653565dddd35030530313d677763535053
666b766b6b6666bd5bd6bd6bd6d6d6d6d6d666663535ddd35b77d3db656d6666bd5566b51555305367635555bd53b6b55bf3535553515050505d677765103530
3b6d6666ddb6b6666db65b6b6b6db6dbd6b6666635535db55d773555535b6666d353db651355535bf7635d35db55bab5556d553d55313030503d777763153050
dd3666b66bdb6b66b666666d66b6ddddd666b66635353655bd77d35bd5db6666b55dd6d51535350567635553555db6b5536355d353050515035d677765053530
5dd666d6bd666b63dbdb66b6b666db6b6b666666353d5d535d77355d35b6b6d6553dbdd3505d535367635b555b5b5bd53d6535d555135303053d677763053050
dbdb66b6ddbb6bddbddd66b6dbdb66d656d666663553ddb53d77d35bd5db6666b553dd635353535567635555b5555bd53563555d35100505105d777765035031
5db66666b6d66d66ddbd66dbddd65dbdd6b5b6b653553dd55b7753555356bd6dd35d53d535553503676353555535355355d553d355350303503d677763053501
dbdd66b6ddbb667bdbdb66b6dbd6d6ddbfdddd6555355d535d77553535bdd5d3553535d51355135566635515353531510563555d53015150135d777761105310
ddd666d6ddd66666d6dd66dbddbdbdbdddbdbd635353563535773515d55bd5ddb55d53535053550367655513535305353565553d55113030505b777763053530
5b5b66b6bdbb6663dbdb6db6ddd6daddad55d5dd3d553d535d77d3535bdadb55553535d535553535676353505135305155d355d353105105035d777761503505
ddd666d66ddb666d663d66ddbdbf667f6635353d5d355db55b775555b53bd5535355553553553553f66635513555535566f5355d51530530505d776761035301
3dbd66b6db6dd66bd65366bddd56f66676d55d35b63536553d77353555ddb551513d35d305355355d666d315555dd535566d55d353105305313d777763050530
5d5666d6ddbbdd65bddd6ddbdbdd6bd35353d35ddd535d355577d353d35bd5515355515553551503d33dd3035db6bdddb6653d3d55150501055d677761035050
dbdd66b6bddad6dddbdb66b64dbdbd553d5535553d355d5353773555355bd553553553d315535355555355153d6d66666dd66d67630313503036777763503530
dd6b6666ddbdbdb5dd3d6dd5bddddd3d55355d3d535536535d775315535653515153515513551053531531055353d3d6d6bdd667d5105035055d6777d5053013
dbd666b6d5b656fdb5db66bddda66bd5355d3d5535355d553577553535b5b555135d5153515531515511153011115533d36dc66763150305035d776763005350
777776d6b65bd665ddbd6dddb6b6665d513d5d3551553d353d773555555b6551553535550535105351553051050135151535d667d30350503056677761530030
777666d6d56b656b666566b6dd6bdbd35553551535355d535d77535353555d353155153531551535d315150501505510111531dd35105030513d7777d3015150
ddbdbd6b65bddd6d6db5b5d3d3d5353dd351dd3515135db55b773553553535dd535351d315553b55d53510305035315050151066531503050536677765035030
3ddd6b6656da666b63553535353535d353535515315556553d77535513153d77d155535551355513dd513515150151103053535d3503505030567777d3503050
db6bddddbdb6d66d5db553535353535bddd6ddd351353d355577351315055df6631355d351530105dd35010535551505050510d555101305053d7767d5053503
dd5db6d6d666ff5bd35353553553553535d677d515055d553d661115053135f7d55d666113515350db51513001035353501515553150505030566777d3113050
5b66da6bda66f6655553553553553555353566d335355db5356d35035105556dd535d6b510501035dd53105050515115553530d5530303051536777765053530
6666677f677665db6bdddd6d6d6d6d3ddd3d3d3510535d55536d31513530353d6b5bab5553535050dd351505010510503155dd5dd350515030566777d3535050
766666666b6b5babdab6dbd3dbd3d36ddd6dddd353553db5056d30505055155335b4b55101050303dd35013015035101101531d35105030115367777d5103530
66bbabbb5b4ba3b5bb6663dd3d5d3d3d3d33d35511535d511d6d353513035355535b530535305155bd51505010551150505110555130505305566777d3535050
556565dad6bd5d55d46fdd3553535553d35d35d305055535036d30105051515335b4b50501501031dd35113050113010501515553505350130367777d5305303
ddbddb63bd45bd5bdbf66d5355d115d55555535553535d515d6d55535153553535355035305305055d51305155350503050310d55130503055567767d3553050
b5b5bab4babbabbaba3f663d5131533531535551553df63535335350353535350535305053051353dd35050535555110505513553505035013567777d5035305
5bab5b5b5b5b5b4b5bbbbbabdbd535db6d55353535da6655535535353053553515035035051050055d3150301153d355030510d55130501505367777d3505053
6b5b4b4bab4b4b5ba554b4b5babddddfd6bdb5535d3dbdb5353130505535515135351553105305315d51505051115553555355553505303031567677d1535303
56b4b5b4b5b4bab4bb5ba3b4bba36d66b6ba3b553535353535355355355153555151555153505105bd35031010501155d53d1366d130505151567777d3053053
356b4bab5babd3ab55ba35abadbf6bab4b5bdbab5350505355555553515515011505111301503535dd51505155153535355d5d66d305050305b67777d5353503
5556ba35badbadbdbab5b6b6666bb4b5b4b4b4b5b5353353533551551115151503515355053105053d3130105351555d5535d6675150305053d67777d0503503
553d6b5adb6dbdbadb6a6a666bb4b5b5b5b5b5b5b5b55350355353555535351355153505305153055d5150535553553d355d6676d305130305567777d3035350
3d5bddbd6dabadbdbab6b666b55b4b4b9b5b4b4b4b4b0535303535dd35d5d55555351515053050355d351501511535555d3dc666d313051505d6777731513035
dbab5ababbbdbabab5b5ab6b5bab5b5b5b5b5b5b5b5b4b53555555d35153553511551513515135053d503150511151535355dd665150503053567767d0150503
b5b4bbdb55b4b5b5ba3bbad55bd5ab4b4b4b4b4b9babbab4353db535111515151535535103050535dd351501535010115553d3673503150503d67777d3035301
5b4b55b4bab5bab5b5badbbba5bb5b4bab5adbadb6ba6a66553553535150511151535155155131535d5111305155150111515d66d31503031537777751050150
b4b5bab5b5bab3ababa66ab4bb4b4bb5b5bbb4b6ad666b6b535350350531155153515513511505155351505051153510511535665103050505d67777d3053030
5bba3b5bab5baba6676bb5b55b4b5b9b5b45b5bbbbb5b5b5b535355353551535555153515535515151503150105015513505156d355050353537777751030501
b4b5b4bababa677766b4b5b5b4b5b435b4bb4b4554b9b5b9b53503503535555555d11555555153510511501150305015110315351130510015d7777735053530
da66f6f7677777676ddb4b4b5b5b5b5b5355b5bbbb5bb9bbbab5353555555d5d3d155113535155155351150305110501551515115505035305b7776753035050
7777677776777676d366bab4b4b55b55b5b53554b9b4bb4babbb5053535ddd3d15135151551115351150515051505111355151511350305053d7777751503030
6666666666666767553d6d6666dada3d5b4b5bb5b5bb9bbababf5d555153535151151111115515151535155515051050513535505503503055d7777751305505
66666666676767665555d6d666666666f6666fdadadaba666777d3511515555535353553553535535350305315131503051151115310515035d6777731053035
6667677777776766d3153535d35353dd6d6d6d6666677777776d553535b533b53511531535315351305305351050505051050510515303050367777755353503
7777776767676777d55535d665d5d5535353553ddd666666b5bb3b5bb5bb4b5bb5b50130505030305030530515050311150535105305051355d6777730053050
77777777777776d55155d6fdf655d355555555533b3bbbb5bb4b4b5b4b4b5b55b5335305303505053505050305111050511151505350305035d7777755035031
b6bb6bb66676d513155556666653d5d5dd535b5b4b4b45b4b4b5b5b4b5b5b5b55b53535355035030503130503035050513051501503505051367776751305350
5b4bb9bbba63556f5535356a665d5d55b5bab5b4b5b4bb4b5b5b4b5b5b5b4b5b5b5b5b53553053503505035055053050510513505305035035d7777731053503
b4b9b5babbad566d555351335b6fdbb5b4b35b4b5b4b4bb4b5b4b5b5b4b5b5b5b5b5b535b35b5035035050350300513105055150515030535566777751535030
b5bb4b4b9bbd67653d351515556bab4b4b5b4bb5b4bb5b4bb4bb5b4b5b5b5b5b5b435b5b4b535b53530353053053050511503511530515011367777730053550
5b9bb4bbb4babf655555355b6bab5b5b5b4b55b4b5b4b4b4b5b4b5b5b4b5b4b5b5b5b4b5b5b5b5b535b5305053050303503515151503053055d7777755353030
b5b4bb4b9bb5bbabababababab3b5b4b5b5b5b5b5b5b5b5b5b4b5b4bb5b4bb4b55b5b5b5b55b5535b55353530513505050515155305503053567767731005350
5b4b4b9bb4b4b4bb3bb5bbb5b4b4b5353535b5b535b5b5b5b4bb9bb4b4bb4b5b5b5b4b5b5b5b5b5b5b53b5350350350303055535530515053566777751535130
b4bb9bb5b9b5b5b4b4b4b4b4b5b55b535b5535535b55b55b5b4b535b5b4b5b5b5b4bb4b5b5b4b5b4b5b435353053053550530551551305305367777730153550
b5b9b5b4bb5b4b5b4b5b5b4b5b4b5b5b55335335b5b5b5b55b53b4b4b5b5b4b5b4b4b535b4b5b4b5b5b5b5b55115051035053535503050515367777751135030
5ba3bb9b4babb9b5b5b4b5b5b9bbb5b5b535353553535b5b5b55b5b5b5b4b5b5b5b5b5b4b5b5b5b55b4b4b5b5305353503530555351530305567777631053150
b4b5b4bbbababbab5b4babbabbada6da5b5b535b53535535b4b5b4b5b4b5b55b9b5b4bbb4b5b4b4bb4b5bab4b55350305030531d350150535367777751503530
bb4b9b5ab5b5abbababbbaa6f7676666666ddb53353533553535b534b5b5b5b5b5b5b4b4b5b4b5bab4bb9b6b5350350535050353535035053567777630353503
4babb5b5b9bbbabababaf776666dd3ddddd66f6d4b5b53535b5b53b4b5b4b5b5b9b5b4b4b5bbab4b5ab5bfb4b553053003535055510503505367777751053051
b5b4bababbadb5b5baba7766666dd53d33dbd66666655b53535534b5b55b5b4b5b5b4babb9b4b5bab5bab5bab53050355030535d353050535567777635153503
5bab5b5b4bb4bababab66766666d6555555553dd666776db55335b555b55b435b5b5b5b5b5b5ba3b5bfb4b4bb43503013555553d350503053567777710305350
b4b5ba3b4babb5bab6aba67666d6535d155115353d6d66766a55b533535b5b5b4b4b5b5b4b9b5b5ab9b5bababb50355551353151515150505367777635053530
5b5a3bab5b55ab5bbbabb6766666d55535515555535d6b66667665535b535b5b5b5b5b5b5b5b9bbabbababbaad555535351151551535b5351567777615035305
b4bb4b5b4bbb5bab4b6abb77666653d55511553155335d666667676ad535b553b435b4b4b4bbb4babababaf67635351511515dd53555adb55567777630530513
5b4ba35b5b9b9b5babbbaba67766d5d53551551555555d3ddc66677676f65b5b4b5b5b5b5b9bababa6a67777763d51515355ddd530303bab6666676d50505350
b5b5bbab9b5bb4bb5b9b5bb677665535553553553151565353dd6666777777ff6a6abaababa6a66767777777635131530305db635535305bab65dd6351353503
5b5b9b5b5bab9bab9bbababa77d35151115155555155dd3555353dc666677777776777777777777777777766d351551505356dd301105355dbbab66513055350
b4b5b4b4ba3bbb5bbab5ba667760101010515315d555c5515555353db6c666767777777777777777777667635155513530536d3503531535b4b5b66515513505
__label__

ccccccccccccccccccccccccccc11111111111111ccccccccccccc111111111111111111ccccccccc1111111cccc111111111111111111111111111111111111
ccccccccccccccccccc11cccccccc1111111111111111c1111111111111c111cc11ccc111ccccccccc1111111cccc11111111111111111111111111111111111
ccccccccccccccccccc111cc11cccc11cccc1111111111111111111111ccc11cc111ccc11ccccccccccc1111111ccc1111111111111111111111111111111111
cccccccccccccccccccc11cc111ccccc11111ccc11111111111111111ccccccccc11cccccccccccc11cccc1111111cc111111111111111111111111111111111
cccccccccccccccccccccc1cc11cccccc1cccc111111111111111111cccccccccccc11cccccccccc111cc111111111cc11111111111111111111111111111111
cccccccccccccccccccccc11111ccccccccc111111111111111111cccccccccccccc111cccccccccc11c11111111111cc1111111111111111111111111111111
ccccccccccccccccccccccc11111111111111111ccccc11111ccccccccccccccccccc11cccccccccccc11cccc111111111111111111111111111111111111111
ccccccccccccccccccccc11cccccc111111111cc11cccccccccccccccccccccccccccccccccccccccc11cccccc11111111111111111111111111111111111111
cccccccccccccccccccc111cccc11ccccccccc11111cccccccccccccccccccccccccccccccccccccc111ccccccc1111111111111111111111111111111111111
cccccccccccccccccccc11cccc111cccccccc111c11cccccccccccccccccccccccccccccccccccccc11ccccccccc111111111111111111111111111111111111
cccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11ccccccccccc1111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc11cccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc1111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccc1111ccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccc111cc11c1111c111cccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc11cccc11cccc111ccccc11cccccccccc1111111111111111111111111111
ccccccccccccfffccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccccc11111ccc11111111ccccccccc111111111111111111111111111
ccccccccccffff77fccccccccccccccccccccccccccccccccccccccccccccccccc1cc11cccccc1cccc1111111111111111111111111111111111111111111111
cccccccccfff77777fcccccccccccccccccccccccccccccccccccccccccccccccc11111ccccccccc1111111cccc1111111111111111111111111111111111111
cccccccffff777777fccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111ccccccccc11111111111111111111111111111111111
ccccccffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111cc11ccccccccc111111111111111111111111111111111
cccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11111cccccccccc1111111111111111111111111111111
ccccffff7777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccc111cccccccc111c11ccccccccccccc1111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccc111111111111111111111111111
ccccffff77777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccfff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccfffffff77777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11111111111111111111111111
ccccccfffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccc11111111111111111111111111
77777cffffffff777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777fffffffffffff7777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c11111111111111111111111111
77777777ffffffff7fff77ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111111
77777777ffffff7777fffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c111111111111111111111111111
777777777777777777ffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111c111111111111111111111111111
777777777777777777fffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777777777777777fffcccf77777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
777777777777777777ffffff777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
7777777777777777777fffff7777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
77777777777777777777fffff77777777777fffffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
7777777777777777777777fffffff77777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
777777777777777777777777ffffff77777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffff77777777777777777777fffff77777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
ffffff7777777777777777777fffffff777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffffff777777777777777777fffffffffffffff7fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc191111111111111111111111111
ffffffff77777777777777777cccccfffcccccccccccccccccccccccccccccccccccccccccccccccccccc9ccccccccccccccc199111111111111111111111111
fffffffff7777777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9f9cccccccccccccc9ff911111111111111111111111
ffffffffff77777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccff99ccccccccccccc9ff911111111111111111111111
fffffffffff77777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc999999999999999999999911111111111111111111111
fffffffffffffffff7777cccccccccccccccccccffffccccccccccccccccccccccccccccccccccccccc999999999999999999999991111111111111111111111
fffffffffffffff7f77777cccccccccccccffff77777ffcccccccccccccccccccccccccccccccccccc9999999999999999999999991111111111111111111111
ffffffffffffffff77777777ccccccccccffff77777777fcccccccccccccccccccccccccccccccccc99999999999999999999999999111111111111111111111
fffffffffffffffff77777777cccccccfffffff777777777cccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
fffffffffffffffffffff7777ffffffffffffffff7777777fccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff999990099999999999009999999911111111111111111111
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9999990099999999999009999999911111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9999999999999999999999999999911111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999991111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc99999999999999999999999999999991111111111111111111
d6666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999999111111111111111111
df66666666666666666666666666666666666666dd66666666666666666666666666666666666999999999944444444449999999999999991111111111111111
ddff6666666666666666666666666666666666ddddf6666666666666666666666666666666666999999999999999999999999999999999999111111111111111
dddf666666666666666666666666666666666ddddddf666666666666666666666666666666669999999999999999999999999999999999999111111111111111
ddfff6666666666666ddd66666666666666ddddddddff66666666666666666666666666666699999999999999999999999999999999999999911111111111111
ddddfd66666666666ddddf666666666666ddddddddffff66666666666666666666666666669999999999ffffffffffffffffff99999999999911111111111111
dddddddd666666ddddddddf666666666dddddddddddffdd77777777777777777777777777799999999ffffffffffffffffffffff999999999911111111111111
dddddddddddddddddddddddfd66666ddddddddddddddddd6666666666666666666666666699999999ffffffffffffffffffffffff99999999991111111111111
dddddddfdddddddddddddddddddddddddddddddddddddddd77777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
dddddddffdddddddddddddddddddddddddddddddddddddddd7777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddd77dd7777777777777777777999999ffffffffffffffffffffffffff9999999911111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddd777777777777777777779999ffffffffffffffffffffffffff9999991111111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd7777717177777777779999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd717771777777777777999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddd9dddddddddddddddddd71717777777377777999fffffffffffffffffffffffff99999911111111111111111
dddddddddddddddddddddddddddddddddddddddd979ddddddddddddddd1dd1711771777377711999fffffffffffffffff5fffffff99999911111111111111111
ddddddddddddddddddddddddddddddddddedddddd9dddd1ddddddddddd1dd111117111773711199993fff3ffffffffff5fffffff999999111111111111111111
ddddddddddddddddddddddddddddddddde7edddddd3dddd1dddd1dddd1d3d131111111173111109993fff3ffffff5555fffffff9993999111111333111133311
ddddddddddddddddddddddddddddddddddeddddddd3d33d11dddd1d111d3313131111111313300999939933f3fff67ddfff3f999993333333313333333333331
dddddddddddddddddddddddddddddddddd3bdddddd333dddd1d3d1dd11113331311313111337700999393333333367dd39933933333333333311333333333333
ddddddddddddddddddddddddddddddddddbdddbddd3dddddd113301d11313331333333138877773333333333333367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbdbdddddd33dddd33010330333313333113333888777777888888888883367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbbbddddbd33ddddd30133b3333311333133333887733337788888998888867dd23333333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbdbddb33b33333d33bb333333333333338888877333377888893a9888867dd22888333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbbbbbb33b33bbbd33bb3333333333333888888873333722889999a9888555528838333333333333333333333333333
dddddddddddddddddddddbdddbdddbbbbdbbbbbbbbb33bbbbbbbbbb3333333333888888888888888888999999888888888883333333333333333333333333333
ddddddddaddddddddddddbbddbbdbbbbbbbbbbbbbbb3bbbbbbbbbbb3333333383888888888888888888899992288888888833333333333333333333333333333
ddddddda7addddddddddddbdbbbdbbbbebbbbbbbbbbbbbbbbbbbbbbbb333388888888888888888888888899228888888388333333333333333333333b3333333
ddddddddaddddddddddbbdbbbbbbbbbe7ebbbbbbbbbbbbbbbbbbbbbbbbb3888888888888888888888888888888888883883333333333333333333333b3333333
dddbdddd3ddddddbd333bdbbbbbbbbbbe3bbbbbbbbbbbbbbbbbbbbbbbbb888bb88888888888888888888888888888883833b3333333b3333b3333333b3333333
dddbdddbbbddddbbd3bbbdbbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbb88888b8888888b88888888888888b888888b83333b33bb333b3333b3333333bbb3b333
dddbbdbbbddddbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb8888888888888bb8888b8bbb3b3b33bb333b33333b33b333bbbb3333
dddbbddb3bdbdbddbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb888bbb8bbb888b88888b88bbbbbbbbbb333bbb333b33b33bbbbb3333
bbdbbbdb3bdbb33dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbb88888b8bbbbbbbbbbb3b3bbbbbbb33bb3bbbbb3333
bbbbbbbb3b3bbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbbbbbbbbbbbbbbbbbbbbbb3bbbb3b333b3333
bbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbb3bbb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b3b3bb3bb3333bb333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b3b3bb3bb333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333b3333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3b3bbb3333bbb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb33333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3b3333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33333333333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333333b333bb3333333
bbbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333b33b333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b33b333333333
bbbbabbbbbb3bbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bb3b33b333333333
bbba7abbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33333bb33
bbbba3bbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33b33bbb3
b3333333333bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b3bbbb
b3bb3bb3bb3bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbb
b33b3bb3bb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3b33b33b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbb
b3bb3bb3b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

__gff__
0081030301811303030301010000010003030101010103030101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
fffffff0ffff0ffd89e32fc19aa67c51f47fc01ffcc05f7c3c8cff11bf818b9b851f420042b8c21112fee70148c0f8f821e008c20b0a84ff733842c042f8295c940f8c62f83f23e01906fe092f3811f00dff6fc641c03fe046f8427887ff73183f50caf8851bc3f87ff12338f818ffb342f9df13065ec2ff8a7084ff3fc0022e
12f03fe3e37fce013ef0bfe6ff2ff0ff57f8ffd360e003ff7f3a20bce1ff1f87833ff8ffc760fcc1ffbf0eff7f1f08c0cdff82ffbf03168484ff7f0bce4258085ff8ff8f0148180290e10bff3309ffd3702402168431aef07f927593ff2732788681ff215f0207ff5719070165fc9f780438c2ff344c7e201cfcdf643ce07fca
c107c1c7ff4ac617fec782977081ff8f8c13fc6f255c24e024fc2fc3ff990ffcc5ffdfe4ff007ee7ff8f12fe1789ffff6f08c0ffff178430feff7ea83c82ffffcd8df0ffafc31fe0ffdf08fe47899ff8ff3f89ff83952b9c99ff3f13fe47f2519af8ff3730e17f22e40a02feffd2f03b7f3090c4ffff41f89d4b4e59e2ffff10
fe9784ffff44f81f72642be4ff6f70f0ff4b207cfcff6ffe08ffffc4fe871c5c25f9ffd3e18fc2ffdf90ff6558f82095ffbf4c180f1bfeff3168380bff7f8df25bf82bfcffbdf02ff8ffafe1672efeff43ea7f127e92121ef93fa6fe59f8972bc98ffcaf63f883f12b5ff843feffc3f0bf4df2caff5f88fe0f79e59025fe92f1
ff17c2ff6963a91f648941fe47f6bfe497851a3933e1e37f633f871ff9273c591e3bc233c9ffc4fea7fcc498fd012ef9ff83e1e27fc0ffc881173ce1ff8fcae1f8ffd9ff5f73fcff3cffffc9fe17e137fbffff865cf9ffc7e1afede8ffca85ff8fe3f49dfc007eca35f2bfb125f9ff2be12ffbdf4827f99fd8ffba8fe4070b7f
8027c9ffc2fe57e11fccf2b22cb75c24c9ffc04efb8bbf198c1c5c593e7901d7ff07fcc7ff843f6a567ef2fcedb8c2af7ce1bff00b3fdbff24fcccff22fcbf72f5ffbff1bf03c05f791cfc6f1cff7f83f29790ff91fcff1bd03e38f9ffcf8d90c299f8fff07fcffc744402474eff173b12fff3087ed90c32421c83849ff2faff
17b9355f9bf885091c5442963709e7c66187fd7f930b5d5ed9350bc391385dc3f26c9c520e494e1f6184ff4f729f40220d04b2c44190cbd67110b2efb93a721096b8c3ff66d70f1eb19a6382a06982157ce8210924d22542867be2e5ff931f2493e8f1894d481cf4e08f3f8ec439f99ff0bfdc18310cdd6e2091c58365e569ea
95f1ff3f2258788e438207cd6152c006ea43f4c82ff97f87030788d0c31124f9411f4ef80707f63591ff2faf9c96f0931cfb83ee975f58f201d9fbc70f512bbff363c242001e0b0d07a75d76f2f9e30abf73e51f3f2432fc232fd7c25ff9c5f6cf7cf27fe049863790d09c4ef983097e4c62e109f831f1479e7f5e802b825f11
f9594e0cff0712e678466d9cfbe1cadf810fff0f88c41316fe4c6018fe083fe70fe34afc118e400ef0138667482a18c6ff499e05841fc0020c7f6c08214308f922c0c2ff949384302b022e063eca41c27158e2ffca4f213cdc618c845b2e09ffff28fc4a00c20f24fcff557280f00fff7f120ce0ffbf0f06e00affff39fc42f9
ffc724349cfcffe9d0808bff3f5c1046f8ffeb0316feff3f8087ffbfcecbff3f0f77f82b8fff3f1bfe8c0fff7f34fc9c7fbeffbf19be081e967f1c9e66feff6148f82909ca92e0ff7f7281ee49cec4ffdf0d0bece408ffff7430044110f0ff7f2938863ff8ffd70f20e0ff6f872308ff7f9d868fffffceffff2f000000000000
