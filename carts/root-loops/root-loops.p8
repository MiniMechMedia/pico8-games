pico-8 cartridge // http://www.pico-8.com
version 39
__lua__
--root loops                     v0.1.0
--mini mech media



gs = nil

dirs = {
	left = 0,
	right = 1,
	up = 2,
	down = 3,
	z = 4,
	x = 5
}

gameOverWin = 'win'
gameOverLose = 'lose'



function makeNode(x, y)
	local ret = {
		isDead = false,
		pos = vec2(x,y),
		getWorldPos = function(self)
			return (self.pos - 0.6*vec2(1,1)) * 24 + vec2(7, 11)
		end,
		parent = nil,
		children = {},
		getRoot = function(self)
			if self.parent == self then
				return self
			end
			return self.parent:getRoot()
		end
	}
	ret.parent = ret
	return ret
end
function makeNodes()
	local ret = {}
	for x = 1, 5 do
		local row = {}
		for y = 1, 5 do
			add(row, makeNode(
				x,
				y
				))
		end
		add(ret, row)
	end
	return ret
end




function makeEdge(node1, node2)
	add(node1.children, node2)
	add(node2.children, node1)

	return {
		node1 = node1,
		node2 = node2
	}
end

function makeEdges(nodes)
	local ret = {}
	-- for row in all(nodes) do
	-- 	for node in all(row) do
	-- 		for dir in all(card_dirs) do
	-- 			local other = gs:getNodeAt(node.pos + dir)
	-- 			if other != nil then
	-- 				add(ret, makeEdge(node, other))
	-- 			end
	-- 		end
	-- 	end
	-- end
	for node in all(nodes) do
		-- for dir in all(shuffle(card_dirs))
			local other = gs:getNodeAt(node.pos + rnd(card_dirs))
			if other != nil then
				if other:getRoot() != node:getRoot() then
					add(ret, makeEdge(node, other))
					-- And now union
					other:getRoot().parent = node
				end
			end
	end
	return ret
end

--https://gist.github.com/Uradamus/10323382
function shuffle(tbl)
  for p = #tbl, 2, -1 do
    local q = flr(rnd(p)) + 1
    tbl[p], tbl[q] = tbl[q], tbl[p]

  end
  return tbl
end

function _init()
	-- srand(91)
	gs = {
				startedAt = time(),
		getElapsed = function(self)
			return time() - self.startedAt
		end,

		getTimeLeft = function(self)
			return 60 - self:getElapsed()
		end,

		getAllNodes = function(self)
			local ret = {}
			for row in all(self.nodes) do
				for node in all(row) do
					if not node.isDead then
						add(ret, node)
					end
				end
			end
			shuffle(ret)
			return ret
		end,
		isGameOver = false,
		gameOverState = nil,
		startTime = t(),
		endTime = nil,
		currentAnimation = nil,
		nodes = {},
		gameCount = 0,
		numWrong = 0,
		numRight = 0,
		getNodeAt = function(self, vec)
			local temp = self.nodes[vec.x]
			if temp == nil then
				return nil
			end

			if temp[vec.y] != nil and not temp[vec.y].isDead then
				return temp[vec.y]
			end
			return nil
		end
	}
	initGraph(gs)
	-- assert(#newEdges > 0)
	-- for edge in all(newEdges) do
	-- 	add(gs.edges, edge)
	-- end
end


function initGraph(gs)
	gs.gameCount += 1
	gs.nodes = makeNodes()
	local edges1 = makeEdges(gs:getAllNodes())
	local edges2 = makeEdges(gs:getAllNodes())
	for edge in all(edges2) do
		add(edges1, edge)
	end
	gs.edges = edges1
	dropDisconnected(gs)

	gs.isTree = true

	if rnd() < 0.5 then
		local didMakeCycle = createCycle(gs)
		if didMakeCycle then
			gs.isTree = false
		end
	end
end

function areConnected(node1, node2, edges)
	for edge in all(edges) do
		if (edge.node1 == node1 and edge.node2 == node2) or 
			(edge.node1 == node2 and edge.node2 == node1) then
				return true
		end			
	end
	return false
end

function createCycle(gs)
	-- local ret = {}
	local didAdd = false
	for node in all(gs:getAllNodes()) do
	-- for dir in all(shuffle(card_dirs))
		local other = gs:getNodeAt(node.pos + rnd(card_dirs))
		if other != nil then
			if other:getRoot() == node:getRoot() and not areConnected(node, other, gs.edges) then
				-- assert(false)
				add(gs.edges, makeEdge(node, other))
				didAdd = true
				-- -- And now union
				-- other:getRoot().parent = node
				break
			end
		end
	end
	-- assert(didAdd)
	-- return ret
	return didAdd
end

function dropDisconnected(gs)
	-- TODO
	local counter = {}
	for node in all(gs:getAllNodes()) do
		local root = node:getRoot()
		if counter[root] == nil then
			counter[root] = 0
		end
		counter[root] += 1
	end

	local maxRoot = nil
	local maxCount = 0
	for node in all(gs:getAllNodes()) do
		local root = node:getRoot()
		if counter[root] > maxCount then
			maxCount = counter[root]
			maxRoot = root
		end
	end

	for node in all(gs:getAllNodes()) do
		local root = node:getRoot()
		if root != maxRoot then
			node.isDead = true
		end
	end

	local newEdges = {}
	for edge in all(gs.edges) do
		if (not edge.node1.isDead) and (not edge.node2.isDead) then
			add(newEdges, edge)
		end
	end
	gs.edges = newEdges
end

function rndrange(_min, _max)
	local diff = _max - _min
	return _min + diff * rnd()
end

metaTable = {
	__add = function(v1, v2)
		return vec2(v1.x + v2.x, v1.y + v2.y)
	end,
	__sub = function(v1, v2)
		return vec2(v1.x - v2.x, v1.y - v2.y)
	end,
	__mul = function(s, v)
		if type(s) == 'table' then
			s,v = v,s
		end

		return vec2(s * v.x, s * v.y)
	end,
	__div = function(v, s)
		return vec2(v.x / s, v.y / s)
	end,
	__eq = function(v1, v2)
		return v1.x == v2.x and v1.y == v2.y
	end
}

function vec2fromAngle(ang)
	return vec2(cos(ang), sin(ang))
end

function vecFromDir(dir)
	if dir == dirs.left then
		return vec2(-1, 0)
	elseif dir == dirs.right then
		return vec2(1, 0)
	elseif dir == dirs.up then
		return vec2(0, -1)
	elseif dir == dirs.down then
		return vec2(0, 1)
	else
		assert(false)
	end
end

function modInc(x, mod)
	return (x + 1) % mod
end

function modDec(x, mod)
	return (x - 1) % mod
end

function vec2(x, y)
	local ret = {
		x = x,
		y = y,
		norm = function(self)
			return vec2fromAngle(atan2(self.x, self.y))
		end,
		squareDist = function(self, other)
			return max(abs(self.x - other.x), abs(self.y - other.y))
		end,
		taxiDist = function(self, other)
			return abs(self.x - other.x) + abs(self.y - other.y)
		end,
		-- Beware of using this on vectors that are more than 128 away
		eucDist = function(self, other)
			local dx = self.x - other.x
			local dy = self.y - other.y
			-- return sqrt(dx * dx + dy * dy)
			return approx_magnitude(dx, dy)
		end,
		isWithin = function(self, other, value)
			return self:taxiDist(other) <= value and
				self:eucDist(other) <= value
		end,
		isOnScreen = function(self, extra)
			if extra == nil then extra = 0 end

			return extra <= self.x and self.x <= 128 - extra
				and extra <= self.y and self.y <= 128 - extra
		end,
		length = function(self)
			return self:eucDist(vec2(0, 0))
		end,
		angle = function(self)
			return atan2(self.x, self.y)
		end
	}

	setmetatable(ret, metaTable)

	return ret
end
card_dirs = {
	vec2(1,0),
	vec2(-1,0),
	vec2(0,1),
	vec2(0,-1)
}

function hasAnimation()
	return gs.currentAnimation != nil and costatus(gs.currentAnimation) != 'dead'
end

function acceptInput()
	if btnp(dirs.x) then
		if gs.isTree then
			gs.numRight += 1
			sfx(8)
		else
			gs.numWrong += 1
			sfx(22)
		end
		initGraph(gs)

	elseif btnp(dirs.z) then
		if not gs.isTree then
			gs.numRight += 1
			sfx(8)

		else
			gs.numWrong += 1
			sfx(22)

		end
		initGraph(gs)
	end

end

function _update()

	if gs.isGameOver then
		if gs.endTime == nil then
			gs.endTime = t()
		end
		-- Restart
		if btnp(dirs.x) then
			if (time() - gs.endTime) > 1 then
				_init()
			end
		end
		return
	end

	if hasAnimation() then
		local active, exception = coresume(gs.currentAnimation)
		if exception then
			stop(trace(gs.currentAnimation, exception))
		end

		return
	end
	if gs:getTimeLeft() < 0 then
		-- gs.currentAnimation = cocreate(function()
			gs.isGameOver = true
		-- 	gs.suppressplayagain = true
		-- 	for i = 1,30 do
		-- 		yield()
		-- 	end
		-- 	gs.suppressplayagain = false

		-- end)
		-- return
	end

	acceptInput()

end

function drawGameOverWin()

end

function drawGameOverLose()
	color(7)
	suppressplayagain = false
	if gs.endTime != nil then
		-- print(time() - gs.endTime)
		suppressplayagain = (time() - gs.endTime) < 1
	else
		suppressplayagain = true
	end
	print('\n rounds completed: ' .. gs.gameCount-1)
	local acc = 0
	if gs.gameCount > 1 then
		 acc = flr(gs.numRight / (gs.gameCount - 1) * 1000)/10
	end
	print('\n accuracy: ' .. acc .. '%')
	print('\n\n')
	if not suppressplayagain then
		print(' press ❎ to play again')
	end
end

function _draw()
	cls(3)
	cls()
	if gs.isGameOver then
		if gs.gameOverState == gameOverWin then
			drawGameOverWin()
		else
			drawGameOverLose()
		end
		return
	end

	local count = 0
	for edge in all(gs.edges) do
		-- count += 1
		-- if count > 4 then
		-- 	break
		-- end
		local pos1 = edge.node1:getWorldPos()
		local pos2 = edge.node2:getWorldPos()
		-- TODO add graded color
		rectfill(pos1.x-2, pos1.y-2, pos2.x+2, pos2.y+2, 2)
		rectfill(pos1.x-1, pos1.y-1, pos2.x+1, pos2.y+1, 8)
		rectfill(pos1.x, pos1.y, pos2.x, pos2.y, 14)
	end

	-- Draw
	-- assert(#gs.nodes > 10)
	for row in all(gs.nodes) do
		for node in all(row) do
			if not node.isDead then
				-- circfill(node:getWorldPos().x, node:getWorldPos().y, 2, 7)
				spr(5, node:getWorldPos().x-8, node:getWorldPos().y-8, 2, 2)
			end
		end
	end

	color(7)
	print('round ' .. gs.gameCount, 9,3)
	print('time ' .. gs:getTimeLeft()\1, 47,3)
	spr(10, 83, 1)
	print(gs.numRight, 93, 3)
	spr(9, 106, 2)
	print(gs.numWrong, 115, 3)

end

__gfx__
000000000000055555500000bbbbb000000bbbbb0000011111100000bbbbb000000bbbbb80000080000000000000000000000000000000000000000000000000
000000000005666666555000bbb00dddddd00bbb00015ddddddd1000bbb00dddddd00bbb08000800000000030000000000000000000000000000000000000000
007007000056666666655500bb00dddd666660bb0015ddd66666d100bb00dddd666660bb00808000000000300000000000000000000000000000000000000000
000770000566776666665510b050ddd66777660b0155dd6666776d10b050ddd66777660b00080000000003000000000000000000000000000000000000000000
00077000066777766666d510b05dddd67777760b015ddd66677776d0b05dddd67777760b00808000300030000000000000000000000000000000000000000000
00700700566777766666d551005ddd6677777600155dd666677776d5005ddd667777760008000800030300000000000000000000000000000000000000000000
00000000d66677666666d5510155dd6677777600155dd666667766d50155dd667777760080000080003000000000000000000000000000000000000000000000
00000000d66666666666d5510155ddd667776600155dd66666666dd51155ddd66777660000000000000000000000000000000000000000000000000000000000
00000000d66666666666d551015550d666666000155ddd6666666dd5115550d66666600000000000000000000000000000000000000000000000000000000000
00000000d6666666666dd551015550ddd66600001555ddd66666dd51115550ddd666000000000000000000000000000000000000000000000000000000000000
000000005566666666dd55110115505ddd0000001155dddddddddd511115505ddd00000000000000000000000000000000000000000000000000000000000000
00000000055666666dd55510b0115555dddd000b01155dddddddd510b1115555dddd000b00000000000000000000000000000000000000000000000000000000
000000000555dddddd555110b01115555dd0500b0111555ddddd5110b11115555dd0500b00000000000000000000000000000000000000000000000000000000
000000000055555555511100bb011115555550bb0011155555551100bb111115555550bb00000000000000000000000000000000000000000000000000000000
000000000001155555111000bbb0011111000bbb0001111555511000bbb1111111111bbb00000000000000000000000000000000000000000000000000000000
000000000000011111100000bbbbb000000bbbbb0000011111100000bbbbb111111bbbbb00000000000000000000000000000000000000000000000000000000
__label__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030000000000000008000008000000000000000
00000000077700770707077007700000077707770000000777077707770777000007770777000000000000000300077007770000000800080007770000000000
00000000070707070707070707070000000700070000000070007007770700000000070707000000000000003000007007070000000080800000070000000000
00000000077007070707070707070000077707770000000070007007070770000007770777000000000300030000007007770000000008000000770000000000
00000000070707070707070707070000070007000000000070007007070700000007000707000000000030300000007007070000000080800000070000000000
00000000070707700077070707770000077707770000000070077707070777000007770777000000000003000000077707770000000800080007770000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000008000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000
0000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd100000000000
000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d10000000000
000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d1000000000
00000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000
00000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000
00000000155dd666667766d522222222155dd666667766d522222222155dd666667766d500000000155dd666667766d522222222155dd666667766d500000000
00000000155dd66666666dd588888888155dd66666666dd588888888155dd66666666dd500000000155dd66666666dd588888888155dd66666666dd500000000
00000000155ddd6666666dd5eeeeeeee155ddd6666666dd5eeeeeeee155ddd6666666dd500000000155ddd6666666dd5eeeeeeee155ddd6666666dd500000000
000000001555ddd66666dd51888888881555ddd66666dd51888888881555ddd66666dd51000000001555ddd66666dd51888888881555ddd66666dd5100000000
000000001155dddddddddd51222222221155dddddddddd51222222221155dddddddddd51000000001155dddddddddd51222222221155dddddddddd5100000000
0000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd51000000000
000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd511000000000
00000000001115555555110000000000001115555555110000000000001115555555110000000000001115555555110000000000001115555555110000000000
00000000000111155551100000000000000111155551100000000000000111155551100000000000000111155551100000000000000111155551100000000000
00000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000
0000000000000000000000000000000000000028e82000000000000000000028e82000000000000000000028e82000000000000000000028e820000000000000
0000000000000000000000000000000000000028e82000000000000000000028e82000000000000000000028e82000000000000000000028e820000000000000
0000000000000000000000000000000000000028e82000000000000000000028e82000000000000000000028e82000000000000000000028e820000000000000
0000000000000000000000000000000000000028e82000000000000000000028e82000000000000000000028e82000000000000000000028e820000000000000
0000000000000000000000000000000000000028e82000000000000000000028e82000000000000000000028e82000000000000000000028e820000000000000
0000000000000000000000000000000000000028e82000000000000000000028e82000000000000000000028e82000000000000000000028e820000000000000
0000000000000000000000000000000000000028e82000000000000000000028e82000000000000000000028e82000000000000000000028e820000000000000
0000000000000000000000000000000000000028e82000000000000000000028e82000000000000000000028e82000000000000000000028e820000000000000
00000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000
0000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd100000000000
000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d10000000000
000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d1000000000
00000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000
00000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000
00000000155dd666667766d522222222155dd666667766d500000000155dd666667766d522222222155dd666667766d500000000155dd666667766d500000000
00000000155dd66666666dd588888888155dd66666666dd500000000155dd66666666dd588888888155dd66666666dd500000000155dd66666666dd500000000
00000000155ddd6666666dd5eeeeeeee155ddd6666666dd500000000155ddd6666666dd5eeeeeeee155ddd6666666dd500000000155ddd6666666dd500000000
000000001555ddd66666dd51888888881555ddd66666dd51000000001555ddd66666dd51888888881555ddd66666dd51000000001555ddd66666dd5100000000
000000001155dddddddddd51222222221155dddddddddd51000000001155dddddddddd51222222221155dddddddddd51000000001155dddddddddd5100000000
0000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd51000000000
000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd511000000000
00000000001115555555110000000000001115555555110000000000001115555555110000000000001115555555110000000000001115555555110000000000
00000000000111155551100000000000000111155551100000000000000111155551100000000000000111155551100000000000000111155551100000000000
00000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000
0000000000000028e82000000000000000000000000000000000000000000000000000000000000000000028e82000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000000000000000000000000000028e82000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000000000000000000000000000028e82000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000000000000000000000000000028e82000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000000000000000000000000000028e82000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000000000000000000000000000028e82000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000000000000000000000000000028e82000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000000000000000000000000000028e82000000000000000000028e820000000000000
00000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000
0000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd100000000000
000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d10000000000
000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d1000000000
00000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000
00000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000
00000000155dd666667766d522222222155dd666667766d522222222155dd666667766d500000000155dd666667766d500000000155dd666667766d500000000
00000000155dd66666666dd588888888155dd66666666dd588888888155dd66666666dd500000000155dd66666666dd500000000155dd66666666dd500000000
00000000155ddd6666666dd5eeeeeeee155ddd6666666dd5eeeeeeee155ddd6666666dd500000000155ddd6666666dd500000000155ddd6666666dd500000000
000000001555ddd66666dd51888888881555ddd66666dd51888888881555ddd66666dd51000000001555ddd66666dd51000000001555ddd66666dd5100000000
000000001155dddddddddd51222222221155dddddddddd51222222221155dddddddddd51000000001155dddddddddd51000000001155dddddddddd5100000000
0000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd51000000000
000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd511000000000
00000000001115555555110000000000001115555555110000000000001115555555110000000000001115555555110000000000001115555555110000000000
00000000000111155551100000000000000111155551100000000000000111155551100000000000000111155551100000000000000111155551100000000000
00000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000
0000000000000028e82000000000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000
0000000000000028e82000000000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000
00000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000
0000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd100000000000
000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d10000000000
000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d1000000000
00000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000
00000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000
00000000155dd666667766d500000000155dd666667766d522222222155dd666667766d500000000155dd666667766d522222222155dd666667766d500000000
00000000155dd66666666dd500000000155dd66666666dd588888888155dd66666666dd500000000155dd66666666dd588888888155dd66666666dd500000000
00000000155ddd6666666dd500000000155ddd6666666dd5eeeeeeee155ddd6666666dd500000000155ddd6666666dd5eeeeeeee155ddd6666666dd500000000
000000001555ddd66666dd51000000001555ddd66666dd51888888881555ddd66666dd51000000001555ddd66666dd51888888881555ddd66666dd5100000000
000000001155dddddddddd51000000001155dddddddddd51222222221155dddddddddd51000000001155dddddddddd51222222221155dddddddddd5100000000
0000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd51000000000
000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd511000000000
00000000001115555555110000000000001115555555110000000000001115555555110000000000001115555555110000000000001115555555110000000000
00000000000111155551100000000000000111155551100000000000000111155551100000000000000111155551100000000000000111155551100000000000
00000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000
0000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000000000000000000000000000
0000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000000000000000000000000000
0000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000000000000000000000000000
0000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000000000000000000000000000
0000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000000000000000000000000000
0000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000000000000000000000000000
0000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000000000000000000000000000
0000000000000000000000000000000000000028e82000000000000000000000000000000000000000000028e820000000000000000000000000000000000000
00000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000000000000000000000000000
0000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd10000000000000015ddddddd100000000000000000000000000000000000
000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d100000000000015ddd66666d10000000000000000000000000000000000
000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d10000000000155dd6666776d1000000000000000000000000000000000
00000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000015ddd66677776d000000000000000000000000000000000
00000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000155dd666677776d500000000000000000000000000000000
00000000155dd666667766d522222222155dd666667766d522222222155dd666667766d522222222155dd666667766d500000000000000000000000000000000
00000000155dd66666666dd588888888155dd66666666dd588888888155dd66666666dd588888888155dd66666666dd500000000000000000000000000000000
00000000155ddd6666666dd5eeeeeeee155ddd6666666dd5eeeeeeee155ddd6666666dd5eeeeeeee155ddd6666666dd500000000000000000000000000000000
000000001555ddd66666dd51888888881555ddd66666dd51888888881555ddd66666dd51888888881555ddd66666dd5100000000000000000000000000000000
000000001155dddddddddd51222222221155dddddddddd51222222221155dddddddddd51222222221155dddddddddd5100000000000000000000000000000000
0000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd5100000000001155dddddddd51000000000000000000000000000000000
000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd5110000000000111555ddddd511000000000000000000000000000000000
00000000001115555555110000000000001115555555110000000000001115555555110000000000001115555555110000000000000000000000000000000000
00000000000111155551100000000000000111155551100000000000000111155551100000000000000111155551100000000000000000000000000000000000
00000000000001111110000000000000000001111110000000000000000001111110000000000000000001111110000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__sfx__
010200000472005731067410c75110761077610070000700007001970000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
000800000f04013051170511800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000300000c1600e151101411213113121141111511115115000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000006450084500d4500f4501a450214402243000400004000040000400004000040000400004000040000400004000040000400004000040000400004000040000400004000040000400004000040000400
000400000c5600f55114051180511b0411d0412000017000140000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
000300000c7500f041130311312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00060000190611c0511f04122031280051f000220002200021000220001f0001f000220002200021000220001f0001f0002e0012e0002d0002e0002b0002b0002b0022b005000000000000000000000000000000
000200000c1540d1510e5510f54110041110411273113731147311573500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000400002152526535005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500
000300002f73534735000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000300003053534535044000440010400044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00030000180251f535260452a55512604176011b6011f601226012560128601296012b601296012760124601216011f6011c601186011560113601116010f6010e60500500005000050000500005000050000500
0002000019045000001e0450000023045000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00040000260452b035300253000500703007030070300703007030070300703007030070300703007030070300703007030070300703007030070300703007030070300703007030070300703007030070300703
000200002474526745297452e7453074532745357453a7452400526005290052e0053000532005350053a00500000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000197770c700197770c7001c7670c7001c7570c7001e7570c700217470c700217370c700237370c700237270c700257170c700287170c7000c7000c700135000c600135000c600135050c605135050c605
00010000287770c700257770c700257670c700237570c700237570c700217470c700217370c7001e7370c7001c7270c7001c7170c70019717127050c700127050070000700007000070000700007000070000700
00020000016100d6111c61131611146110c61108611056110261501601016050c600116001a600006000060000600006000060000600006000060000600006000000000000000000000000000000000000000000
00020000052670061710267006171236700617123570161712357016170a157006170d147006170d147006170b047006170b037006170a037006170a727006170b727006170c717006170b117006170811700617
000400002763022630206201b6201661015610116100d6100b6100761005610036100261002610026100261001610016100161501600016000160001600000000000000000000000000000000000000000000000
00070000386303062025610206101c61019610176101561012610106100f6100d6100b6100a613086130761306613046130361303613006050060500605006050060500605006050060500605006050060500605
000200000c475152740f474186651646515264114540e6550d4550b24408445066440443502234014340062500424002240041500615000040000400004000040000400004000040000400004000040000400004
0002000012055112550f0450e2450d0450c2450b0350a235090350823507025062250502504225030150221501015012150400503205010050760506605066050560504605046050360502605016050160501605
00020000010541325514045142451203515235110351622510025172250e0250a2250702508225050250621503015042150400503205010050760506605066050560504605046050360502605016050160501605
000200003f643232333a64121231346411e2312f641172312a63112221246310d2211e63109221186310522111621032110c62101211086250121504625002150261500615006000060500600006000060000600
000300000c363236650935520641063311b6210432116611023210f611013110a6110361104600036000260001600016000460003600026000160001600016000160004600036000260001600016000160001600
00051c2032251376512a25133641222412e6411b2412564115241216410c2311d631092311963106231166310323112631022310e631012310a63100221086210022104621002210362100211026110021100611
000500001235311353103530f3530e3530e3530d3530d3430c3430c3430b3430b3430a3430a343093330933308333083330733307333063330632305323053230432304323033230332302313023130131301313
000100000c1500e0511105114051170511705014051120510f0510c15100100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100
000500000c466186660c456186560c446186460c436186360c416186160c406184060040000400004000040000400004000040000400004000040000400004000040000400004000040000400004000040000400
0002000002215006200341500630052150063008415006300b215006400d415006401022500640124250065011225006400f425006400d2150064009415006300621500630054150063003215006300341500620
000200003f6142646525361242512345122341212413f6041f3050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100200a4133b2110a1133b4110b013302110b313302210a1133b2110a4133b2110a0133b2210a1133b211091133a211091133a6110a4133b2210a1133b2110a7133b2210a3133b2110a1133b2110a6133b411
000100003b35039350363503475032750307502e7502b750297502675023750235000b20007200062000520003200022000120001200000000000000000000000000000000000000000000000000000000000000
00020000133551f3552b3553735537305003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000000
000100001d251202512f2512c2513e2513d2511d0001d0001d0001d0001d0001d0001d00000200002000020000200002000020000200002000020000200002000020000200002000020000200002000020000200
000100002b52329543265532555323551215511f5511c5511955118551165511455113541105410d5310b52108521075210551103511025110151102400023000130003400024000140001400024000240001400
000100000f12500000000000710500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000c15515003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0004000014163007000c1000000000000000001015300700000000000000000000000b14300700000000000000000000000613300700000000000000000000000312300700000000000000000000000111300700
000200000c05006731037150070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
000c00000c34300300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300
0005000011574160741357418074155641a064165641b054185541d0541a7541f5441b044217441d544220441f744245342103426734220242772424014297140070400704007040070400704007040070400704
000600000b07012741127350c07013741137350d07014741147350f0701674116735182001840018300185021800512200122050a2000a4000a3000a0050a70500000000000d0001400014005000000000000000
000300000c343236450933520621063311b6210432116611023210f611013110a6110361104600036000260001600016000460003600026000160001600016000160004600036000260001600016000160001600
00020000187551a5551c7551554517745195451273514535167350f52511725135250c7150e515107150060000600006000060000600006000060000600006000060000600006000060000600006000060000600
000600001c36311000103331031310303107031070513005306041070310705000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000200002406025051270412f0002b0512c0512d0412e0312f0212f0052f00032000030000000037000370002f0002f0002f0002f000000003300004000000000000000000000000000000000000000000000000
001000001c1431c1331c1231c1131b1031a1030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000300002e3322b33128332263312333221331203321d3311b3221a3211932217321153221332112322103210e3120c3110b31209311073120631104312033110231201311013120031100300003000030000300
00010000352103751534100371003f10039100331001f1001f1001f1001f100231002a10034100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00090000013150132501345000002660021600196001260011607116070c60710607156071a6071e607206072260722607206001d6001c60018600156001560014600166001a6001c6001c600166000f60000000
000200001d3551d7451d3351375513345137350070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
000a00022474129741000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000300001d61506323156002d60001600016000160002600026000360003600036000d60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000c0150c0050c005110350c0050c0050c00516055000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005
0007000023745287452d3021e105370021c0051330213302133021330213302133021330213302133021330213302133021330213302133021330213302133021320207002070022b0001f0001f0021f0021f002
000400002f3402f3402f3403434034340343403433034330343303433034330343203432034310343103431034310343103431500300003000030000300003000030000300003000030000300003000030000300
000200001d6651e655083410a4410b3410c4310d3310f43111321134211532117411193111b4111b3011d3011830510305163050f3050e3050d3050c3050b3050a30509305083050630505305043050000000000
000900000864514645070450654502204006050550005500266002460023600216001f6001d6001c6001a60018600176001660015600146000030000300003000030000300003000030000300003000030000300
00020000071540f163163730b22332643216331c6231861315613136130e6130a61304600000000000000000000000b1010710105101031010110100000000000000000000000000000000000000000000000000
0012000015753047000500005700070000770009000097000b0000b7000c0000c7000c000180000c000180000c000180000c00018000210022100221002000000000000000000000000000000000000000000000
000600002336311000103330400010705107031070513005306041070310705000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000137371c537142371d737155471e147167471f547161571f757175572015718767215671916722767115771a177127771b57718100210001950022100140001d500151001e000165001f1001700020500
__meta:cart_info_start__
cart_type: game
# Embed: 750 x 680
game_name: Root Loops
# Leave blank to use game-name
game_slug: 
jam_info:
  - jam_name: TriJam
    jam_number: 227
    jam_url: null
    jam_theme: 'Trees'
  - jam_name: MiniJam
    jam_number: 136
    jam_url: https://itch.io/jam/mini-jam-136-cycles
    jam_theme: 'Cycles'
    minijam_limitation: '16x16 resolution'
tagline: Is it a tree or is it cyclic?
time_left: '0:0:0'
develop_time: '1h 56m 46s'
description: |
  Classify as many graphs as you can in 60 seconds. Each graph is either a tree (has zero cycles) or cyclic (has at least one cycle).

  The graph pictured below is a tree because there are no loops  
  ![Instructions](https://github.com/MiniMechMedia/pico8-games/raw/master/carts/root-loops/images/instructions-tree.png)

  This graph pictured below is cyclic because there is a loop  
  ![Instructions](https://github.com/MiniMechMedia/pico8-games/raw/master/carts/root-loops/images/instructions-cyclic.png)

controls:
  - inputs: [X]
    desc: Classify graph as a tree
  - inputs: [Z]
    desc: Classify graph as cyclic
hints: |
  [Wikipedia](https://en.wikipedia.org/wiki/Cycle_(graph_theory)) has more information about graph theory and cycles.
acknowledgements: |
  Sound effects are from [Gruber](https://www.lexaloffle.com/bbs/?uid=11292)'s [Pico-8 SFX Pack](https://www.lexaloffle.com/bbs/?pid=64837),
  licensed under [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/)
to_do: []
version: 0.1.0
img_alt: A grid of gray spheres connected by red lines to form a graph.
about_extra: ''
number_players: [1]
__meta:cart_info_end__


