pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- px9 data compression v9
-- by zep & co.
--
-- changelog:
--
-- v9:
--  @pancelor
--  ★ redo bitstream order
--  234 tokens (but ~4% slower)
--
-- v8:
--  @pancelor
--  ★ smaller vlist initialization
--  241 tokens
--
-- v7:
--  smaller vlist_val by @felice
--  7b -> 254 tokens (fastest)
--  7a -> 247 tokens (smallest)
--
-- v6:
--  smaller vlist_val by @p01
--  -> 258 tokens
--
-- v5:
--  fixed bug found by @icegoat
--  262 tokens (the bug was caused by otherwise redundant code!)
--
-- v4:
--  @catatafish
--  ★ smaller decomp
--
--  @felice
--  ★ fix bit flush at end
--  ★ use 0.2.0 functionality
--  ★ even smaller decomp
--  ★ some code simpler/cleaner
--  ★ hey look, a changelog!
--
-- v3:
--  @felice
--  ★ smaller decomp
--
-- v2:
--  @zep
--  ★ original release
--
--[[

	features:
	★ 273 token decompress
	★ handles any bit size data
	★ no manual tuning required
	★ decent compression ratios


	██▒ how to use ▒██

	1. compress your data

		px9_comp(source_x, source_y,
			width, height,
			destination_memory_addr,
			read_function)
				
		e.g. to compress the whole
		spritesheet to the map:
		
		px9_comp(0,0,128,128,
			0x2000, sget)

	…………………………………
	2. decompress
	
		px9_decomp(dest_x, dest_y,
			source_memory_addr,
			read_function,
			write_function)

		e.g. to decompress from map
		memory space back to the
		screen:
		
		px9_decomp(0,0,0x2000,
			pget,pset)

		…………………………………

		(see example below)

		note: only the decompress
		code (tab 1) is needed in
		your release cart after
		storing compressed data.
		
]]

function _init()

	-- test: compress from
	-- spritesheet to map, and
	-- then decomp back to screen

	cls()
	print("compressing..",5)
	flip()

	w=128 h=128
	raw_size=(w*h+1)\2 -- bytes

	ctime=stat(1)

	-- compress spritesheet to map
	-- area (0x2000) and save cart

	clen = px9_comp(
		0,0,
		w,h,
		0x2000,
		sget)

	ctime=stat(1)-ctime

	--cstore() -- save to cart

	-- show compression stats
	print("                 "..(ctime/30).." seconds",0,0)
	print("")
	print("compressed spritesheet to map",6)
	ratio=tostr(clen/raw_size*100)
	print("bytes: "
		..clen.." / "..raw_size
		.." ("..sub(ratio,1,4).."%)"
		,12)
	print("")
	print("press ❎ to decompress",14)

	memcpy(0x7000,0x2000,0x1000)

	-- wait for user
	repeat until (btn(❎) or true)

	print("")
	print("decompressing..",5)
	flip()

	-- save stats screen
	local cx,cy=cursor()
	local sdata={}
	for a=0x6000,0x7ffc do
		sdata[a]=peek4(a)
	end

	dtime=stat(1)

	-- decompress data from map
	-- (0x2000) to screen

	px9_decomp(0,0,0x2000,pget,pset)

	dtime=stat(1)-dtime

	-- wait for user
	repeat until (btn(❎) or true)

	-- restore stats screen
	for a,v in pairs(sdata) do
		poke4(a,v)
	end

	-- add decompression stats
	print("                 "..(dtime/30).." seconds",cx,cy-6,5)
	print("")

end

-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 8 and
	-- 15 bits long with the next
	-- bits in these positions:
	--   0b0000.12345678...
	-- (1 is the next bit in the
	--   stream, 2 is the next bit
	--   after that, etc.
	--  0 is a literal zero)
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<8 then
			-- cache next 8 bits
			cache_bits+=8
			cache+=@src>>cache_bits
			src+=1
		end

		-- shift requested bits up
		-- into the integer slots
		cache<<=bits
		local val=cache&0xffff
		-- remove the integer bits
		cache^^=val
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)
		end
	end
end

-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function
	px9_comp(x0,y0,w,h,dest,vget)
	local mytable = {}
	local dest0=dest
	local bit=1
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	local cache,cache_bits=0,0
	function putbit(bval)
	 cache=cache<<1|bval
	 cache_bits+=1
		if cache_bits==8 then
			mytable[dest] = cache
			poke(dest,cache)
			dest+=1
			cache,cache_bits=0,0
		end
	end

	function putval(val, bits)
		for i=bits-1,0,-1 do
			putbit(val>>i&1)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if cache_bits>0 then
		-- flush
		mytable[dest] = cache<<8-cache_bits
		poke(dest,cache<<8-cache_bits)
		dest+=1
	end

	local str = ''
	for i = dest0, dest do
		-- str ..= (chr(mytable[i]))
		str ..= chr(peek(i))
	end
	printh('compressed to ' .. #str .. ', ' .. #str/8192)
	str = escape_binary_str(str)
	print('' .. dest-dest0 .. ', ' .. #str) -- .. dest0 .. ', ' .. dest .. ', ' .. str)
	printh(str, 'output.bin')
	printh(str, '@clip')
	return dest-dest0
end

function byte_to_hex(byte)
	local hi = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte\16]
	local lo = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte%16]
	return '\\x' .. hi .. lo
end

function escape_binary_str(s)
 local out=""
 for i=1,#s do
  local c  = sub(s,i,i)
  local nc = ord(s,i+1)
  local pr = (nc and nc>=48 and nc<=57) and "00" or ""
  local v=c
  if(c=="\"") v="\\\""
  if(c=="\\") v="\\\\"
  if(ord(c)==0) v="\\"..pr.."0"
  if(ord(c)==10) v="\\n"
  if(ord(c)==13) v="\\r"
  if(ord(c)==9) v="\\t"
  	-- v = byte_to_hex(ord(c))
  out..= v
 end
 return out
end
-- 40% - 50%
-- 14 images per cart...
-- dw = 8 images per cart...

__gfx__
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777776777776777777777767777677777777777777777777776777777777777777777777777
77777777777777777777777777777777777777777777777777777776777777777777677767777777777767776777677767776777777677767777777777777777
77777777777777777777777777777777777777777777777777767777777777777777777777777777777777777777777777777777777777777777677767777777
77777777777777777777777777777777777777776777677677777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777677767777777777777777777777777677777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777776777777777777767777776776776776777777777777777777677767777777777777777777777777777777777777777776777
77777777777777777777777776777777776777677777776777777777777776777677767777677777777777777677777677776777677767777677777777777777
77777777777777777777777677777776777777777777777777777777777777777777777777777777777776777777777777777777777777777777776777777777
77777777777777777777677777777777777777777777777777777776777677777767777677777777777777777777777777777777777777777777777777777777
77777777777777777767777777777777777777777767777777777677777777776777767777777777776777777777767777777777777777777777777777777777
77777777777777776777777777777777777777777777777777767777777777777777777777677767777777777677777777777777777777777777777777677777
77777777777777677777777777777677777777777777777776777777777777777777777777777777777777767777777777767776777777776777777777777777
77777777777777777777777777777777777777777777777677777777777777777777777777777777777777777777777776777777777767777777677777777777
77777777777777777777777777777777777677776777777777777777777777777777777777776777677777777777777677777777777777777777777777777777
77777777777767777777777777777777777777777777777777777777777777777776777776777777777777777777767777777777777777777777777767777777
77777777777777777777777777677777777777777777777777777777777777677777777677777777777677777777777777777777776777777777777777777777
77777777777777776777777777777777777777777777777777777777777777777776777777777777777777777777777777777777677777777677777777777777
77777777777777777777777777777777677777777777767777777777777677677777777777777777677777777677777777777767777777777777777777776777
77777777777777776777777677777777777777777777777777777777767777777776777777777767777776777777777777777777777777767777776777777777
77777777776777777777777777777777777777767777777777777777777777677777677777777777777777777777777677767777777777777777777777777777
77777777777777776777776777777777777776777777777777767777777777677776677777677777777777777777777777777777777777777777777777677777
77777777777777776777777677777777777677777777777777777776777777677777677777777777777777777777767777777777777777777777677777777777
77777777777777776777777677777767777777777777777677777777777777677776677777777777777677777777777777777777777767777767777777777777
77777777777777776777777677777777777777777777767777777777777777677777677777777677767777777677777777776777677777776777777777777777
77777777777776776777777677777777777777777777777777777677777776777776677777677777777777777777777776777777777777777777777776777777
77777777777777776777777677777777777777777777777777767777777677677777677777777777777777777777777677777777777777777777777777777777
77777777777777776777777677777777777777777777777777777777777776677776677777777777777777777777767777777777777776777777777777777777
77777777777777776777777667777777677767777777677777777777777777677776a77777777767777777677776777777777777767777777777677777776777
77777777777777776777777677777777777777777777777776777777767776677776676777767777777777777777777777777776777777776777777767777777
77777777777777776777777667777777777777777677777777777777777777677776677677776777777677777777777777777677777777777777677777777777
77777777777767776676777667777777777777777777777777777777776766f67776f66f77777677777777777677777777777777777777776777777777777777
77777777777777766b4b5d6a677777767776777677777777777777677767766777766f7667776677777777777777777777767777777776777777677777777777
7777777777777765a5555b5b4bf7777777777777777777767777677777666ff77776f66a67777677777777777777777767777777777777776777767776777777
777777777777776b4b9b455554b77777777777777777767777777777776adba66776adb467776f77777767777777677777777777777677776777677777777677
77777777777776a5a555534b95a67777777777777777777777777777776b9554a5db4a4577776677777777776777777777777777767777777677677777777777
77777777777677bdda355554ba667777777677777767777777677777776a55a6dadad5abf7776f77777777777777777777777776777777767777677777777777
77777777777777db434b55b446d67777777777767777777777777776776b455a3dada55467776777777777777777777767777677777777777677677777767777
7677777777777745b4555555b5a66777777777777777777777777677776a5a564b4b46b967776f77777767777777677777777777777776666a77666677777777
776777776777776b4355555553467777776777777777777677777777776ba66a6f6a67457777f677777777776777777777777777777777aba5ab9baa67777777
767777677777775a34b5535b45bf777777777777777776777776777777695666badda66a67766777777777777777777777777777777766a4ab44a4ab77777777
7f676777777777b5554b95453596776777677777777677777777777777ba3a5a554b6fb46676a6777777777777777777776777677767766a5a5b4ab977777777
76777777777777a35b956ab45b4667777767777677777777777777677765adbd4b44a64bab4b4677777767777777776777777776777776aba5a4ada577777777
7f6767777777775554b4354554bf776777777777777777777777776777db5b95a54bdfb934a5ba77777777776777677777777767777766b954b4ba5a67777777
76776677777777b4b45545b4b4a667f77667777777777777776777677654455b4554ad55a3595d7776777777777777777777677777777a4ab94a5b9b77777677
6f67f677777777db45b55455435a66777777777777777776777777676b4b4b495a35dab454b4ba77777777777777777777677767677766b95add94ba77777777
dadfa677777676a5b4455b4b95b5ba6766f777776776777777767767a59554b5559b464ada6a5d7777777767777777777777777677676aa5a3a6b9a577777777
4da355f777776b5b45b4544b55b95a6a5a6777777777777777767767ab5b93455b44b9b55b46ba6777777777777777777777777777776aba5a5a45abf7777777
dad4a5677777d9b9395b5b45554babf6a667777777777777777677a665a5555b94b954ada5ad4a7777777777777677767777776fa6ffab94aba5ab9a77777777
da66b4777777db4b4b9544b4b9b4b95f6a67777777777677677777dab9b4b444b4a55a355b4b4b7777677777777777777777776fa6abaadab95ad9b477777777
4dba647777776a54b4b43495555b9badadf6777767767777777677ada5a54b4b445a34a595a5ad77777777677777777777777766abfadaab9dada5aabf777777
5454a56777775ba545555b4a3454b4a666a7777777777777777776d6a34a54595b454bdb4b4a3a6776777777776777777767776a67faab9adadaba5aa6777777
5b45ba677777ad5b5b455ad55b9b9ba66f66777777777777777677a6b9b5b9b549ba5a495a5b4a77777777777777776777777776ffaba4adaa64a5aba6777777
445a55f77777db95a55b45b4b4b4adabfa6a6777777777777776764a659a554b45455ab54b945a6777777777777777777777776ff6a6adabfdadaba4a6677777
5b45abad6777da35b4555a59b445ba59da66f677767777677776f6adab5b9b94b9b955a5a5ab9d676777777677776777777777aa66adab94ab9b94da5a777767
445b44ba5777b4554b455b434b4b9badba5a677777777777766a6a5ab94a54ba4595ab95b95a5aaa6f777777777777777767776a6abaa4aba44adabaa67777a6
5a595adabf77ab9b4b9b4954b44544b94a6a67777777677777ada6badab4ab95a5b45ada4adba56aa677777777777777777776abaaadaba4aba5a5a5ab77776a
555b4ba5a777d4b4454b4ba59b4b9b96ababff7777777777766aba6a54b4d9b4b94a5ab4aba4aba6667777777677777777776a6a64aba4a5a4adab95aa7777a6
4a595a5a5777ab95b9b9595b444ab95a5fadaa6777777777776a6f46aa4ab95a4ab4a5a5a56a5a6aff7777677777777677776aa6aadaada5adab9a4a5a77776a
5555a3aba677da395a5b4ba4bab44badab4ada677767777776a6a6aabab4aba5ada5a5aba5ada5a6a6777777777777777776fa6abaa6aabadaa4abadad7777ad
aba54a5a5777ab4bab94aada5abaaabada6abf7777777776776ada56adaada5abaabada4aadabafa6f777777777777777776a6aa6adaba4aa5a6aaabaa77766a
4a5aba5ab7776aa5a5ab4bab9ba5adadaadaa6f77777777776abaaaabadabaada64adabada6a6a6a6a777777777777777776aa6a6aaafaa6aabaabfa467777a6
dab9dabfa777aba5aba4afadaadaba6adaa6aa677777777777fa66a6aa6aadaabaa6aa6aa6a6aa6a677777777777777777776a6a6a6a6aba6a6a6aaaa677776a
a6a6a6afa6776fa6aada66a6a6affa6aa66a66777777777776ffa66a66a6aa6affa6a6a6a666a66fff777777777776777776fff6f6a6a6afa6faa6a6a67777fa
ffff6ff6f777f6a66a6a6f6f6a6f6ff66f66f67777777777776f6ff6ff6f66a66f6f6f6f66f6ff7f7677777777777777777776ff6f6f6ff67f676f6f6f777767
76f6ff767777767f6676f7ff67f67f677f77777777777777777777777fffff6ffa6afa6a6ff7f77777777777777777777777777777777777777f7f6f77777777
ff6f767f77776ff6fffff6f6fffffff776f77777777777777777777676f6f6f6777767777f776777777777777777777777777777777f7f7ff7f7f7fff7777777
fffa6ffff677fa6aa6a6a6ffa6a6a6fffa6fff7777777777776ff6ffffffaa6a6a6f6f6ff6fff777777777777777777777777767ff6fffff6ff6fff6f677776f
ada6aaa6a6776abfadabafa6a6a6aa6a6a6a6a677777777676ffa6a6a6a6a6a6a6aaa6aaaa6a6a6ff6777777777777777776ffafa6aa6aaaa6aaaaaaa67777ff
a5a5ba5abf77aba5aba4adababababadada6a6f77777777777a6a6a6aadaba5abadada5aba6aaaa6aa777777777777767776aa6a6a6aadabfa6aba5baa7777a6
aba5a5a5a6f6a5a55a5a3ada5a5ada4aba4aba7767776767676aabaababa4b95a4abaabadaba5bfaa67777777767767777776a6aadabaaaaaaba4aa4ad7776ad
a5a5abada6f6ab4b9b4b4a5a5a5a5aba4abfff6ff666fa6aaba6a6adadada5abadaa5ada4adaaa6a6a77766fa66f676766767aabaaaadab4daada5abaadf66a6
ba554a5abadab954595955ab9b4ba5a5ada6aa6a6a6fababbaba6a6adab95b495a5a5a5a5ada3a66f666ffabaabaaa6fa6fa6a6ada5abaaabad95a595aa6a6ad
4ba5b4ada5a5a5b4b4b4b9a5a5a4aba66a6ab6a66a666ab959ba6666a5a5959b45a5a5ab4aba4a6a6afaa6aabaababa6ff6a6667f6a6f4da4faba5aba5a666ad
adfa6666666abafa4ab94bfdab6a6a66ad66a66666a66a5bab9da6a6b95b9b44a5abaa5aba4ab4a6a66ababab9b9baa6a6a6a6a6a6a66a66f6ada66a6666a6a6
6ad6a6a66f66766666a6ff6a6fdad6a5a66fda69bf6abfaa5a5a5a6aadaa5a5ada5fdadadad6a6adaadffab9ab4ab9ba6adaba66a3aba6a6a6a6a6ada6a66b6f
65b45b4b4b4a5a5abf6adadadabfaba5ba6adb4dadadad6aba5a66a3a66bf6abfa6666a6d6a6666ad6a66aab4ab9abfababafaada5a664ad6adada5a6a6ad956
695a5a5a6a5ad6a6fa6adbf6adadad5a6d6ada695a666a569dba66ad76fa6a5adabaf6daad6a5a66aba6adffb9badaadaaaadabadada6ada66bad6bad6bf66ad
65a55dabaababaaba66ba64b6dab4dada66bad6ba666a34ba646ad6a6a55a35b4ba6adad6ab666addada6aa6fa6aaabaabaabaaa6aabaadbaaadada66ada5666
6d66aabababababaabadada69d6a5ad66a6fdfffdabf5a5d46ad6ab665adad95a467d6666677f5aba5fadad6abfbaaaababaababababaa6ad5656a66a6a66a66
f6f6daababab9babababf66a6abda3a5ddfada6db4dab4a6ba6ba647f6abda39ba66a66666a6a5dada6abda6a5a6ababaabbaabaaab9bab4a6fadad66adbf6da
6a6babab4b9b9b5b5baadfbfda6a5a5a6a6666a59dadadb4464dadada3a4ba56a5adda5a5ad6ada5d66adabab9baababb4babaabaaab9baad66abada6bfadada
6da6ab4bab5bab935baba69bf666a6dbfd6bfd6b4bf6a5ad5ab46b4b545ad776dbda3ddb456a66dadfa5a5a6adabaab9b9b9b9b9bbabaabaa6bf4b4ba4dadada
665aabab5b9b5b5b4b9ad6a66dad6bad4bfa6ad95ad66ada56a5ad4adb466667a66dfadada6666ada6a66a666faabab4b54bab5baba4baab6fffa6a64fadadad
f4babab4b4b5b4b4b9bab55a65ba545b4a6666a355a6add6addadad66f666adab95a554b4ba666a66dba676aba67ab9b4b4b9b9b4bababaaa666677f76fababa
6aabadb4b5555b4b4b9b9b5ba54aba5abf6a66daabda6a6a6abf6ba6f66a6ba566b4aba4a46fa6ba6a6a66adad6abab5b9b9b4b4b9ba9b4b4aba6a666fad6ada
6667aa54b5b5b4b4baba34b96abada6ffa667a6ddaaa6bf6baaaaabaa6aba6ada6a5664adad66a6666ada34b4abaab9b9b9b9b4b4baba5a4dada5baabfbadada
664db4bab9b4b4b9bab9b95ada6abdabfa6666bfaaba6aaaaababaaabf66666a6dbadf666a6a6da6a6b4a5aada6abab4b9b4a3b4b9baab4abfadaad6fa6fa6a6
4b4b4aab4ba6aa6bab9db4ba66a3a54ad66ba6a6abababbababababaaaa66a6b6a5ada6a666666ad6a4abadba6a6faaab9b9b4b9baaa6666ff6666a66ff66666
4fa55669b46f66aadab9b4a6a6a6aba3ada5addabaaabaabababababababab4ba6ba6dbd66666abf666676af6ad666abaab4baaaadab7fff6f67766a6a6a6a66
a355bad6aba6a666a6fadf6666a66a5db66bfabaababbababb5b9b9babaab4b96aba6a5ab9ba5a66f6777777676a6a6a6abaaba6666ff66a6ff6f667666666a6
6a545abf6f6666f66a6ba77ff666adaa5faa66aaabab4b5b9b4b4bb9babaab9b664a6ba4adf6f6adf6f66666a66766676fabaa66a6a6a6a6a6a66a6ff7a6a6a6
66b9b44b46a6a66f66a6a66aba5bab55a66ba66babbab5ab5b9b9b5b4bababa4a6ba6fba6a6abfa6abaabaabf66767776abfa66766666a66666f66f677777677
6f5546a5ba35bab9bab467a6ada4da6666ff67aabab9b3bab4b5b5b4b4baaaba66a676fab66a6fbf6a6a6a6a6777767766f67777777777777777777777777777
76a6abad4b9ba5aba55a66adadabf6777777766abab9b4bb9ab4b4b5baba6a666777676a6a66fa76a6bfa6bf6f6f6f6f77777777777777777777777777767767
f6676f6a6ada5badabb4a6aba344a666f67776abab9bbab9b35b9b4babaa66a6a66a6a66a66f66f66ff6667ff6f6f7777777777776f6f6a6a6aa6aaababababa
7fffa66667666f6669b4666fda7666fa6666776ab9b5bab5b9bb4bb4baba6ab76a6666a66f6f76f6f6767777777777f6ffaa6abaaabaababaababbbabababa35
76a66fff777777776fbab7aabf676f6bada667ababbab5b9b5b4b9babaaba6a6a6aa666f6777777777777777fffafafaaa6abababbabab9bababaababaabb9b3
a6a6a6777777777777a6f766ada6abad4b4ba76abab4ab4b5b4bab9babaf6f6f666677f77777777777fffaaaaa6a6a6a6a6aaaab5b5b5b5b9babababaaaaabab
dba666767776666a6a66adadad66646adaa5a6baabababab9b9b9baaaa66f6f67777777777767fffafaaa6a6a6aaaaaaabaabab454555b9baaaaaaafa66aaaaa
ad666a6a666fff6ba3a3babfba6a6a5ad6dabffabab9bab9b9bababa6667f6f777777776ffafaaa6aaa6aabaabababbb4b555555b5b455aaa666677776f666af
dfba6a66766bdb553505554a6ada66adabfa6f6a6faa6aaaba6aa6f66f7777777676ffaaaa6aa6babababaaabaa5b445555b535555535b5bbabaaa6fff777777
b9535b76b555055353b5ab46a66a6bfbfa6a66a6676abf66a6666f6f677776f6afaaaba6abaabaa5a34b4b5b453543535b4555b4b5555554555b5bababaa6f77
5b95b96f9335b4b4b5b4b96a6a6bffa6fa666f6a6766f6666a6f6777776fafaa6a6aaaaaaaaba5b9b4b455555b4355355535b4555b4b4b4b55454b55b9baaaa6
44b95adab34aaada5b9ba5a66a6ff6a6a66a6766777f77ff6677777ffaa6a6aaabaa6aba6baa5ab4355b4b5b4535355535555b4b45b455b45b9b95b45b4bbbaa
adab4b5b435a6babab5ba56a66a66f6666a6777f767777777777faaaa6aaaa6baaa6aafaaab4b4b4b9baab9b53555b555b4b4b45b94b949b95ab4b9b45b445b9
3a34b9adb4bab6ba5abada66a66f6f6a66767776777777776faaa6a6aa6abaaaa6aaa6aaba9bab9baaaaba55b4b555355555b4b44b44b9b49b44b954b95b9b95
5b4a556ab546bba6b4baba6666f676f6f767777777776ffaaababababaaababa6a6a6aaaabab9baaabaaabab4b4b5b4b5b554b4b45b49b95aaba9b9b4b94b9b4
45b4ba6dbbaa6aba5aba66a6f76f777677777777776afaba6abababaaabaaaaaaaaaabb5b4baaaabaabab9a5a34b9b4555b9b445a59b49b9b99b94b94ab95959
b9a6a56a5b5aba6ada6bfa676777777777777776faa6abaabab95b4b5bab5a6a6abab49b4baababab4aaaaabab9b49bab4b555b5b4b9b49b95b9ab9b4b4b9b4b
a3da5bababa6aba6ab6f667777777777777776afababaabab45b9b4baa5abaaabaab9b34aaaa9b95abaaabaaaaa4ba4b4b44b4595a994b94b94a395ab45939b9
5adba5f6b5ba666a66f677777777777776ffaa6abaaaba55b4b4b4b4bab9bbaaba3a34baaaba35b5b9b4aab4aabaaba9b9b45b4b4b4b44b94b4b9b9b95ab9ba9
daba6abfaba66666676f77777777776fffa6a6aaa6badb9b9b4b4b4b9b4b9aaab4b9b9afba535559b4ab355b9aaab9b4554b454b44b9554b4545559b9baaa9ba
adadba6aba6f66f77f77777777766fa6afaabaabaa5a5b4555b4b455b4b9baa6bab4abaa5b55b5b9b4355555baba9a5b4b54b4b4595b9b45b4ab4aa4aaab9b9a
ba6a6ad66bff67776777777766ffafa6a6a6aabadb4b4b4b55555b4b4b4b4bba9aaba4b5b4b45b9b45b4b55555aaba59b4b94b4b4b955aaa9ba9abab9b4a4a5a
dabfabf6fa6f777777777767fffa6a6aabaaba64b939b4555b4b95b9b4b9b9abab95b4b4555b4a54b44b45b4b4b95b4b45ab99b4b93aabaaaaa6aa5a54b5b4b4
__label__

ccccccccccccccccccccccccccc11111111111111ccccccccccccc111111111111111111ccccccccc1111111cccc111111111111111111111111111111111111
ccccccccccccccccccc11cccccccc1111111111111111c1111111111111c111cc11ccc111ccccccccc1111111cccc11111111111111111111111111111111111
ccccccccccccccccccc111cc11cccc11cccc1111111111111111111111ccc11cc111ccc11ccccccccccc1111111ccc1111111111111111111111111111111111
cccccccccccccccccccc11cc111ccccc11111ccc11111111111111111ccccccccc11cccccccccccc11cccc1111111cc111111111111111111111111111111111
cccccccccccccccccccccc1cc11cccccc1cccc111111111111111111cccccccccccc11cccccccccc111cc111111111cc11111111111111111111111111111111
cccccccccccccccccccccc11111ccccccccc111111111111111111cccccccccccccc111cccccccccc11c11111111111cc1111111111111111111111111111111
ccccccccccccccccccccccc11111111111111111ccccc11111ccccccccccccccccccc11cccccccccccc11cccc111111111111111111111111111111111111111
ccccccccccccccccccccc11cccccc111111111cc11cccccccccccccccccccccccccccccccccccccccc11cccccc11111111111111111111111111111111111111
cccccccccccccccccccc111cccc11ccccccccc11111cccccccccccccccccccccccccccccccccccccc111ccccccc1111111111111111111111111111111111111
cccccccccccccccccccc11cccc111cccccccc111c11cccccccccccccccccccccccccccccccccccccc11ccccccccc111111111111111111111111111111111111
cccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11ccccccccccc1111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc11cccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc1111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccc1111ccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccc111cc11c1111c111cccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc11cccc11cccc111ccccc11cccccccccc1111111111111111111111111111
ccccccccccccfffccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccccc11111ccc11111111ccccccccc111111111111111111111111111
ccccccccccffff77fccccccccccccccccccccccccccccccccccccccccccccccccc1cc11cccccc1cccc1111111111111111111111111111111111111111111111
cccccccccfff77777fcccccccccccccccccccccccccccccccccccccccccccccccc11111ccccccccc1111111cccc1111111111111111111111111111111111111
cccccccffff777777fccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111ccccccccc11111111111111111111111111111111111
ccccccffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111cc11ccccccccc111111111111111111111111111111111
cccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11111cccccccccc1111111111111111111111111111111
ccccffff7777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccc111cccccccc111c11ccccccccccccc1111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccc111111111111111111111111111
ccccffff77777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccfff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccfffffff77777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11111111111111111111111111
ccccccfffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccc11111111111111111111111111
77777cffffffff777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777fffffffffffff7777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c11111111111111111111111111
77777777ffffffff7fff77ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111111
77777777ffffff7777fffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c111111111111111111111111111
777777777777777777ffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111c111111111111111111111111111
777777777777777777fffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777777777777777fffcccf77777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
777777777777777777ffffff777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
7777777777777777777fffff7777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
77777777777777777777fffff77777777777fffffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
7777777777777777777777fffffff77777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
777777777777777777777777ffffff77777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffff77777777777777777777fffff77777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
ffffff7777777777777777777fffffff777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffffff777777777777777777fffffffffffffff7fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc191111111111111111111111111
ffffffff77777777777777777cccccfffcccccccccccccccccccccccccccccccccccccccccccccccccccc9ccccccccccccccc199111111111111111111111111
fffffffff7777777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9f9cccccccccccccc9ff911111111111111111111111
ffffffffff77777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccff99ccccccccccccc9ff911111111111111111111111
fffffffffff77777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc999999999999999999999911111111111111111111111
fffffffffffffffff7777cccccccccccccccccccffffccccccccccccccccccccccccccccccccccccccc999999999999999999999991111111111111111111111
fffffffffffffff7f77777cccccccccccccffff77777ffcccccccccccccccccccccccccccccccccccc9999999999999999999999991111111111111111111111
ffffffffffffffff77777777ccccccccccffff77777777fcccccccccccccccccccccccccccccccccc99999999999999999999999999111111111111111111111
fffffffffffffffff77777777cccccccfffffff777777777cccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
fffffffffffffffffffff7777ffffffffffffffff7777777fccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff999990099999999999009999999911111111111111111111
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9999990099999999999009999999911111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9999999999999999999999999999911111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999991111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc99999999999999999999999999999991111111111111111111
d6666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999999111111111111111111
df66666666666666666666666666666666666666dd66666666666666666666666666666666666999999999944444444449999999999999991111111111111111
ddff6666666666666666666666666666666666ddddf6666666666666666666666666666666666999999999999999999999999999999999999111111111111111
dddf666666666666666666666666666666666ddddddf666666666666666666666666666666669999999999999999999999999999999999999111111111111111
ddfff6666666666666ddd66666666666666ddddddddff66666666666666666666666666666699999999999999999999999999999999999999911111111111111
ddddfd66666666666ddddf666666666666ddddddddffff66666666666666666666666666669999999999ffffffffffffffffff99999999999911111111111111
dddddddd666666ddddddddf666666666dddddddddddffdd77777777777777777777777777799999999ffffffffffffffffffffff999999999911111111111111
dddddddddddddddddddddddfd66666ddddddddddddddddd6666666666666666666666666699999999ffffffffffffffffffffffff99999999991111111111111
dddddddfdddddddddddddddddddddddddddddddddddddddd77777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
dddddddffdddddddddddddddddddddddddddddddddddddddd7777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddd77dd7777777777777777777999999ffffffffffffffffffffffffff9999999911111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddd777777777777777777779999ffffffffffffffffffffffffff9999991111111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd7777717177777777779999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd717771777777777777999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddd9dddddddddddddddddd71717777777377777999fffffffffffffffffffffffff99999911111111111111111
dddddddddddddddddddddddddddddddddddddddd979ddddddddddddddd1dd1711771777377711999fffffffffffffffff5fffffff99999911111111111111111
ddddddddddddddddddddddddddddddddddedddddd9dddd1ddddddddddd1dd111117111773711199993fff3ffffffffff5fffffff999999111111111111111111
ddddddddddddddddddddddddddddddddde7edddddd3dddd1dddd1dddd1d3d131111111173111109993fff3ffffff5555fffffff9993999111111333111133311
ddddddddddddddddddddddddddddddddddeddddddd3d33d11dddd1d111d3313131111111313300999939933f3fff67ddfff3f999993333333313333333333331
dddddddddddddddddddddddddddddddddd3bdddddd333dddd1d3d1dd11113331311313111337700999393333333367dd39933933333333333311333333333333
ddddddddddddddddddddddddddddddddddbdddbddd3dddddd113301d11313331333333138877773333333333333367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbdbdddddd33dddd33010330333313333113333888777777888888888883367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbbbddddbd33ddddd30133b3333311333133333887733337788888998888867dd23333333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbdbddb33b33333d33bb333333333333338888877333377888893a9888867dd22888333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbbbbbb33b33bbbd33bb3333333333333888888873333722889999a9888555528838333333333333333333333333333
dddddddddddddddddddddbdddbdddbbbbdbbbbbbbbb33bbbbbbbbbb3333333333888888888888888888999999888888888883333333333333333333333333333
ddddddddaddddddddddddbbddbbdbbbbbbbbbbbbbbb3bbbbbbbbbbb3333333383888888888888888888899992288888888833333333333333333333333333333
ddddddda7addddddddddddbdbbbdbbbbebbbbbbbbbbbbbbbbbbbbbbbb333388888888888888888888888899228888888388333333333333333333333b3333333
ddddddddaddddddddddbbdbbbbbbbbbe7ebbbbbbbbbbbbbbbbbbbbbbbbb3888888888888888888888888888888888883883333333333333333333333b3333333
dddbdddd3ddddddbd333bdbbbbbbbbbbe3bbbbbbbbbbbbbbbbbbbbbbbbb888bb88888888888888888888888888888883833b3333333b3333b3333333b3333333
dddbdddbbbddddbbd3bbbdbbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbb88888b8888888b88888888888888b888888b83333b33bb333b3333b3333333bbb3b333
dddbbdbbbddddbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb8888888888888bb8888b8bbb3b3b33bb333b33333b33b333bbbb3333
dddbbddb3bdbdbddbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb888bbb8bbb888b88888b88bbbbbbbbbb333bbb333b33b33bbbbb3333
bbdbbbdb3bdbb33dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbb88888b8bbbbbbbbbbb3b3bbbbbbb33bb3bbbbb3333
bbbbbbbb3b3bbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbbbbbbbbbbbbbbbbbbbbbb3bbbb3b333b3333
bbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbb3bbb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b3b3bb3bb3333bb333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b3b3bb3bb333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333b3333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3b3bbb3333bbb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb33333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3b3333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33333333333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333333b333bb3333333
bbbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333b33b333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b33b333333333
bbbbabbbbbb3bbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bb3b33b333333333
bbba7abbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33333bb33
bbbba3bbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33b33bbb3
b3333333333bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b3bbbb
b3bb3bb3bb3bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbb
b33b3bb3bb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3b33b33b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbb
b3bb3bb3b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

__gff__
0081030301811303030301010000010003030101010103030101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
fffffff0ffff0ffd89e32fc19aa67c51f47fc01ffcc05f7c3c8cff11bf818b9b851f420042b8c21112fee70148c0f8f821e008c20b0a84ff733842c042f8295c940f8c62f83f23e01906fe092f3811f00dff6fc641c03fe046f8427887ff73183f50caf8851bc3f87ff12338f818ffb342f9df13065ec2ff8a7084ff3fc0022e
12f03fe3e37fce013ef0bfe6ff2ff0ff57f8ffd360e003ff7f3a20bce1ff1f87833ff8ffc760fcc1ffbf0eff7f1f08c0cdff82ffbf03168484ff7f0bce4258085ff8ff8f0148180290e10bff3309ffd3702402168431aef07f927593ff2732788681ff215f0207ff5719070165fc9f780438c2ff344c7e201cfcdf643ce07fca
c107c1c7ff4ac617fec782977081ff8f8c13fc6f255c24e024fc2fc3ff990ffcc5ffdfe4ff007ee7ff8f12fe1789ffff6f08c0ffff178430feff7ea83c82ffffcd8df0ffafc31fe0ffdf08fe47899ff8ff3f89ff83952b9c99ff3f13fe47f2519af8ff3730e17f22e40a02feffd2f03b7f3090c4ffff41f89d4b4e59e2ffff10
fe9784ffff44f81f72642be4ff6f70f0ff4b207cfcff6ffe08ffffc4fe871c5c25f9ffd3e18fc2ffdf90ff6558f82095ffbf4c180f1bfeff3168380bff7f8df25bf82bfcffbdf02ff8ffafe1672efeff43ea7f127e92121ef93fa6fe59f8972bc98ffcaf63f883f12b5ff843feffc3f0bf4df2caff5f88fe0f79e59025fe92f1
ff17c2ff6963a91f648941fe47f6bfe497851a3933e1e37f633f871ff9273c591e3bc233c9ffc4fea7fcc498fd012ef9ff83e1e27fc0ffc881173ce1ff8fcae1f8ffd9ff5f73fcff3cffffc9fe17e137fbffff865cf9ffc7e1afede8ffca85ff8fe3f49dfc007eca35f2bfb125f9ff2be12ffbdf4827f99fd8ffba8fe4070b7f
8027c9ffc2fe57e11fccf2b22cb75c24c9ffc04efb8bbf198c1c5c593e7901d7ff07fcc7ff843f6a567ef2fcedb8c2af7ce1bff00b3fdbff24fcccff22fcbf72f5ffbff1bf03c05f791cfc6f1cff7f83f29790ff91fcff1bd03e38f9ffcf8d90c299f8fff07fcffc744402474eff173b12fff3087ed90c32421c83849ff2faff
17b9355f9bf885091c5442963709e7c66187fd7f930b5d5ed9350bc391385dc3f26c9c520e494e1f6184ff4f729f40220d04b2c44190cbd67110b2efb93a721096b8c3ff66d70f1eb19a6382a06982157ce8210924d22542867be2e5ff931f2493e8f1894d481cf4e08f3f8ec439f99ff0bfdc18310cdd6e2091c58365e569ea
95f1ff3f2258788e438207cd6152c006ea43f4c82ff97f87030788d0c31124f9411f4ef80707f63591ff2faf9c96f0931cfb83ee975f58f201d9fbc70f512bbff363c242001e0b0d07a75d76f2f9e30abf73e51f3f2432fc232fd7c25ff9c5f6cf7cf27fe049863790d09c4ef983097e4c62e109f831f1479e7f5e802b825f11
f9594e0cff0712e678466d9cfbe1cadf810fff0f88c41316fe4c6018fe083fe70fe34afc118e400ef0138667482a18c6ff499e05841fc0020c7f6c08214308f922c0c2ff949384302b022e063eca41c27158e2ffca4f213cdc618c845b2e09ffff28fc4a00c20f24fcff557280f00fff7f120ce0ffbf0f06e00affff39fc42f9
ffc724349cfcffe9d0808bff3f5c1046f8ffeb0316feff3f8087ffbfcecbff3f0f77f82b8fff3f1bfe8c0fff7f34fc9c7fbeffbf19be081e967f1c9e66feff6148f82909ca92e0ff7f7281ee49cec4ffdf0d0bece408ffff7430044110f0ff7f2938863ff8ffd70f20e0ff6f872308ff7f9d868fffffceffff2f000000000000
