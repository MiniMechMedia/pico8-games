pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- px9 data compression v9
-- by zep & co.
--
-- changelog:
--
-- v9:
--  @pancelor
--  ★ redo bitstream order
--  234 tokens (but ~4% slower)
--
-- v8:
--  @pancelor
--  ★ smaller vlist initialization
--  241 tokens
--
-- v7:
--  smaller vlist_val by @felice
--  7b -> 254 tokens (fastest)
--  7a -> 247 tokens (smallest)
--
-- v6:
--  smaller vlist_val by @p01
--  -> 258 tokens
--
-- v5:
--  fixed bug found by @icegoat
--  262 tokens (the bug was caused by otherwise redundant code!)
--
-- v4:
--  @catatafish
--  ★ smaller decomp
--
--  @felice
--  ★ fix bit flush at end
--  ★ use 0.2.0 functionality
--  ★ even smaller decomp
--  ★ some code simpler/cleaner
--  ★ hey look, a changelog!
--
-- v3:
--  @felice
--  ★ smaller decomp
--
-- v2:
--  @zep
--  ★ original release
--
--[[

	features:
	★ 273 token decompress
	★ handles any bit size data
	★ no manual tuning required
	★ decent compression ratios


	██▒ how to use ▒██

	1. compress your data

		px9_comp(source_x, source_y,
			width, height,
			destination_memory_addr,
			read_function)
				
		e.g. to compress the whole
		spritesheet to the map:
		
		px9_comp(0,0,128,128,
			0x2000, sget)

	…………………………………
	2. decompress
	
		px9_decomp(dest_x, dest_y,
			source_memory_addr,
			read_function,
			write_function)

		e.g. to decompress from map
		memory space back to the
		screen:
		
		px9_decomp(0,0,0x2000,
			pget,pset)

		…………………………………

		(see example below)

		note: only the decompress
		code (tab 1) is needed in
		your release cart after
		storing compressed data.
		
]]

function _init()

	-- test: compress from
	-- spritesheet to map, and
	-- then decomp back to screen

	cls()
	print("compressing..",5)
	flip()

	w=128 h=128
	raw_size=(w*h+1)\2 -- bytes

	ctime=stat(1)

	-- compress spritesheet to map
	-- area (0x2000) and save cart

	clen = px9_comp(
		0,0,
		w,h,
		0x2000,
		sget)

	ctime=stat(1)-ctime

	--cstore() -- save to cart

	-- show compression stats
	print("                 "..(ctime/30).." seconds",0,0)
	print("")
	print("compressed spritesheet to map",6)
	ratio=tostr(clen/raw_size*100)
	print("bytes: "
		..clen.." / "..raw_size
		.." ("..sub(ratio,1,4).."%)"
		,12)
	print("")
	print("press ❎ to decompress",14)

	memcpy(0x7000,0x2000,0x1000)

	-- wait for user
	repeat until (btn(❎) or true)

	print("")
	print("decompressing..",5)
	flip()

	-- save stats screen
	local cx,cy=cursor()
	local sdata={}
	for a=0x6000,0x7ffc do
		sdata[a]=peek4(a)
	end

	dtime=stat(1)

	-- decompress data from map
	-- (0x2000) to screen

	px9_decomp(0,0,0x2000,pget,pset)

	dtime=stat(1)-dtime

	-- wait for user
	repeat until (btn(❎) or true)

	-- restore stats screen
	for a,v in pairs(sdata) do
		poke4(a,v)
	end

	-- add decompression stats
	print("                 "..(dtime/30).." seconds",cx,cy-6,5)
	print("")

end

-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 8 and
	-- 15 bits long with the next
	-- bits in these positions:
	--   0b0000.12345678...
	-- (1 is the next bit in the
	--   stream, 2 is the next bit
	--   after that, etc.
	--  0 is a literal zero)
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<8 then
			-- cache next 8 bits
			cache_bits+=8
			cache+=@src>>cache_bits
			src+=1
		end

		-- shift requested bits up
		-- into the integer slots
		cache<<=bits
		local val=cache&0xffff
		-- remove the integer bits
		cache^^=val
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)
		end
	end
end

-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function
	px9_comp(x0,y0,w,h,dest,vget)
	local mytable = {}
	local dest0=dest
	local bit=1
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	local cache,cache_bits=0,0
	function putbit(bval)
	 cache=cache<<1|bval
	 cache_bits+=1
		if cache_bits==8 then
			mytable[dest] = cache
			poke(dest,cache)
			dest+=1
			cache,cache_bits=0,0
		end
	end

	function putval(val, bits)
		for i=bits-1,0,-1 do
			putbit(val>>i&1)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if cache_bits>0 then
		-- flush
		mytable[dest] = cache<<8-cache_bits
		poke(dest,cache<<8-cache_bits)
		dest+=1
	end

	local str = ''
	for i = dest0, dest do
		-- str ..= (chr(mytable[i]))
		str ..= chr(peek(i))
	end
	str = escape_binary_str(str)
	print('' .. dest-dest0 .. ', ' .. #str) -- .. dest0 .. ', ' .. dest .. ', ' .. str)
	printh(str, 'output.bin')
	printh(str, '@clip')
	return dest-dest0
end

function byte_to_hex(byte)
	local hi = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte\16]
	local lo = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte%16]
	return '\\x' .. hi .. lo
end

function escape_binary_str(s)
 local out=""
 for i=1,#s do
  local c  = sub(s,i,i)
  local nc = ord(s,i+1)
  local pr = (nc and nc>=48 and nc<=57) and "00" or ""
  local v=c
  if(c=="\"") v="\\\""
  if(c=="\\") v="\\\\"
  if(ord(c)==0) v="\\"..pr.."0"
  if(ord(c)==10) v="\\n"
  if(ord(c)==13) v="\\r"
  if(ord(c)==9) v="\\t"
  	-- v = byte_to_hex(ord(c))
  out..= v
 end
 return out
end
-- 40% - 50%
-- 14 images per cart...
-- dw = 8 images per cart...

__gfx__
12122212121111212225d52252020202204020211202020121212151512121121111111121204022022220221202201111111111111111111111111121212112
212212020202202011225dd1220222202220202101222022020215121252122121112121122224042220212011110211111111111111111111111121211d1212
2555555222202211111122dd5120202202042020210022202251521215252212121111122040402202020221111111111111111111111111111c121d1d1d1dd5
555d55551022021111111222dd1220202220220202220202205515212212522022111221225522111111220211111111111111111111111c1c111d11ddc1dd1d
5d5d5d5220222122222211121dd122022022042220202220251521251225252211121122225021211111222111111111111c1111111c112112121c1d11dcdcdd
d5d5d1512121120020202211212dd2202204202022020202125555212555202121111212042221212111111111221112211111111111212211d11c11dc1ddddd
dddd3d212121212102120121111d1d22222022220422022212155255252522212121d122220212121211111112121111111111111111c111c11c11c1d1dcdcdd
dd3dd552525222121111111111112d2d5222202220512202155555255d1255212121221202221212121d111111221111111c1c11111c111111c1dd1d1cddcd6d
dddddddddddd5521121211111122122545222220422555522545521222555512121212222220211121111111111202111212111111111111c1dcddcdddddd6d6
dd6dddddddddd512111111111111222254545222225522045504555255d5522212222d12522221121d111111111221222221221d111c1c11c1d1ddddcdddd666
d6d6dddd66d65d22121111111112202224d44542255525404540555552555d5d2222225542202212121d1121d120222020220211d1c111c11ddcdcddd6d66666
6d6d6d66d6ddd5221111122121220222254dd4444545555555555555455d55d1d2d1d5d2204222222122222222222222222222221c11c11d1d1ddd6666666667
d66d6d6dfd65d52121221212222222024244d6d444545455555545455455545d2d2d55454222222122222022022020222225225221221d1d1dddd6d6d6666766
6d66b6d666dd551211212020202022222554546dd44555555455555255545d52d5d54442222202222242222222222222254545d5d21d1d1d2ddcd6c666666666
d6d6d6d6dad65d1121111222224224545424444fdfdd45d555555225222545454d54554222424424242522022222222242555d521d1d1d1d1d1dc66666666666
66d6d6da666dd35d1221110222252252404255446da6dd4d45455502052045455d4da54424244244454422422022222254555d5d52d1c2ddddd6666666666666
66d6a66666dadd5525122222204042254455454d46df666b455452522525205454d55d544454445454545422242225254554d5d5d5dd2dddddd6666666666677
66f66d6d6d6dd3dd5d552525222225245454d4d454dad66d6dd5550204045455555dd54544454445d4454554522042545554d4dddddddddddddd666666677676
6f66f66d6dddddddd5d5525204040455455d4d4da5dd6666dddd5525202504524545add445444d444d4545454542252545d4dadad6dddd6d66c6d66677676767
6f6f666ddddbddddd5d455252225252555d4d5d4d4dadd6666ddd5525252455554d5ddd4d9d4d9ddad44dad444545454546ad6d6d6d66d6d6666666676767676
f76766666b6d6d6bdd55555252525252545dda5d4d5dd6d6666ddd4552505554545adbda5d4a5d4d4d4d4d4d444444454dddfd66666b6d66d6d6666767676676
666f7f6f666cd6ddddd5d4545252525225555d5a5add6b6d6c66d4d445424555d5dddddd444d4adadadad4dadd44544564a6df666d66666d6666676767667667
6667677776666d6cd55d5545252552045255d5dd5d4d6dddd6da66dd4d55255554d5656ddad4dd4d4dddd6dddadd4d4646d6f66666666d666776776766766676
66777777767666d65d55455254555542555545d5d46d6cd65dd6df64d44552555d5d5656dddad4dd4f46d6d6dd646ad66df66666666d66677676767676666667
66666767676666d6dd4d5d45455555552525545ad4ddb6d656d5ad666d454525455dddbdda5d4d464dad6dad646d6d6dfdf66666666667676767667676776767
666667676766666ddd4d4d4d5d5d455255245d5d4dad6d6b646dd546ad64d45554d4dd6ddddddad5addad6d646dad6f666666766676776767666667677677676
667676766666666ddd4d4ddddbd455555555454dd5ddddd656566d4dddfd4d44d5dda5daddaddd65dadd4646dadd66666f676767776767666666766777767767
6676666767666666ddd4dda364d55545545254d5dadda5656da3d4d54d466d64d4d4ddddd6b66b6daddad6adad66666f66777776767676766676677676776777
66667776766666d6dd6565d65dd54554555dddd4dd4dddadadd6dda5d4dda6d6ad6d6dad66d666d6dddd6466666f666676767677676767676766767677677676
667667676766666d6b66b6db6d5a5545d4dd4d6d656465ddd6dda5d5d4d4dda66dad46d6da66d66d6dadad6666666f6677777767677777767666767767776767
6666766666666c6c66cc666ddd55d4d4dddd6d6d6dadda5addadddad4da5dd6d66666dda6666c6c6d6d6d6666f76767676767676667677776767676776766667
66666666666c6666b6c66c6b6ada5da5646d6d6add6dddddad66bf5da5d4a5da6666da6666666666bfd6df6f6767676767676767767777677676767676666777
6666676766666c6c6c6c6b66d6dd6dd6d66bf6d66ddadadd6d6d6d6dd4ddd46d46666666666666b666df66667777767676667676767676776767676766667677
666666666c66c666666666666666bf6a6b66d66b66d6ddadadb66cadada464dad666766666666666e66df6676676676666666767767777677767666667677777
6c66c66c66666c6c6666666c6da6666c666adad66dad6dad6d6d6b66c6dadadd46d666766666666da6a666767676766666667676776767767666667677776777
666666666c6c6c6c6c6c6c666666666666d6d6ada666b6d6666b66666dad6dadadf66667666666a6666f67776767777767667677677776766676767776777777
77777776776766666666666c6c6b6c6b666dad666d66666b6da66d6d6ad6ad646f6f676767666664ff66f6676767677777776767766666676767776777777777
7677777777776666666666666666666666b66c666c63d5ddd6dd6d6ad6d64fa6fdf6676676ffffa6f6f677676767666666667676677676767677677777777777
76777767777776f777777777767766666666666b66555554d56dd65d6d6ad666f6f67f7f6f6f6f6f66766766666666d666667667677767767777776776776767
f7676777677767767677777677777776776666676655555555566666b6d66666f6f67676f7f6f676776766666d6dda4d66777777777776776767777777777777
676777777777777767767677767777767776f676765555555555777777777766666d6d6f66666f666f66dfdfdadafdf966777776777777677777767676776767
7777777777777677777777676777777677667677775555555555f7777777777776466455ad9d6f6f46fada64f4fdae464f676777777767776777776777777777
f6f6777777777776776777767677777777767f6776555555555567777777777776d55d5646ada666a6dfdff4f6aeda6a6df77777777777777777777677776777
6f6777776777777777677776777777777776f7767f55545555556777777777777655554daddad6f6f4fa64fda6dadf4ff4677777767777677767776677777777
66f6777777777777776776767677777767777677765555555505f77777777777765555d55dadadf66966ff6a6f4f44f4fa666777777777777667766777777777
f666667777776767676666f66776777777776f7776554555555577777777777765555555a5d469df64ff4f46fff4dadf6da66777777767767667676677677777
76f677777777766776fff6f6f777777777677f777655d5555554777777777777655555555d4dadf6696a6f6ffdad4f4affdf677777776767776766f677777777
f6ff7777777667666f66f6f666767777777767777655d4555555777777777777d5555555555d46a664fdff6a6ffad4fdf4fa6777776766666f6f6a6677777777
7f777777776766f6f6f6a66a6f7677767677777776d46b455555d77777777777655555555545addfda696adf6fdfadafdff66777767666f6f6ad666f67677776
7767777776776f66f6fd6f66677777776777767776ddadd555055d7777777777655505505055d4a66f4df6ef6af4ffdafadf66777776f66f6f66ff66f7777776
777667677777676f76ff6ffff777777677777776766dd66d45404567777777777504555555554ddadfadada6f6adfffdfdada67777676f67f66f6ff676777767
77777776777776f67776f66f767776766777676766dad66ad5555557777777777650525525555dad66ff4f6f6f6f4adfa6ef6477677767f767f6f6f677777677
7767776f77677767f67f6ff77777676f6767767765dd5d56d5555556777777777774555555554d5466a64f4ffa6adf4f6ffa6fd77777776f776ff6f777776667
777776f67777777f6f7767676776766f6f766767f5555d4d6554555f7777777777775555555555dda66ffdff66464ffda66ffadf777776ff6ff6f77777776f6f
6777777677677767777f6f67777f6ad6666f676665465555dad6d55677777777777776d555555d45666a6a6ff4fa6ad9dff64ffd77677777f76f6677676766f6
f6f7776f76767777776f6f77767df6f6f6f66fffd5da5555556da55677777777777776555045555566dff6f46adf4d4f47fad4fa6676f777676f6f7776f6f6f6
7777676767f767777776df7777f666f66f6f666654dd5d55556ddd67777777777777650555555555dfdfffdadffdfadff6f6eadddf7777677f66f77776f6f666
77776f6f6f6777f7776df777676f676f666f6f6a55bd55a5556ad6f77777777777761555555554556ad6a6ffdadffd9f67fad669df77f77776f6f7776f66f6f6
77776f6d6f7677767656f6776766f6f676f66f5d64d4655d5d6d66677777777777605555045555556dad6ffadfafa6ea6656e464647f7777766f777766f6f6f6
7777777f6f6ff7777d56776666f66776f66f6da55d4d4d46da66d66677777777775020555055555564dad6fdf464646d4df4fdada56f6776777677776f767f66
7777766f66666777656f6766f66f6f766f6fdad554b4655add56ad6667777777771205204555555dadad46a69ff4f446ada69df64646f777677f777766f77776
777767f76f6a66765566ddf66f6f676766fd5d5da5ddad5554d5d4d4677777777605025505545556d45464dfd9d4dad4ff6f6adf64a66767777677776f6767f7
777776766a66ff7d5d655df76676f77ff66a64655d4d6ad6da554646677777777550400404550546464adada664f46f4f4f6fdadfdda6777777767767777776f
7776676f6667776555555f67767766766f6dfdada66ad64a5d56465a77777777712020555055555dd65dd4dd46adfa6f6fff4fffa6fdf77677677776776f7767
76767f76f6f66655555df776f66f767f6dada6d6df6fff6df6ad54d7777777776505040045550466a5d95adadddfdf64a66ff6f6dadad7f767767767677776f6
777767676f66fd5555df66766f676f66a5566da6adadfdfffdf5ad7777777777d55205040504566d55554d4dadada6ffdfff6ffffdfe466f6f67776677676776
677777f766dad5555df67f66f676f7665d5dad4d4dddadadff4dd77777777777d555202055555dfd55555a5d46dfdf6ffa6ff6f6ff46f476777766f77777f6f6
76777676f6fdd555da67666f66f66765545a55555555dd6fdad5d77777777777d550520405555565555555dada6dfff6f6f6a6ffff6ada676777766f7676776f
7777767766dd55556667f6767767f64555d5d55555554adaddda556777777777d5540550204555f6d555554daddf4da6fdad5f6f6a6dfd4776f767777777767f
7676777f654555df6f6676f677f67d554d4555550054d56d4d45dd567777777755555502555555dad5555554d9dadf6fa6df55a6f6fadfad7777777777677f6f
77777f7d5d555a6f66f6f76777766555d55555055255da6465da555577777777d55552055555555d6555545d5d4da5666ae4455f6fdf96da6776777767f776f6
77777665d555667666f6677767764545555555502046464d4a55d555d77777777555555020550456d45555554dad6dadfd46a504ffffdf46d77777777776776f
777776555556776ff6f76767776d55555550505555d46fda5d5d5550f7777777775550404054555d66d4da5db4d4add6ef464555a6f6a6f4a67777777777767f
7776655555577f676767f776776455555505055044da66ddd4da55056777777777655504045555f6f6ad665d4dd666f666fada50dffdffdf6477767767777777
7776d55555f77777776776f76655555550504045dad6dada6d55d54577777777777550455555df66d5ddd66666f66fdad66fd4d54ffa6faf4f67776777677677
767d55555577777767f77777f54555550505555f5dadfd6ddad66dd677777777777d4d5555546666d5dad6d6dddd4d5d54dfad950a66f6fdf46676f677777777
7765d5555677777776767776d55555505520554f6df45dad5d66da677777777777766dfdd4556ddad55d55a555a5d5d44a5dffd455fffffa6adf766777777777
76555555677777767767677d4555555505545f6fad654d54d646d667777777777776d666f6d55a5dda555555dd5d555d5455fff445fda66fdf466fdf67777777
7555555f77777677676f6f65d545550544dadfdfdf455ad5d43555777777777777765555d565d5d5d5555555d5d55d5ad5455fdadadff6964f6adadf77776777
d55555f7777776667f76f65a5555555a66dfdad46455d55d555555577777777777775555555465555d555555d5555555555554f646fffdfdf46d4d66f6777777
5555d7777777676f66f664d5555554ddf4ffdd464554ad5a5555505577777777777765555555555555d555555a555555555545a6ada6a6a64fa6adad77777777
555477777776766f6f6ad5d4da5546adf64fadfd5555d4d555550450d77777777777776455555555554d55555555555555555556fdff6fdf66dad46d76f77777
55d7777777776f6f6f665a5adddadaddadfd6dad4545addd55504555557777777777777775555555555554555555555555554554ff4ff69daf464646f7777767
547f7677676776f6f664ddddfad6ddfddfdadfd554b4dd555555555555677777777777777550555555555d55555555555545545546f6adffdf4f646a67677776
d7777f67777776f6ffdada6ad6dadada6addfa545545d5a5d455055545577777777777776055555555554db455555555555555455a6dff6ffdadad5667776676
f767776f767777766f5d6d6dd4646ddfd64fd55545545d55d55545555d567777777777775050555554555a55555555555545455455fada6fa64fd4adf6776f67
677f67f6776767ff6adadad4adda6ad4fdfa54545555d5d5add55555555d777777777777552504555d6555550555555455555545554dfdf66ff465d6a66f66f6
f677776f67f6f776ddd5ddadd5adddfda6dd554554554b4ddda5555555556777777777760050405555d55d5555555555d5554555455adf4ffa64ada564f6f66f
7f6767f6f76f676f4adadaddadd6adad64f454554b4554d5d55dd455555467777777777d5040555554d555555555545d545555454555a6f6dff6dd4df66f6f66
67f7f6f66f76f76add6465f46daddfd4f64555a5545555554d566d54555dd7777777777d040455555554554555545d6da5554554b445df4a6a6adadadadf66f6
766f66f6f6f76f6ddadadaddaddadadfdad5a555555555555a5da6dd4d45667777777776055055555465dad5454dd46ddd5554b445545f6fdf6fddddadfda666
f7f6f6f6a66f6f4ad64d6dad6a6dfdfa6d455554d455555555ddd6daddd55677777777765525554555665d5d5d4dad64da54b4455d4554ada6adadaddf5f66f6
6676f666666a66d6adfadadfdfda6fd6ad545d455545555555d55dd6dad5dd777777777d555545555d46dadadad6d6ad65a54d54d4b4d56a6e6fdfdadadda666
f6f6f6a6a6d6adad6ad646f4f4f64fadd45d45da55555555554b46ad65d5ad677777777d4555dd4d466addddd6adf6dadad554d5454d4546f6a6ad46ddad6ff6
6f6f666666a6dfdad64f646a66a66dfda5d4b455d45555545554d56d6d6555777777777655545dad5add6adad6df6addadad455a5d54b4d4adfdfdadad6ad66f
6f66a66adfdfda6dfdfadf6dad64fadf554d4d4d5b45455545455566da6d5d777777777654d64d56d66addada6a666dad64d54d5d4b4d4ddadfadfd6df46dadf
66ad66466adad64fad6dada66adfd6a55d4b4d5a545555455555a5daddd65f7777777777ddadadada66dadfd6666fad6adad4b455ad4d4556adfdadadadfdfdf
fd6fda6fd6fdfa6d6adf66dad6f4fdd4d4d4da55d545455454b455d6dda6777777777777646dd6d666a6dadfdf666dadfdf4d4da5d5d4b4d46adf4646df4f4fd
dada66dadadfddadfdadadadf46adad4da5d5d5d4554b455b445545dad567777777777776646adada6dadf6a66a646dada6ad4d5d4d4d4645df4fda6adfda6ad
fdfdf4fdfdada6dadfdfdfdfdad664da55da54da5a5545444d54d5a5dda67777777777777dad6ad66dfdf6d646dfda6dfdfd4da5d5a5d45a54adadddf46add64
dadadadadfdfdadf469dadadadf4f5d5dd4dda55d5545a555a554b554dd677777777777666dad6da64f64f6a6fdad64fdadfa55da5d5ad5ddddadfadadadf46a
df4646dadad9ddadad646464646ada5a5a5d45d4d45a555a555a54d4d4bf7777777777664a6dadfdf646ad6dadadfda6dfdfdda55dad5da5a5ddad4646dadadf
4adadad464dadad464adadadadad5dddd5addada5a55d4d55d45d45a544d7777777776dad64fdadadadad69d6d646adf4f46a5dd4d5da5dd5a5ad4f469ddad4d
dd4dad4adad464f4addad46464dad4a5ad54d55dd5d4b4a5a5da5d45db46777777777dadadadfdaddfddaddadadaddad6adadda5ada5d4a5ddd4dadad4ad46ad
9dad4dad4dad9d465ad464ad4ad4d4d4d464ada5a5a54d5554554a5a5446777777776464d464ad4f4adadad46464f4da5dddad4d5d4da5d4a5ad4da5addad4d4
d9d9da54ad44da5a54ad9d4adda5ada5a54d5a5d4554a595a5a555554a5f77777777da46ad9ddad4d4d4d4f4adad46464adad4dad9d4d4dadd4da5d4da4dadad
4d4d95ad44ada54dad4d4a5d954d45d4da5a5d4a5a5554d4545a5a5a5546777777764da54da54dadadadadad4d4ada5ad4ad4ad45da5a5a55a54dada5da5444d
4a5a5d4da5d45ad954a5a5da5ad4ada54d4da5a5d59da54b9d4545454ad777777776a54da5469544d95a545ada5d4d4dad4dad4a5a5d4d5ad4da5454a54dada5
4d45a5a54a5a5454a5d45a54d45a554a5a5454d444545a5445a5a5a555777777777d44a54a54dada54d4da5454a5a4a544a54d4d45a5a54d4a54da5d4ad44544
4a5a54445454a5a5d95a544a5a554a554da5a5a5a5a5454a54545454a6777777777644da5d95a545a5a444ada5d45d4a5d4a5a5a54d45a5a55a545a4d44a5ad4
54454a5a5a5a545a5445a54545a4d44a5454545454595a554a595a54d777777777769545954d44a5445a5d4544a5a454a54d4454a5a54454445a5a54a545a544
44a5454544544a544a545a5a5454a5544a5a5a5a595545954545454a5777777777775a5a54a5a554a545a595a5445a545a595a54545a5a5a5a5445454a545954
4544a595a5955445459595459595595a5545444545959544a595a54595f7777777774545445459545a545954595a544a545454a5a5954545454a595a5595a544
49b45454545959b95459544459544595495959595954b9554545444b444d77777777d9595a59544a544a5595955444b444a5a55445444a595a554545954545a5
5444449b9454b44449b4459b4459b4454b44554b4595444959595b944444a7777777459545459b45454595455959b49595545959595934454595959544a59544
4454b444544944454544545444544444444495944454454b4545944454b456777777d4544b9544444b9545959545444454954545454595495454545955454595
4594445445454544b44449544b94459b445554545954495444545454494444777777f44b9444545954445454545954544b4444b954b44545449595459544b445
44554445954b4444444b45459454545444495445454b45445954459555454467777776444544445444544954b954595444454444444444b9555454b445959454
454454b45444454b44444454544544454b454b444594445455459554445954477777776a5454b44b444b4544444545454544b44545954444444b444445545445
4454594445454444454545954544545444444445454554595445544545454b467777777d444444444544445454544544b9544454454545455444444544454545
4545455454545454445445545454595454545445954445454544454595454444777777645454545445445454454544b44445444b445459544b44545955954454
45445445444595455445444544545545454545455455454544b445455454454477777745445454454454544b4444b44445445544445955454445445545545445
454545445545545445454545459544544544545445445445444454595454545477777d4454544545454545444554444544544454545544544544544544454545
45445454445445454545454545545445454544545454545454545455454454a67777745454454545454454454445454454545454454454545454545454544545
45454454554545445454545444544545445454544544545454545444545a66777777645454545454454545454545445454545454545454454545454545454545
44545454544544545445445454545454545454454545454454544554545f77777776454545454454545454545454545454545454544545454454454454544455
45454545454545454545454545454545454545454545445454454545445a7777754544545454545454454454454545454545454545454545454544aaccbb99dc
4545454454545454545454545454545454544545454545454554544545457776445454544544545445454545454454545454544545445454545454afc6ba4ecd
__label__

ccccccccccccccccccccccccccc11111111111111ccccccccccccc111111111111111111ccccccccc1111111cccc111111111111111111111111111111111111
ccccccccccccccccccc11cccccccc1111111111111111c1111111111111c111cc11ccc111ccccccccc1111111cccc11111111111111111111111111111111111
ccccccccccccccccccc111cc11cccc11cccc1111111111111111111111ccc11cc111ccc11ccccccccccc1111111ccc1111111111111111111111111111111111
cccccccccccccccccccc11cc111ccccc11111ccc11111111111111111ccccccccc11cccccccccccc11cccc1111111cc111111111111111111111111111111111
cccccccccccccccccccccc1cc11cccccc1cccc111111111111111111cccccccccccc11cccccccccc111cc111111111cc11111111111111111111111111111111
cccccccccccccccccccccc11111ccccccccc111111111111111111cccccccccccccc111cccccccccc11c11111111111cc1111111111111111111111111111111
ccccccccccccccccccccccc11111111111111111ccccc11111ccccccccccccccccccc11cccccccccccc11cccc111111111111111111111111111111111111111
ccccccccccccccccccccc11cccccc111111111cc11cccccccccccccccccccccccccccccccccccccccc11cccccc11111111111111111111111111111111111111
cccccccccccccccccccc111cccc11ccccccccc11111cccccccccccccccccccccccccccccccccccccc111ccccccc1111111111111111111111111111111111111
cccccccccccccccccccc11cccc111cccccccc111c11cccccccccccccccccccccccccccccccccccccc11ccccccccc111111111111111111111111111111111111
cccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11ccccccccccc1111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc11cccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc1111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccc1111ccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccc111cc11c1111c111cccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc11cccc11cccc111ccccc11cccccccccc1111111111111111111111111111
ccccccccccccfffccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccccc11111ccc11111111ccccccccc111111111111111111111111111
ccccccccccffff77fccccccccccccccccccccccccccccccccccccccccccccccccc1cc11cccccc1cccc1111111111111111111111111111111111111111111111
cccccccccfff77777fcccccccccccccccccccccccccccccccccccccccccccccccc11111ccccccccc1111111cccc1111111111111111111111111111111111111
cccccccffff777777fccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111ccccccccc11111111111111111111111111111111111
ccccccffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111cc11ccccccccc111111111111111111111111111111111
cccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11111cccccccccc1111111111111111111111111111111
ccccffff7777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccc111cccccccc111c11ccccccccccccc1111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccc111111111111111111111111111
ccccffff77777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccfff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccfffffff77777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11111111111111111111111111
ccccccfffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccc11111111111111111111111111
77777cffffffff777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777fffffffffffff7777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c11111111111111111111111111
77777777ffffffff7fff77ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111111
77777777ffffff7777fffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c111111111111111111111111111
777777777777777777ffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111c111111111111111111111111111
777777777777777777fffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777777777777777fffcccf77777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
777777777777777777ffffff777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
7777777777777777777fffff7777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
77777777777777777777fffff77777777777fffffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
7777777777777777777777fffffff77777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
777777777777777777777777ffffff77777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffff77777777777777777777fffff77777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
ffffff7777777777777777777fffffff777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffffff777777777777777777fffffffffffffff7fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc191111111111111111111111111
ffffffff77777777777777777cccccfffcccccccccccccccccccccccccccccccccccccccccccccccccccc9ccccccccccccccc199111111111111111111111111
fffffffff7777777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9f9cccccccccccccc9ff911111111111111111111111
ffffffffff77777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccff99ccccccccccccc9ff911111111111111111111111
fffffffffff77777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc999999999999999999999911111111111111111111111
fffffffffffffffff7777cccccccccccccccccccffffccccccccccccccccccccccccccccccccccccccc999999999999999999999991111111111111111111111
fffffffffffffff7f77777cccccccccccccffff77777ffcccccccccccccccccccccccccccccccccccc9999999999999999999999991111111111111111111111
ffffffffffffffff77777777ccccccccccffff77777777fcccccccccccccccccccccccccccccccccc99999999999999999999999999111111111111111111111
fffffffffffffffff77777777cccccccfffffff777777777cccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
fffffffffffffffffffff7777ffffffffffffffff7777777fccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff999990099999999999009999999911111111111111111111
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9999990099999999999009999999911111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9999999999999999999999999999911111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999991111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc99999999999999999999999999999991111111111111111111
d6666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999999111111111111111111
df66666666666666666666666666666666666666dd66666666666666666666666666666666666999999999944444444449999999999999991111111111111111
ddff6666666666666666666666666666666666ddddf6666666666666666666666666666666666999999999999999999999999999999999999111111111111111
dddf666666666666666666666666666666666ddddddf666666666666666666666666666666669999999999999999999999999999999999999111111111111111
ddfff6666666666666ddd66666666666666ddddddddff66666666666666666666666666666699999999999999999999999999999999999999911111111111111
ddddfd66666666666ddddf666666666666ddddddddffff66666666666666666666666666669999999999ffffffffffffffffff99999999999911111111111111
dddddddd666666ddddddddf666666666dddddddddddffdd77777777777777777777777777799999999ffffffffffffffffffffff999999999911111111111111
dddddddddddddddddddddddfd66666ddddddddddddddddd6666666666666666666666666699999999ffffffffffffffffffffffff99999999991111111111111
dddddddfdddddddddddddddddddddddddddddddddddddddd77777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
dddddddffdddddddddddddddddddddddddddddddddddddddd7777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddd77dd7777777777777777777999999ffffffffffffffffffffffffff9999999911111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddd777777777777777777779999ffffffffffffffffffffffffff9999991111111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd7777717177777777779999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd717771777777777777999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddd9dddddddddddddddddd71717777777377777999fffffffffffffffffffffffff99999911111111111111111
dddddddddddddddddddddddddddddddddddddddd979ddddddddddddddd1dd1711771777377711999fffffffffffffffff5fffffff99999911111111111111111
ddddddddddddddddddddddddddddddddddedddddd9dddd1ddddddddddd1dd111117111773711199993fff3ffffffffff5fffffff999999111111111111111111
ddddddddddddddddddddddddddddddddde7edddddd3dddd1dddd1dddd1d3d131111111173111109993fff3ffffff5555fffffff9993999111111333111133311
ddddddddddddddddddddddddddddddddddeddddddd3d33d11dddd1d111d3313131111111313300999939933f3fff67ddfff3f999993333333313333333333331
dddddddddddddddddddddddddddddddddd3bdddddd333dddd1d3d1dd11113331311313111337700999393333333367dd39933933333333333311333333333333
ddddddddddddddddddddddddddddddddddbdddbddd3dddddd113301d11313331333333138877773333333333333367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbdbdddddd33dddd33010330333313333113333888777777888888888883367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbbbddddbd33ddddd30133b3333311333133333887733337788888998888867dd23333333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbdbddb33b33333d33bb333333333333338888877333377888893a9888867dd22888333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbbbbbb33b33bbbd33bb3333333333333888888873333722889999a9888555528838333333333333333333333333333
dddddddddddddddddddddbdddbdddbbbbdbbbbbbbbb33bbbbbbbbbb3333333333888888888888888888999999888888888883333333333333333333333333333
ddddddddaddddddddddddbbddbbdbbbbbbbbbbbbbbb3bbbbbbbbbbb3333333383888888888888888888899992288888888833333333333333333333333333333
ddddddda7addddddddddddbdbbbdbbbbebbbbbbbbbbbbbbbbbbbbbbbb333388888888888888888888888899228888888388333333333333333333333b3333333
ddddddddaddddddddddbbdbbbbbbbbbe7ebbbbbbbbbbbbbbbbbbbbbbbbb3888888888888888888888888888888888883883333333333333333333333b3333333
dddbdddd3ddddddbd333bdbbbbbbbbbbe3bbbbbbbbbbbbbbbbbbbbbbbbb888bb88888888888888888888888888888883833b3333333b3333b3333333b3333333
dddbdddbbbddddbbd3bbbdbbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbb88888b8888888b88888888888888b888888b83333b33bb333b3333b3333333bbb3b333
dddbbdbbbddddbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb8888888888888bb8888b8bbb3b3b33bb333b33333b33b333bbbb3333
dddbbddb3bdbdbddbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb888bbb8bbb888b88888b88bbbbbbbbbb333bbb333b33b33bbbbb3333
bbdbbbdb3bdbb33dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbb88888b8bbbbbbbbbbb3b3bbbbbbb33bb3bbbbb3333
bbbbbbbb3b3bbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbbbbbbbbbbbbbbbbbbbbbb3bbbb3b333b3333
bbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbb3bbb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b3b3bb3bb3333bb333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b3b3bb3bb333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333b3333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3b3bbb3333bbb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb33333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3b3333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33333333333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333333b333bb3333333
bbbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333b33b333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b33b333333333
bbbbabbbbbb3bbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bb3b33b333333333
bbba7abbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33333bb33
bbbba3bbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33b33bbb3
b3333333333bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b3bbbb
b3bb3bb3bb3bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbb
b33b3bb3bb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3b33b33b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbb
b3bb3bb3b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

__gff__
0081030301811303030301010000010003030101010103030101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
fffffff0ffff0ffd89e32fc19aa67c51f47fc01ffcc05f7c3c8cff11bf818b9b851f420042b8c21112fee70148c0f8f821e008c20b0a84ff733842c042f8295c940f8c62f83f23e01906fe092f3811f00dff6fc641c03fe046f8427887ff73183f50caf8851bc3f87ff12338f818ffb342f9df13065ec2ff8a7084ff3fc0022e
12f03fe3e37fce013ef0bfe6ff2ff0ff57f8ffd360e003ff7f3a20bce1ff1f87833ff8ffc760fcc1ffbf0eff7f1f08c0cdff82ffbf03168484ff7f0bce4258085ff8ff8f0148180290e10bff3309ffd3702402168431aef07f927593ff2732788681ff215f0207ff5719070165fc9f780438c2ff344c7e201cfcdf643ce07fca
c107c1c7ff4ac617fec782977081ff8f8c13fc6f255c24e024fc2fc3ff990ffcc5ffdfe4ff007ee7ff8f12fe1789ffff6f08c0ffff178430feff7ea83c82ffffcd8df0ffafc31fe0ffdf08fe47899ff8ff3f89ff83952b9c99ff3f13fe47f2519af8ff3730e17f22e40a02feffd2f03b7f3090c4ffff41f89d4b4e59e2ffff10
fe9784ffff44f81f72642be4ff6f70f0ff4b207cfcff6ffe08ffffc4fe871c5c25f9ffd3e18fc2ffdf90ff6558f82095ffbf4c180f1bfeff3168380bff7f8df25bf82bfcffbdf02ff8ffafe1672efeff43ea7f127e92121ef93fa6fe59f8972bc98ffcaf63f883f12b5ff843feffc3f0bf4df2caff5f88fe0f79e59025fe92f1
ff17c2ff6963a91f648941fe47f6bfe497851a3933e1e37f633f871ff9273c591e3bc233c9ffc4fea7fcc498fd012ef9ff83e1e27fc0ffc881173ce1ff8fcae1f8ffd9ff5f73fcff3cffffc9fe17e137fbffff865cf9ffc7e1afede8ffca85ff8fe3f49dfc007eca35f2bfb125f9ff2be12ffbdf4827f99fd8ffba8fe4070b7f
8027c9ffc2fe57e11fccf2b22cb75c24c9ffc04efb8bbf198c1c5c593e7901d7ff07fcc7ff843f6a567ef2fcedb8c2af7ce1bff00b3fdbff24fcccff22fcbf72f5ffbff1bf03c05f791cfc6f1cff7f83f29790ff91fcff1bd03e38f9ffcf8d90c299f8fff07fcffc744402474eff173b12fff3087ed90c32421c83849ff2faff
17b9355f9bf885091c5442963709e7c66187fd7f930b5d5ed9350bc391385dc3f26c9c520e494e1f6184ff4f729f40220d04b2c44190cbd67110b2efb93a721096b8c3ff66d70f1eb19a6382a06982157ce8210924d22542867be2e5ff931f2493e8f1894d481cf4e08f3f8ec439f99ff0bfdc18310cdd6e2091c58365e569ea
95f1ff3f2258788e438207cd6152c006ea43f4c82ff97f87030788d0c31124f9411f4ef80707f63591ff2faf9c96f0931cfb83ee975f58f201d9fbc70f512bbff363c242001e0b0d07a75d76f2f9e30abf73e51f3f2432fc232fd7c25ff9c5f6cf7cf27fe049863790d09c4ef983097e4c62e109f831f1479e7f5e802b825f11
f9594e0cff0712e678466d9cfbe1cadf810fff0f88c41316fe4c6018fe083fe70fe34afc118e400ef0138667482a18c6ff499e05841fc0020c7f6c08214308f922c0c2ff949384302b022e063eca41c27158e2ffca4f213cdc618c845b2e09ffff28fc4a00c20f24fcff557280f00fff7f120ce0ffbf0f06e00affff39fc42f9
ffc724349cfcffe9d0808bff3f5c1046f8ffeb0316feff3f8087ffbfcecbff3f0f77f82b8fff3f1bfe8c0fff7f34fc9c7fbeffbf19be081e967f1c9e66feff6148f82909ca92e0ff7f7281ee49cec4ffdf0d0bece408ffff7430044110f0ff7f2938863ff8ffd70f20e0ff6f872308ff7f9d868fffffceffff2f000000000000
