pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- px9 data compression v9
-- by zep & co.
--
-- changelog:
--
-- v9:
--  @pancelor
--  ★ redo bitstream order
--  234 tokens (but ~4% slower)
--
-- v8:
--  @pancelor
--  ★ smaller vlist initialization
--  241 tokens
--
-- v7:
--  smaller vlist_val by @felice
--  7b -> 254 tokens (fastest)
--  7a -> 247 tokens (smallest)
--
-- v6:
--  smaller vlist_val by @p01
--  -> 258 tokens
--
-- v5:
--  fixed bug found by @icegoat
--  262 tokens (the bug was caused by otherwise redundant code!)
--
-- v4:
--  @catatafish
--  ★ smaller decomp
--
--  @felice
--  ★ fix bit flush at end
--  ★ use 0.2.0 functionality
--  ★ even smaller decomp
--  ★ some code simpler/cleaner
--  ★ hey look, a changelog!
--
-- v3:
--  @felice
--  ★ smaller decomp
--
-- v2:
--  @zep
--  ★ original release
--
--[[

	features:
	★ 273 token decompress
	★ handles any bit size data
	★ no manual tuning required
	★ decent compression ratios


	██▒ how to use ▒██

	1. compress your data

		px9_comp(source_x, source_y,
			width, height,
			destination_memory_addr,
			read_function)
				
		e.g. to compress the whole
		spritesheet to the map:
		
		px9_comp(0,0,128,128,
			0x2000, sget)

	…………………………………
	2. decompress
	
		px9_decomp(dest_x, dest_y,
			source_memory_addr,
			read_function,
			write_function)

		e.g. to decompress from map
		memory space back to the
		screen:
		
		px9_decomp(0,0,0x2000,
			pget,pset)

		…………………………………

		(see example below)

		note: only the decompress
		code (tab 1) is needed in
		your release cart after
		storing compressed data.
		
]]

function _init()

	-- test: compress from
	-- spritesheet to map, and
	-- then decomp back to screen

	cls()
	print("compressing..",5)
	flip()

	w=128 h=128
	raw_size=(w*h+1)\2 -- bytes

	ctime=stat(1)

	-- compress spritesheet to map
	-- area (0x2000) and save cart

	clen = px9_comp(
		0,0,
		w,h,
		0x2000,
		sget)

	ctime=stat(1)-ctime

	--cstore() -- save to cart

	-- show compression stats
	print("                 "..(ctime/30).." seconds",0,0)
	print("")
	print("compressed spritesheet to map",6)
	ratio=tostr(clen/raw_size*100)
	print("bytes: "
		..clen.." / "..raw_size
		.." ("..sub(ratio,1,4).."%)"
		,12)
	print("")
	print("press ❎ to decompress",14)

	memcpy(0x7000,0x2000,0x1000)

	-- wait for user
	repeat until (btn(❎) or true)

	print("")
	print("decompressing..",5)
	flip()

	-- save stats screen
	local cx,cy=cursor()
	local sdata={}
	for a=0x6000,0x7ffc do
		sdata[a]=peek4(a)
	end

	dtime=stat(1)

	-- decompress data from map
	-- (0x2000) to screen

	px9_decomp(0,0,0x2000,pget,pset)

	dtime=stat(1)-dtime

	-- wait for user
	repeat until (btn(❎) or true)

	-- restore stats screen
	for a,v in pairs(sdata) do
		poke4(a,v)
	end

	-- add decompression stats
	print("                 "..(dtime/30).." seconds",cx,cy-6,5)
	print("")

end

-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 8 and
	-- 15 bits long with the next
	-- bits in these positions:
	--   0b0000.12345678...
	-- (1 is the next bit in the
	--   stream, 2 is the next bit
	--   after that, etc.
	--  0 is a literal zero)
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<8 then
			-- cache next 8 bits
			cache_bits+=8
			cache+=@src>>cache_bits
			src+=1
		end

		-- shift requested bits up
		-- into the integer slots
		cache<<=bits
		local val=cache&0xffff
		-- remove the integer bits
		cache^^=val
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)
		end
	end
end

-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function
	px9_comp(x0,y0,w,h,dest,vget)
	local mytable = {}
	local dest0=dest
	local bit=1
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	local cache,cache_bits=0,0
	function putbit(bval)
	 cache=cache<<1|bval
	 cache_bits+=1
		if cache_bits==8 then
			mytable[dest] = cache
			poke(dest,cache)
			dest+=1
			cache,cache_bits=0,0
		end
	end

	function putval(val, bits)
		for i=bits-1,0,-1 do
			putbit(val>>i&1)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if cache_bits>0 then
		-- flush
		mytable[dest] = cache<<8-cache_bits
		poke(dest,cache<<8-cache_bits)
		dest+=1
	end

	local str = ''
	for i = dest0, dest do
		-- str ..= (chr(mytable[i]))
		str ..= chr(peek(i))
	end
	str = escape_binary_str(str)
	print('' .. dest-dest0 .. ', ' .. #str) -- .. dest0 .. ', ' .. dest .. ', ' .. str)
	printh(str, 'output.bin')
	printh(str, '@clip')
	return dest-dest0
end

function byte_to_hex(byte)
	local hi = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte\16]
	local lo = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte%16]
	return '\\x' .. hi .. lo
end

function escape_binary_str(s)
 local out=""
 for i=1,#s do
  local c  = sub(s,i,i)
  local nc = ord(s,i+1)
  local pr = (nc and nc>=48 and nc<=57) and "00" or ""
  local v=c
  if(c=="\"") v="\\\""
  if(c=="\\") v="\\\\"
  if(ord(c)==0) v="\\"..pr.."0"
  if(ord(c)==10) v="\\n"
  if(ord(c)==13) v="\\r"
  if(ord(c)==9) v="\\t"
  	-- v = byte_to_hex(ord(c))
  out..= v
 end
 return out
end
-- 40% - 50%
-- 14 images per cart...
-- dw = 8 images per cart...

__gfx__
12122212121111202225d52252020202204020211202020121212151512121121111111121204022022220221202201111111111111111111111111121212112
212121202022021211225dd1220222202220202101222022020212121522122121111212122224042220212011110211111111111111111111111121211d1212
2525555222022021111122dd1220202202042020210022202251551212525221221211122025042020212021111111111111111111111111111c121d1d1d1dd5
555d5555020222101111122d5d1212020220220202220202205512125212520212111212045520211111222011111111111111111111111c1c111d11d1cdd1dd
5d5d555220220212202211122ddd12022204042220202220251552512124042211111222225022111111202211111111111c1111111c112112121c1d1d1dcddd
d5d5d5121212120202202211121d22202222202022020202125551225255251212111121222212212111111111221112211111111111212211d11c11dcdcddcd
dddd3d5121212120202120211121dd22202022220422022212155251552522121121d1220402212121d1111112121111111111111111c111c11c11c1d1ddcddd
dd3dd52221252211111111111111d2d5d22220222051210255555252d255522121212212222121212111111111221111111c111111111c1111c1c21d1c1cdd6d
dddddddddddd5521212121111112122245222220422252520455552512555122121212212220211121d1c1111112211111211d11111c1111c1ddddcdddddd6d6
dd6dddddddddd52121111111111221254d45222220455225404255252d55d212122221222522211d11111111111121222221211d1111c111c1c1dcdddcdd6c66
d6dddddd6d6dd5211111111111122222244454224555255045525555255555d2d222d2d54022212122c11d11d122022022022211d1c11c1c1d2cdddddd6d6666
6d66d66d66ddd5221211121212120202254dd4445425554554555555545d52d1d212d52524202222122222222222222222220221d11d11c121dddd6666666667
d6d6d6d66dadd52211212121222222222544d6d44545455555555454555555d2d2d55545222222222022202202022022222422221d11c11d1dddc6d6d6666766
6d66b6d6ad6d55112121220220202022225544d6445455555555555525454545d5d54544222222022424222222222222252555d52d221d21d2cdd6d666667666
d66d6d6d66ddd5121121102222242445454454d4664d55455455520452555455d45d444222242444224522022222222224555d5d21d1d1d2d1dddc6666666666
6d6dd6d66d6dbd1d211121202225225425224446466d6dd555455520204255445d4d554242424224245422222022222252455d55d1dc1ddddddd666666666666
66d6a66a666dd5d1522122222204222524545544dada6dda55555252520225554d5da5544424544545442222242225254555d5d5d212dd1dddd6666666666667
66666d6d6daddd5d5d5212525222045454554d54d46d666ddd455020254045255545dd4544544444d4545454222042525454d4ddddddddddddd6666666667677
6f6a666d6dd6d5ddd55d552502254045454d4d4d4d4da666d6dd5525025252554545d5d4444454d4544545545542225455d4dadadddddd6d6dcd666667676767
6f666666ddddddddd5d4525222025255555d4d4da5d6d6666dddd55225040454545dadd454da54d464d4dad44545452545addd6d6d66d6d66666d66676776767
f67f766d6cdddc6bdd5555252525252545d5da5d54d56d6d666ddd4552255555545dbd4ad44d4f4a5ad4454d444454454dda6ad666d6d66dd6d6666767667676
667676f666dc6bddddd54554042525225254d5d4dadddb6d6c6dd4d4545225554d4dd6d5da544dd4d4daddadd4444445add6d6666d666d666666667676766676
66676776f666666ddbd5d545452545225555d5da55dad6dd6666fd4d4555455555dad56d4d464addadd4ddddaddd4d4dd4f6f666666666d66667676767667667
667f777776f66d6ddd4555252555525225555d5dd4dd6cddd5da666d4d4525555d5ddddb6d4dd4d4d4fd6d6dddad464666df6666666d66666776767676666667
66676767766666d6d5d2d454545555555225455d4646d6b6d6dd56a6d4d45254545d5d6ddad9d4daddad6d6ad6d6dfdfdf666666666666677676767676767676
666667767676666ddd4d4d5d4d555525255254da5dddb6d65dadddd66d4d455555d565dddddd465d46ddad6dddad6dfdfd666667667676767667667676776767
666766767666666ddd454d4dd5d545555545455d546ddd6ddadd64d4da6d44d454d5ddadbf56bd64dad46dadaddda66666f67676767676766766667677677676
6676676666666666ddddddda365d5545555554d4dd464ddadddddd4ddd6d64d4d4ddadddd6dd6ddaddaddadd66f6d66666776776776767666666767767767777
66676677676666d6dd4da5ddddb455554524d5dd4ddadbdd6b6da5d444dad6ad6464dddad6ad66b6dddadd6f4666f66f76777767676767667666676776776767
676677676766666d6d6dd6b6ddd4544554dd5dd6da5ddf4dad6ddd565d4dd66d6dadd6d6d6d6b66d6add64666f66666677676777676776776676767677777676
66676676766666c6b6c6b66dda5d4d54dddd6daddddad5656ddada54d4d44df6a6d6ddad66666666dd6da6666666676767777676767777776766767767666667
66666666666c6666c6c6c6cddd5a55add46dd6d66d6ddad46d6dddada5465d466666fd666666c6c6d6d6d66f6776767676767676676767776767676776767677
6666676666666c6c6c6c666b66dddaddad6d6d6d6ddadddad66b6ddd565adaddd6666d66666666666dad66667677776767667667676777677676767667666777
6666666666c666b666b66b6666b66d6d6b66a66b66dd6465ada666bfda5d4ddadf666f666666666d6666df667767676666666777767767776767676766667767
66c766666666c6c66676666666f6666b666d6b666ad6dad6ddddc66d65f46add4d6666666666666ad6df66766767666666667676776777677676666667776777
666c6c6c6c6c66c6c666666c66ad6bf6666ad6dad6d66dad666b6d666656564ada666676666666d6a6f6f6776776767676667667677677766766667776777777
6667776766666c6c66c6c6666c66666666d6da66666b66d6b66666b6da6a6addfd66766776666a666f6f67677676777776776777676766676676776777777777
777777777776766766666c6c666b6c6c666b6d6d6b66d6b66dad6a666d6dadfadf6f667667f6f6a6a6f667667677676777676767676766667677777777767777
767777777777676767677776666766666b66666666d555d4d6d65ddd6ad6dfd6f6f6767ff6fff6f6666f76767666666666666666767677776777677677777777
76767767677767f76776777777777666676666666655555555d666dddd6da66a66f67f676ff6f6fff77667666666d6dd66677777777767677677776777777677
f76777777777767676777776776777777776666666555555555d7666666666666f6f676f6f676f6766666666dd64f4a467767767777776767777777767767767
767777777777777777777677677777767776f67676555545555577777777777766d6dddad6666f666f6fdadf4a6a6fdadf677777677777777677676777777677
77677767777777676777776776777777776f767777555555555567777777777776dadd5dad9da66f46fdadf464f4f4f4f6677777777767776777777677767777
6ff77777777677777767777677777777777676f7665555555555677777777777765d55addadad666ada6ef6a6f6ada6f46f67777777777777777776777777777
6667677777777777776777766767777767767f777f5555455550f777777777777655555d4d64fda6f4f6adf4f4fdad96fa667777777777677766776677677777
f6f67677777777767767667677777777777776777655455555047777777777777655555d5ada4666f4f6fdf6a6ad4df4fda66777776777777667766777777777
6f66f77777776767766f6f66f767777777767f777655d555555577777777777765555555d5ddada66a6adaf6f6e4f4a6a6d67777777767677667667677777767
76f677777777666767f6f6f66776777777677677765555555555777777777777d5555555544dadf664fdff6ff6ad464fdfad777777776676776f6f6677677777
f6f7777776767766f6f6f6a66f6777777777f777765dad55555577777777777765555555555d464f696ff6a6f6a64adfae6a6777767666666f66f6f677777777
7f777777777666f66f66a666f67f77766777767776d5dd545555577777777777655045055554ada66d94fdfdff4ffdaedff6677777676f6f6fadf66f66767776
7767677776776f6f6f66dfff677776776777777776d6dad555055d77777777776555055550555dda6fdfa64ff6adae6adadf477777766f6f6666fa66f7777776
77776767777776f677fff6f6f7777776777767766664666d5545556777777777750455555555d4ad6f9deff6ff696fdffdaefd776776f6f7ff6f66f677777777
776777767777767f7676f6f677777676777776777d6ddd6ad5555557777777777750555504555dd466ff4696f6f64fadff6f6a677777767676f6ff6f77777667
777776f677677767ff76f6f77677676f66767667645da5d6d555555677777777777d455545554d46df6adadffa6ad4ffadfa66d7677777f677f6f677767766f7
7777776f6777776f6777677677767666f6f67677655555d5654d54567777777777775555555555d5a66f4ff6664ffadfdff6aea67777676ff76f677777776f66
6767777677677777776f76f7777f6adf666f676f65da5555dad6550f77777777777777d555555d5d666a6f6a69d9df4f4f6fdfdf676777777f6f7f67776766f6
f677776f77f677776776f67776f6df66f6f66f66d45dd555556da5577777777777777655055554b4d6dff6adfdff64d9dfff4aedf7f677776f766f7776f6f6f6
77776f766767767777f6df76776f6f6f66f6f6f65565d5d5556ddd67777777777777d504555555456a66a66f4fadf9dff6ffdfda5777776776f6f77776f6f666
777766f66f7777f7776df677776676766f666f6a555d5a55556ad6f77777777777765555504555556d466fff46ff6f4ff76a646d4677f777766f67776f666ff6
7777f76da676f7777656f77766f6f6f6766f665dad4a555d5d6d66677777777777d05055555555556646a6fdadadada666464fdada67f777776f777766f6f6f6
777677f6676f77777d567766f666f6776f6f6ad5d5d5dd46ad66666677777777775025550455555564addfa6fef4ff4d464f46adf56f77776767677776f76f76
777776f76f666f77656f666f66f6f676f66fdd45555dad5dda5646d677777777775050525555555465da5664f4a64d4fadf6ad64f4df677767f777776f6f7776
77777676f6646f765566d6f666f6f7766f6d4adda5dad5a555d4d4a56777777776040205055555564a54646adf4d4f46da6fdae6a64f6f67777677766f677676
777767766a6f767d55655576f676767f6f6add555d4d6dddad55addd7777777775020525504504565d6464d6a64f4fadaefffdad646477777777777777777776
777676ff666777655d55df67767767676fd66a664f6a6adad5ddd5ad777777777505200525555556da54ada5dfda6dffdf6fdffffda66767677677667676776f
776767676f6f6655555df6766f676f76fdadfd46a666f6fdfa6a5dd777777777655020405055046d6dd54d4d464dff6adffaff6adfdad7f76767777677f77f67
77677f7766f6665555df676f666f676fd55a6f6ad6adfdffdfdd4df777777777d55040504552566d4555a5adad6adf6ffa666ff6fa6e466f6f77676f7677676f
67777676f6dad55555f66f66f7767f664d56d4dd45ddada6ff456f7777777777d55205020555546d555554dd46ddfa6fdffff6ff664f69667767766f77776f76
7f7777676f6dd55556f7766f66f66f65554d45555555dddfdf5da77777777777d555040520455564555555adadfad6fff6f6f6f6fffdadf77f7776f776776766
7767767f66655555f6666f676767f6d4b4da34555555adada5d45d6777777777d55550402055556655555554646dfdf6a6465a6fffa6df4767676776777777f6
76777777655555df66f76767f7767d554d5555555055d46eddad5d567777777755552505045555d6654555d4ad464a6f6fad45f6f6dae6467777f7777767766f
7777767d5d555a66666f6f7677766545555555050545464654d5d55577777777d55555255555554da5555555d4adaddffdfd454f6ffdadf46777777777f767f6
77777765d55566f6ff6f676777764555455555504056dad4655ad555677777776555505025555556d55555555d46ddfdf4ada504ffa6ff46a767777767777f66
77777655555a776f66f67776767d54b455505055554466d45a555550d7777777775555250055055d66554d45d5a5adad6f4d4555a66fda6f56777777777677f7
77766555555777677676767f776455455050550554da6fdad5dd550467777777776550504555456f66fd66565d566666f6fadf506f6a6fda6f77767776777677
7777d55555677767f767f76766555555050505454d6dfdad6d45d55577777777777552555554d6f6d565666a66f766fd6df69d455a6efff64467776777777777
767d55555577777776777777fd4555550504055464adad6ddad6ad46777777777775555555556666a55dad6d6ddd4d454ddf64a50f6f6f4ffa67766777776777
7765d555567777777676777665555550550554dfdad65d64dd66d6667777777777766df545456dadd5ddd565555dd5d4a5adf64455fa6ffadd46776f67777777
76d55555df7777767767777655455555045554ff6df554d5add66667777777777776dfdf66d55ddddd555555565a34bd5455ff64546ff666a6fdf6df77777777
7d55555a7777776767f66f6545555505454d46fda6545645dd5555f777777777777655d6dd4d4d55a5555555da35d5d4d45546ada5fdafa6df4fdadf67776777
6555556777777667767f6f5d5555555466a6fdad64554db4d55555677777777777775555555da5d55d555554d5555555555554f64fff6df4f4f64da677777777
55555f7777776766f6f6fda554555546ad6dadd46545a54d5555505d777777777777d5555555555555d5555555555555554555ff46a6af6fdfadad6667677777
5555f777777676f6f66fd55d4b454ad6df4f646a5555656555555550677777777777764555555555554d55555d55d5555555455ff46f6f4fda6dd46d7f777777
555f7777777766f6ff6ad5addf556dada66ad6655454d4d5555055550677777777777777655555555555a55555555545555554546fdff6adf6ada646f6777777
55f7767776776f66f66dd5dada6dad6ddf46dad45554656545555555416777777777777775555555555555555555555555545555a6a6adff464fdada67777767
5f777767777777f6f6adad6dfdfdfdadaddffd454545a555d555045555d77777777777776505550555555d5555555555555545455f6dff6f6ae465d677776767
6776776767677676f6d56adaddadaddfdf46ad4555555d55a55555555456777777777777d050555554555d45555555555545555455af4f6a6dfdadadf6776676
f777f7f6777677f6fdadd6dd4ddfdad4f6add5545545d5d5dd55555555dd777777777777552504555dd54555555555554555545545dfdadffadad4dda676f6f6
6677767f6767f77664dadadada5fddfdad64454545555a5d5654555555557777777777760505555554655d555055554555555545545adff66ff464dadf6f66f6
ff76776f67f6f76fdadd4d4ddddadaddfdf55455555435d5addd455555556777777777760204050455d555555555555d55454554b455fdfa6f6addad646f6f66
767f6f6f6f76f76addadadadadadd69da6445545a5555555d55a6d55554567777777777d0405545555d5555555545d46555555454545adfdf4f64dd46a6666a6
6f676f6f66f76f6dadd646ddfddadfd6dfd54db4555555555d5d6da554d5d7777777777d5045055555a55a554555dadd6545455455455f4fa6ffadadadda6666
767f6f66a66f6f646dadadadadfdf4fa69554545545555554dd566dddd54d67777777776550545554dd65dd545dadd6d465554b4545546a6df6addd6dad6f6f6
f6f6f6f666f6f6adaddad6dfda6a66dfdd4d5a5d5545555555a5d566465d5677777777765545555555d6ddadadddd6adda5a554d5a5d55f4fadf64ad46da6f66
6f6f66f6a66a64d6da6df4adfdfdfada645455545a5555555555dadd65a5dd677777777d5555d4d54dada5dddada6d6adda55d455555a5da66fad6dadaddf6f6
f676f6a66dfd6a6ad64f466adf4fdfdf4d5a5d5d555555545555d566addd5a677777777655545dd4d66dd6ad6df66addad4d54b4d4d55546ffdfdadd6df46a66
6f6f6666a6a6d646adf6a646f6a6adad54d55da5545554555454556d6d65557777777776545dda56ada6addada6df6464fa554d4db4d4d5ada6a6dadadad6d6f
6f6da6ad6d64a6dfdfdad6fdad6d6dfd4db4d555d55455545555a5dfdda65677777777765d64ddadd66ddad666fa66adadda5d545ad54d55f46dadfdfd6adadf
6da66d66a6fd6adada6df46a64fadad4d44d45a54a55555554555566a5d6d77777777777dadadaddf6a6adadad666d646a6d54da5d54b4a5da64fdadadfdfdfd
f664ffaddf4fdfdfd64f6ad6dfdfdfd4bda5dd5d555545454b45545ddddf7777777777776dd6dda66d646fdf66f6f4a66dad4d55d4d4dd5d4da646dfdadadad6
dadfd6dfad6adada6a6dadfadadadad4d4d5a54da554b4554454b45adad67777777777776ada6ad6a6a6df6da66dfd6adfdada5d4b4da54d564f69dad646df46
fdadadad646dfdfdddad646dfdfdfd4da5d4d5a55d54454b4d5a5d55dddf7777777777777d6dd646d6da6da6df4fdad6f4f64d5a5da5d5da5464646dadf4fdad
4646ad64fadadadaf464fdadadada5d4d4da5dd5d9555a545a5554d4b4a677777777777664fada6fadfda6df646ad6addfdad4d5d4dd4a5dd4dadadadf46ad64
64f4dadaddad464dadadadaddadf5da5da5dda5a5d5a55d4d55d45a54d5d7777777777d4f646fd46dadfddada6d6adda6ad6ada5ad4ad5d4ad5adaddadaddada
4adaddad4addadaddaddaddad4f4d4da5d5a5d5d45a5545a54a5a55d454677777777766adadada646dadadfddadadf464646d4dd5d5d5add5add464f464ad464
ddad4ad464ad4ad9d4ad4ad4f4dada5d4add4adad55d4a55d5555d4a5a5d7777777764d46464ddadaddad4f4fdaddadadfdadad4ada5d4da5d4da5adadd4f4ad
9d4ad4da5d4ad4dadd4add9dada55d4ad5da5d5d95a555da5a5a5a55554a777777776adadadadad469d4fdadad464ddda5add4da5d4dad4d4ad5dad4d9dadad4
da5d4a5da465ad4d9ad4dad4d95da4d5da5d4a54d545a5454545554a5a5677777777d4d4d4d4d4ad4dad4ad4dad4ada4df5ada5d4da5d4a5d5a5a5da5ad4d4d9
4d9da5a4d95a54a5d4da45a5a5d9d4ad45a5d4ada5a55a5a5a5a5a5555d7777777764ada4ada464da4dad4da54ad4ad4a5f4d4ada5d95a5da5d4d44d4d9da5ad
44d454d4a54d4a5a5a54da54d4a5d45a5a54a5d4545445455545454d94f77777777645a5d4a5d95a5a54da54ad5ad4dad44dad454d9d5da54a5a5ada44d954d4
4a5a5a5a54a54d4d44a544da45d95a5d45ad5a5a54a5a5a5a54a54a55a677777777da54a5a54a5d4d4da54ad54d44a544a5a54ada55a545a5d4d4545a5a5a5a5
5445a5454d4a5a59545a5a545a54d4a5a5444545a55454545955454456777777777644d445d45a4a5a54a554a4a5d4da5d444d454a54a5a54a5a5a5a5454d454
4a54595a5a554545a5a54595a54a545454a5a5a5444a54a545a5a5a5a777777777764a5a5a4a5454544544a5545a4a544a5a5a5a55454544d4544545a5a5a5a5
4595a5444595a4a54544445459544a5a545454544b454545a5454545467777777777545445454a5a5a5a545a5a54545a5545454595a4a5a595a5a5a545445444
4544544b9544554495a5a5a5954b45444a59595a44959b95444959595467777777774a595a5955454454a544454a59544a595a595454545454544544a5a595a5
49595959544959554545454545944954b44545954545444459b45454954477777777d4545454959595955954a5454595545445954a59595a5959595454545454
54554b4444b4544a59544495954454b94444b95459595459544449b45954d7777777449b959554b445444595544954b9449b95454545454545954b9595959595
4495944459444b45454b955454b9594454b94445955449b445454544454446777777d4544459594449b44b444b45954455444459595959595454444454545954
4554545454544444595445954444545444445454544b454459595445959b44777777f4445455454554444445944544459545459554554b4459b4454595954545
445454459545445955445454b4444545454444459544444545454b95454445f77777764b95954459545459545444b44544b954544b944445444449b44554b954
45444b44545954554454459544545444595545455454545954544445454544577777777f4544595544b9554454b44444b444459544454544b445544459544445
4454444545454b44544b445444544b445454544445954454544b4454454454467777777454545544594544544444454444454554545444594459545454454545
4545454459544444454444545445444545444b45454545454544445459545459777777d44454445455445445454544545445444544454b454545454454544545
45454454554545454544544545445445445444445454595445445445454545457777774545454595445445454544545445454544545444445454454544545955
454454544454545454545454545454545454545454454545454545454545445977777d4544545454545454544545454545445454544545454454544545954545
44545454545445445454454544544544544545454545454545454544545459667777745454544545454545454544544545454545454544545445454454554545
45454454544545454454545454545454545454544545445454454454544a66777777645445454545445445445454545454545445445454544545454545445454
45454545454545454545454454454545454544545454545445454545455677777776454545454544545454545454545445454545454545454545445454545445
__label__

ccccccccccccccccccccccccccc11111111111111ccccccccccccc111111111111111111ccccccccc1111111cccc111111111111111111111111111111111111
ccccccccccccccccccc11cccccccc1111111111111111c1111111111111c111cc11ccc111ccccccccc1111111cccc11111111111111111111111111111111111
ccccccccccccccccccc111cc11cccc11cccc1111111111111111111111ccc11cc111ccc11ccccccccccc1111111ccc1111111111111111111111111111111111
cccccccccccccccccccc11cc111ccccc11111ccc11111111111111111ccccccccc11cccccccccccc11cccc1111111cc111111111111111111111111111111111
cccccccccccccccccccccc1cc11cccccc1cccc111111111111111111cccccccccccc11cccccccccc111cc111111111cc11111111111111111111111111111111
cccccccccccccccccccccc11111ccccccccc111111111111111111cccccccccccccc111cccccccccc11c11111111111cc1111111111111111111111111111111
ccccccccccccccccccccccc11111111111111111ccccc11111ccccccccccccccccccc11cccccccccccc11cccc111111111111111111111111111111111111111
ccccccccccccccccccccc11cccccc111111111cc11cccccccccccccccccccccccccccccccccccccccc11cccccc11111111111111111111111111111111111111
cccccccccccccccccccc111cccc11ccccccccc11111cccccccccccccccccccccccccccccccccccccc111ccccccc1111111111111111111111111111111111111
cccccccccccccccccccc11cccc111cccccccc111c11cccccccccccccccccccccccccccccccccccccc11ccccccccc111111111111111111111111111111111111
cccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11ccccccccccc1111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc11cccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc1111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccc1111ccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccc111cc11c1111c111cccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc11cccc11cccc111ccccc11cccccccccc1111111111111111111111111111
ccccccccccccfffccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccccc11111ccc11111111ccccccccc111111111111111111111111111
ccccccccccffff77fccccccccccccccccccccccccccccccccccccccccccccccccc1cc11cccccc1cccc1111111111111111111111111111111111111111111111
cccccccccfff77777fcccccccccccccccccccccccccccccccccccccccccccccccc11111ccccccccc1111111cccc1111111111111111111111111111111111111
cccccccffff777777fccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111ccccccccc11111111111111111111111111111111111
ccccccffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111cc11ccccccccc111111111111111111111111111111111
cccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11111cccccccccc1111111111111111111111111111111
ccccffff7777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccc111cccccccc111c11ccccccccccccc1111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccc111111111111111111111111111
ccccffff77777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccfff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccfffffff77777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11111111111111111111111111
ccccccfffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccc11111111111111111111111111
77777cffffffff777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777fffffffffffff7777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c11111111111111111111111111
77777777ffffffff7fff77ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111111
77777777ffffff7777fffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c111111111111111111111111111
777777777777777777ffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111c111111111111111111111111111
777777777777777777fffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777777777777777fffcccf77777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
777777777777777777ffffff777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
7777777777777777777fffff7777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
77777777777777777777fffff77777777777fffffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
7777777777777777777777fffffff77777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
777777777777777777777777ffffff77777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffff77777777777777777777fffff77777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
ffffff7777777777777777777fffffff777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffffff777777777777777777fffffffffffffff7fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc191111111111111111111111111
ffffffff77777777777777777cccccfffcccccccccccccccccccccccccccccccccccccccccccccccccccc9ccccccccccccccc199111111111111111111111111
fffffffff7777777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9f9cccccccccccccc9ff911111111111111111111111
ffffffffff77777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccff99ccccccccccccc9ff911111111111111111111111
fffffffffff77777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc999999999999999999999911111111111111111111111
fffffffffffffffff7777cccccccccccccccccccffffccccccccccccccccccccccccccccccccccccccc999999999999999999999991111111111111111111111
fffffffffffffff7f77777cccccccccccccffff77777ffcccccccccccccccccccccccccccccccccccc9999999999999999999999991111111111111111111111
ffffffffffffffff77777777ccccccccccffff77777777fcccccccccccccccccccccccccccccccccc99999999999999999999999999111111111111111111111
fffffffffffffffff77777777cccccccfffffff777777777cccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
fffffffffffffffffffff7777ffffffffffffffff7777777fccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff999990099999999999009999999911111111111111111111
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9999990099999999999009999999911111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9999999999999999999999999999911111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999991111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc99999999999999999999999999999991111111111111111111
d6666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999999111111111111111111
df66666666666666666666666666666666666666dd66666666666666666666666666666666666999999999944444444449999999999999991111111111111111
ddff6666666666666666666666666666666666ddddf6666666666666666666666666666666666999999999999999999999999999999999999111111111111111
dddf666666666666666666666666666666666ddddddf666666666666666666666666666666669999999999999999999999999999999999999111111111111111
ddfff6666666666666ddd66666666666666ddddddddff66666666666666666666666666666699999999999999999999999999999999999999911111111111111
ddddfd66666666666ddddf666666666666ddddddddffff66666666666666666666666666669999999999ffffffffffffffffff99999999999911111111111111
dddddddd666666ddddddddf666666666dddddddddddffdd77777777777777777777777777799999999ffffffffffffffffffffff999999999911111111111111
dddddddddddddddddddddddfd66666ddddddddddddddddd6666666666666666666666666699999999ffffffffffffffffffffffff99999999991111111111111
dddddddfdddddddddddddddddddddddddddddddddddddddd77777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
dddddddffdddddddddddddddddddddddddddddddddddddddd7777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddd77dd7777777777777777777999999ffffffffffffffffffffffffff9999999911111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddd777777777777777777779999ffffffffffffffffffffffffff9999991111111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd7777717177777777779999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd717771777777777777999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddd9dddddddddddddddddd71717777777377777999fffffffffffffffffffffffff99999911111111111111111
dddddddddddddddddddddddddddddddddddddddd979ddddddddddddddd1dd1711771777377711999fffffffffffffffff5fffffff99999911111111111111111
ddddddddddddddddddddddddddddddddddedddddd9dddd1ddddddddddd1dd111117111773711199993fff3ffffffffff5fffffff999999111111111111111111
ddddddddddddddddddddddddddddddddde7edddddd3dddd1dddd1dddd1d3d131111111173111109993fff3ffffff5555fffffff9993999111111333111133311
ddddddddddddddddddddddddddddddddddeddddddd3d33d11dddd1d111d3313131111111313300999939933f3fff67ddfff3f999993333333313333333333331
dddddddddddddddddddddddddddddddddd3bdddddd333dddd1d3d1dd11113331311313111337700999393333333367dd39933933333333333311333333333333
ddddddddddddddddddddddddddddddddddbdddbddd3dddddd113301d11313331333333138877773333333333333367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbdbdddddd33dddd33010330333313333113333888777777888888888883367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbbbddddbd33ddddd30133b3333311333133333887733337788888998888867dd23333333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbdbddb33b33333d33bb333333333333338888877333377888893a9888867dd22888333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbbbbbb33b33bbbd33bb3333333333333888888873333722889999a9888555528838333333333333333333333333333
dddddddddddddddddddddbdddbdddbbbbdbbbbbbbbb33bbbbbbbbbb3333333333888888888888888888999999888888888883333333333333333333333333333
ddddddddaddddddddddddbbddbbdbbbbbbbbbbbbbbb3bbbbbbbbbbb3333333383888888888888888888899992288888888833333333333333333333333333333
ddddddda7addddddddddddbdbbbdbbbbebbbbbbbbbbbbbbbbbbbbbbbb333388888888888888888888888899228888888388333333333333333333333b3333333
ddddddddaddddddddddbbdbbbbbbbbbe7ebbbbbbbbbbbbbbbbbbbbbbbbb3888888888888888888888888888888888883883333333333333333333333b3333333
dddbdddd3ddddddbd333bdbbbbbbbbbbe3bbbbbbbbbbbbbbbbbbbbbbbbb888bb88888888888888888888888888888883833b3333333b3333b3333333b3333333
dddbdddbbbddddbbd3bbbdbbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbb88888b8888888b88888888888888b888888b83333b33bb333b3333b3333333bbb3b333
dddbbdbbbddddbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb8888888888888bb8888b8bbb3b3b33bb333b33333b33b333bbbb3333
dddbbddb3bdbdbddbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb888bbb8bbb888b88888b88bbbbbbbbbb333bbb333b33b33bbbbb3333
bbdbbbdb3bdbb33dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbb88888b8bbbbbbbbbbb3b3bbbbbbb33bb3bbbbb3333
bbbbbbbb3b3bbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbbbbbbbbbbbbbbbbbbbbbb3bbbb3b333b3333
bbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbb3bbb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b3b3bb3bb3333bb333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b3b3bb3bb333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333b3333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3b3bbb3333bbb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb33333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3b3333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33333333333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333333b333bb3333333
bbbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333b33b333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b33b333333333
bbbbabbbbbb3bbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bb3b33b333333333
bbba7abbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33333bb33
bbbba3bbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33b33bbb3
b3333333333bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b3bbbb
b3bb3bb3bb3bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbb
b33b3bb3bb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3b33b33b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbb
b3bb3bb3b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

__gff__
0081030301811303030301010000010003030101010103030101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
fffffff0ffff0ffd89e32fc19aa67c51f47fc01ffcc05f7c3c8cff11bf818b9b851f420042b8c21112fee70148c0f8f821e008c20b0a84ff733842c042f8295c940f8c62f83f23e01906fe092f3811f00dff6fc641c03fe046f8427887ff73183f50caf8851bc3f87ff12338f818ffb342f9df13065ec2ff8a7084ff3fc0022e
12f03fe3e37fce013ef0bfe6ff2ff0ff57f8ffd360e003ff7f3a20bce1ff1f87833ff8ffc760fcc1ffbf0eff7f1f08c0cdff82ffbf03168484ff7f0bce4258085ff8ff8f0148180290e10bff3309ffd3702402168431aef07f927593ff2732788681ff215f0207ff5719070165fc9f780438c2ff344c7e201cfcdf643ce07fca
c107c1c7ff4ac617fec782977081ff8f8c13fc6f255c24e024fc2fc3ff990ffcc5ffdfe4ff007ee7ff8f12fe1789ffff6f08c0ffff178430feff7ea83c82ffffcd8df0ffafc31fe0ffdf08fe47899ff8ff3f89ff83952b9c99ff3f13fe47f2519af8ff3730e17f22e40a02feffd2f03b7f3090c4ffff41f89d4b4e59e2ffff10
fe9784ffff44f81f72642be4ff6f70f0ff4b207cfcff6ffe08ffffc4fe871c5c25f9ffd3e18fc2ffdf90ff6558f82095ffbf4c180f1bfeff3168380bff7f8df25bf82bfcffbdf02ff8ffafe1672efeff43ea7f127e92121ef93fa6fe59f8972bc98ffcaf63f883f12b5ff843feffc3f0bf4df2caff5f88fe0f79e59025fe92f1
ff17c2ff6963a91f648941fe47f6bfe497851a3933e1e37f633f871ff9273c591e3bc233c9ffc4fea7fcc498fd012ef9ff83e1e27fc0ffc881173ce1ff8fcae1f8ffd9ff5f73fcff3cffffc9fe17e137fbffff865cf9ffc7e1afede8ffca85ff8fe3f49dfc007eca35f2bfb125f9ff2be12ffbdf4827f99fd8ffba8fe4070b7f
8027c9ffc2fe57e11fccf2b22cb75c24c9ffc04efb8bbf198c1c5c593e7901d7ff07fcc7ff843f6a567ef2fcedb8c2af7ce1bff00b3fdbff24fcccff22fcbf72f5ffbff1bf03c05f791cfc6f1cff7f83f29790ff91fcff1bd03e38f9ffcf8d90c299f8fff07fcffc744402474eff173b12fff3087ed90c32421c83849ff2faff
17b9355f9bf885091c5442963709e7c66187fd7f930b5d5ed9350bc391385dc3f26c9c520e494e1f6184ff4f729f40220d04b2c44190cbd67110b2efb93a721096b8c3ff66d70f1eb19a6382a06982157ce8210924d22542867be2e5ff931f2493e8f1894d481cf4e08f3f8ec439f99ff0bfdc18310cdd6e2091c58365e569ea
95f1ff3f2258788e438207cd6152c006ea43f4c82ff97f87030788d0c31124f9411f4ef80707f63591ff2faf9c96f0931cfb83ee975f58f201d9fbc70f512bbff363c242001e0b0d07a75d76f2f9e30abf73e51f3f2432fc232fd7c25ff9c5f6cf7cf27fe049863790d09c4ef983097e4c62e109f831f1479e7f5e802b825f11
f9594e0cff0712e678466d9cfbe1cadf810fff0f88c41316fe4c6018fe083fe70fe34afc118e400ef0138667482a18c6ff499e05841fc0020c7f6c08214308f922c0c2ff949384302b022e063eca41c27158e2ffca4f213cdc618c845b2e09ffff28fc4a00c20f24fcff557280f00fff7f120ce0ffbf0f06e00affff39fc42f9
ffc724349cfcffe9d0808bff3f5c1046f8ffeb0316feff3f8087ffbfcecbff3f0f77f82b8fff3f1bfe8c0fff7f34fc9c7fbeffbf19be081e967f1c9e66feff6148f82909ca92e0ff7f7281ee49cec4ffdf0d0bece408ffff7430044110f0ff7f2938863ff8ffd70f20e0ff6f872308ff7f9d868fffffceffff2f000000000000
