pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
--timey wimey stuff              v0.1.0
--by caterpillar games 



-- 0:7:20



gs = nil

dirs = {
	left = 0,
	right = 1,
	up = 2,
	down = 3,
	z = 4,
	x = 5
}

gameOverWin = 'win'
gameOverLose = 'lose'

moves = {}
shouldRecord = false

function _init()
	gs = {
		dt = 1/30.0,
		isGameOver = false,
		gameOverState = nil,
		startTime = t(),
		endTime = nil,
		currentAnimation = nil,
		checkPoint = {
			pos = vec2(25, 80),
			vel = vec2(0, 0)
		},
		stage = nil,
		player = {
			flipX = false,
			-- This is the topleft
			pos = vec2(25, 80),
			vel = vec2(0, 0),
			-- Rounded topleft
			effPos = function(self)
				return vec2(flr(self.pos.x), flr(self.pos.y))
			end,
			speed = 40,
			jumpSpeed = 70,
			getBoundingBox = function(self, topLeft)
				topLeft = topLeft or vec2(flr(self.pos.x), flr(self.pos.y))
				return {
					left = flr(topLeft.x) + 1,
					right = flr(topLeft.x) + 5,
					top = flr(topLeft.y),
					bottom = flr(topLeft.y) + 7
				}
			end,
			-- isGrounded = false,

			calcIsGrounded = function(self)
				local box = self:getBoundingBox()
				return isSolid(box.left, box.bottom + 1) or
					isSolid(box.right, box.bottom + 1)
			end,
			-- calcIsCeilinged = function(self)

			-- end
		}
	}

	-- goToStage(4, true)
	goToStage(0, false)
end

function parseMoveList(moveList)
	local ret = {}
	for moveStr in all(split(moveList, ';')) do
		if #moveStr > 0 then
			local parts = split(moveStr, ',', true)
			add(ret, {
				x = parts[1],
				y = parts[2],
				flipX = parts[3] > 0
			})
		end
	end
	return ret
end

function printWithDelay(message, speaker, callback)
	cls(cutSceneBackground)
	yield()
	if callback then
		callback()
	end

	-- frames = frames or 100
	while not btnp(dirs.x) do
		cls(cutSceneBackground)
		color(speaker)
		if callback then
			callback()
		end
		if speaker == pastSelf then
			print(message, 20, 90)
		print('❎', 80, 115)
		else 
			print(message, 60, 90)
		print('❎', 115, 115)
		end

		if btnp(dirs.x) then
			return
		end

		yield()
	end
end

pastSelf = 8
futureSelf = 12
cutSceneBackground = 1

function goToStage(stageNum, isNowFuture)
	-- if stageNum == 3 then
	-- 	writeContent()
	-- 	shouldRecord = false
	-- 	return
	-- end 
	local stage = nil
	if stageNum == 0 then
		stage = {
			isNowFuture = isNowFuture,
			moveList = parseMoveList('200,64,1;'),
			camera = vec2(0, 0),
			pos = vec2(40, 64)
		}
		gs.currentAnimation = cocreate(function()
			gs.player.flipX = true
			for i = 1,20 do
				cls(cutSceneBackground)
				yield()
			end

			for i = 1,20 do
				cls(cutSceneBackground)
				spr(7, 100, 64-8, 2, 2)
				yield()
			end

			for i = 1, 30 do
				cls(cutSceneBackground)
				spr(7, 100, 64-8, 2, 2)
				local location = 100 - i * 2
				stage.moveList = parseMoveList(location .. ',64,1;')
				if location <= 80 then break end
				yield()
			end

			stage.moveList = parseMoveList('80,64,1;')
			cls(cutSceneBackground)
			printWithDelay('     hello', futureSelf, function()
				gs.player.flipX = false
			end)
			printWithDelay('who are you?\nwhy do you look\nlike me?', pastSelf)
			printWithDelay("i'm you from the\nfuture", futureSelf)
			printWithDelay('follow me and\nwatch my\nevery move', futureSelf, function()
				spr(9, 100, 64-8, 2, 2)
			end)
			cls(cutSceneBackground)
			
			-- yield()
			cls(cutSceneBackground)
			for i = 1, 30 do
				cls(cutSceneBackground)
				spr(9, 100, 64-8, 2, 2)
				local location = 80 + i * 2
				if location > 100 then
					stage.moveList = parseMoveList('200,64,0;')
				else
					stage.moveList = parseMoveList(location .. ',64,0;')
				end
				yield()
			end

			if not isNowFuture then
				for i = 1,100 do 
					cls(cutSceneBackground)
					spr(9, 100, 64-8, 2, 2)
					gs.player.pos.x += 2
					if gs.player.pos.x < 100 then
						yield()
					end
				end
			end

			goToStage(1, stage.isNowFuture)
			-- if isNowFuture then
			-- 	goToStage(5)
			-- else
			-- 	goToStage(1)
			-- end
		end)
	elseif stageNum == 1 then
		stage = {
			isNowFuture = isNowFuture,
			moveList = parseMoveList('25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,88,0;25,86,0;25,84,0;25,82,0;25,80,0;25,78,0;25,77,0;25,75,0;25,73,0;25,72,0;25,71,0;26,69,0;27,68,0;28,67,0;30,66,0;31,66,0;32,65,0;34,64,0;35,64,0;36,63,0;38,63,0;39,63,0;40,62,0;42,62,0;43,62,0;44,63,0;46,63,0;47,63,0;48,64,0;50,64,0;51,64,0;52,62,0;54,60,0;55,58,0;56,56,0;58,54,0;59,52,0;60,51,0;62,49,0;63,48,0;64,46,0;66,45,0;67,44,0;68,43,0;70,42,0;71,41,0;72,41,0;74,40,0;74,39,0;74,39,0;74,39,0;74,38,0;74,38,0;74,38,0;74,38,0;74,38,0;74,39,0;74,39,0;75,40,0;76,40,0;76,41,0;76,42,0;76,42,0;76,43,0;76,44,0;76,46,0;76,47,0;76,48,0;76,48,0;76,48,0;76,48,0;76,48,0;76,48,0;76,46,0;76,44,0;76,42,0;76,40,0;76,38,0;76,37,0;76,35,0;76,33,0;76,32,0;76,31,0;76,29,0;78,28,0;79,27,0;80,26,0;82,25,0;82,25,0;82,24,0;83,24,0;84,23,0;86,23,0;87,23,0;88,22,0;90,22,0;91,22,0;92,23,0;94,23,0;95,23,0;96,24,0;96,24,0;96,24,0;96,24,0;96,24,0;96,24,0;96,24,0;96,24,0;'),
			camera = vec2(0, 0),
			pos = vec2(14, 88),
		}
	elseif stageNum == 2 then
		stage = {
			isNowFuture = isNowFuture,
			moveList = parseMoveList('268,15,1;268,15,1;268,15,1;268,15,1;268,15,1;268,16,1;268,17,1;268,17,1;268,18,1;268,19,1;268,20,0;268,21,0;268,22,1;266,24,1;265,24,1;264,24,1;262,24,1;261,24,1;260,24,1;258,24,1;257,24,1;256,25,1;254,25,1;253,26,1;252,26,1;250,27,1;250,28,1;250,29,1;250,30,1;250,31,1;250,32,1;250,33,1;250,35,1;250,36,1;250,38,1;250,39,1;250,41,1;250,43,1;250,45,1;250,47,1;250,47,1;250,47,1;250,48,1;250,48,0;252,48,0;253,48,0;254,48,0;256,48,0;257,48,0;258,49,0;260,49,0;261,49,0;262,50,0;264,50,0;264,51,0;264,52,0;264,53,0;264,54,0;264,55,0;264,56,0;264,57,0;264,59,0;264,60,0;264,62,0;264,64,0;264,64,0;264,64,1;262,64,1;261,64,1;260,64,1;258,64,1;257,65,1;256,65,1;254,65,1;253,66,1;252,66,1;252,67,1;252,68,1;252,69,1;252,70,1;252,71,1;252,72,1;252,73,1;252,75,1;252,76,1;252,78,1;252,80,1;252,80,1;252,80,1;252,80,1;252,80,1;250,80,1;249,78,1;248,76,1;246,74,1;245,72,1;244,70,1;242,68,1;241,67,1;240,65,1;238,64,1;237,62,1;236,61,1;234,60,1;233,59,1;232,58,1;230,57,1;229,56,1;228,56,1;226,55,1;225,55,1;224,55,1;222,54,1;221,54,1;220,54,1;218,54,1;217,54,1;216,55,1;214,55,1;213,55,1;212,56,1;210,57,1;209,57,1;208,58,1;206,59,1;205,60,1;204,61,1;202,63,1;201,64,1;200,66,1;198,67,1;197,69,1;196,71,1;194,72,1;193,74,1;192,76,1;190,79,1;'),
			camera = vec2(21 * 8, 0),
			pos = vec2(21 * 8 + 108, 22)
		}
		gs.player.flipX = true
	elseif stageNum == 3 then
		stage = {
			isNowFuture = isNowFuture,
			moveList = parseMoveList('353,87,0;353,87,0;353,87,0;353,87,0;353,87,0;353,88,0;353,88,0;353,88,0;353,88,0;353,88,0;353,88,0;353,88,0;353,86,0;353,84,0;353,82,0;353,80,0;353,78,0;353,77,0;353,75,0;353,73,0;353,72,0;353,71,0;353,69,0;354,68,0;355,67,0;356,66,0;358,65,0;359,65,0;360,64,0;362,64,0;363,63,0;364,63,0;366,62,0;367,62,0;367,62,0;367,62,0;367,63,0;367,63,0;367,63,0;367,64,0;367,64,0;367,64,0;367,64,0;367,64,0;367,64,0;367,62,0;368,60,0;370,58,0;371,56,0;372,54,0;374,53,0;375,51,0;376,49,0;378,48,0;379,47,0;380,45,0;382,44,0;383,43,0;384,42,0;386,41,0;387,41,0;388,40,0;388,40,0;388,40,0;388,40,0;388,40,0;388,40,0;388,41,0;388,41,0;388,42,0;388,42,0;388,43,0;388,44,0;388,45,0;388,46,0;388,47,0;390,49,0;391,50,0;392,52,0;394,53,0;395,55,0;396,57,0;398,59,0;399,61,0;400,63,0;402,65,0;403,67,0;404,70,0;406,72,0;407,75,0;408,77,0;410,80,0;411,80,0;411,80,0;411,80,0;411,80,0;411,80,0;411,80,0;411,80,0;411,80,0;411,78,0;411,76,0;411,74,0;411,72,0;412,70,0;414,69,0;415,67,0;416,65,0;418,64,0;419,63,0;420,61,0;422,60,0;423,59,0;424,58,0;424,57,0;424,57,0;424,56,0;424,56,0;424,55,0;424,55,0;424,55,0;424,54,0;424,54,0;424,54,0;424,55,0;424,55,0;424,55,0;424,56,0;424,56,0;424,57,0;424,58,0;424,59,0;424,60,0;424,61,0;424,62,0;424,63,0;424,64,0;424,64,0;424,64,0;424,64,0;424,62,0;424,60,0;424,58,0;424,56,1;423,54,1;422,53,1;420,51,1;419,49,1;418,48,1;416,47,1;415,45,1;414,44,1;412,43,1;411,42,1;410,41,1;408,41,1;407,40,1;407,40,1;407,39,1;407,39,1;407,39,1;407,38,1;407,38,1;407,38,1;407,39,1;407,39,1;407,39,1;407,40,1;407,40,1;407,41,1;407,42,1;407,43,1;407,44,1;407,45,1;407,46,1;407,47,1;407,48,1;407,48,1;407,48,1;407,46,1;407,44,1;407,42,1;407,40,1;407,38,1;407,37,1;407,35,1;406,33,1;404,32,1;403,31,1;402,29,1;400,28,1;399,27,1;399,26,1;399,25,1;399,25,1;399,24,1;398,24,1;396,23,1;395,23,1;394,23,1;392,22,1;391,22,1;390,22,1;388,23,1;387,23,1;386,23,1;384,24,1;383,24,1;382,24,1;382,24,1;382,24,1;382,24,1;382,24,1;382,24,1;382,24,1;382,24,1;382,24,1;382,24,0;383,24,0;384,24,0;386,24,0;387,24,0;388,24,0;390,24,0;391,24,0;392,24,0;394,24,0;395,24,0;396,24,0;398,22,0;399,20,0;400,18,0;402,16,0;403,14,0;404,13,0;406,11,0;407,9,0;408,8,0;410,8,0;411,8,0;412,8,0;414,9,0;415,9,0;416,9,0;418,10,0;419,11,0;420,12,0;422,12,0;423,13,0;424,15,0;426,16,0;427,17,0;428,18,0;430,20,0;'),
			camera = vec2(41 * 8, 0),
			pos = vec2(41*8 + 14, 87)
		}
		gs.player.flipX = false
	elseif stageNum == 4 then
		stage = {
			moveList = parseMoveList('80,64,1;'),
			camera = vec2(0, 0),
			pos = vec2(40, 64)
		}

		gs.currentAnimation = cocreate(function()

			-- for i = 1, 100 do
			-- 	spr(7, 100, 64-8, 2, 2)

			-- end
			cls(cutSceneBackground)
				printWithDelay('ok what now?', pastSelf)
				printWithDelay('my journey is\nover. but you\nhave work\nto do', futureSelf)
				printWithDelay('travel back and\nguide your past\nself', futureSelf)

				for i = 1, 30 do
					cls(cutSceneBackground)
					spr(9, 10, 64-8, 2, 2)
					yield()
				end
				gs.player.flipX = true

				for i = 1, 30 do
					cls(cutSceneBackground)
					spr(9, 10, 64-8, 2, 2)
					yield()
				end
				
				spr(9, 10, 64-8, 2, 2)

				printWithDelay('    wait', futureSelf, function()
					spr(9, 10, 64-8, 2, 2)
				end)
				gs.player.flipX = false
				printWithDelay('take my shirt', futureSelf, function()
					gs.makeLeaderShirtless = true
					-- cls(cutSceneBackground)
					spr(9, 10, 64-8, 2, 2)

					spr(37, 64, 64 - 8)
					-- yield()
				end)

				gs.player.flipX = true
				for i = 1, 10 do
					cls(cutSceneBackground)
					spr(9, 10, 64-8, 2, 2)
					yield()

					gs.makePlayerShirtBlue = true
				end

				for i = 1, 30 do
					cls(cutSceneBackground)
					spr(9, 10, 64-8, 2, 2)

					-- palt(0, false)
					-- palt(14, true)
					-- spr(52, gs.player.pos.x, gs.player.pos.y, 1, 1, gs.player.flipX)
					-- palt()
					-- stage.isNowFuture = true
					gs.player.pos.x -= 1

					yield()
				end


				-- spr(37, )
				-- printWithDelay('who are you?\nwhy do you look\nlike me?', pastSelf)
				-- printWithDelay("i'm you from the\nfuture", futureSelf)
				-- printWithDelay('follow me and\nwatch my\nevery move', futureSelf, function()
				-- 	spr(9, 100, 64-8, 2, 2)
				-- end)
				if not isNowFuture then
					goToStage(0, true)
				else
					gs.player.pos.x = 200
					printWithDelay('where did\nmy red\nshirt go?', futureSelf)
					gs.isGameOver = true
				end

				gs.makePlayerShirtBlue = false
				gs.makeLeaderShirtless = false

			cls(cutSceneBackground)
			end)

	end

	stage.stageNum = stageNum
	stage.stageCounter = 1

	gs.player.pos = stage.pos
	gs.checkPoint = {
		pos = stage.pos:clone(),
		vel = vec2(0, 0)
	}

	gs.stage = stage


	if isNowFuture and not isCutscene() then
		local pastPos = gs.player.pos:clone()
		local futurePos = vec2(gs.stage.moveList[1].x, gs.stage.moveList[1].y)
		gs.player.pos = futurePos
		gs.stage.moveList[1].x = pastPos.x
		gs.stage.moveList[1].y = pastPos.y

		stage.recordedMoves = {}
		local delta = pastPos - futurePos
		for i = 1, counterLag do
			add(stage.recordedMoves, {
				x = pastPos.x,
				y = pastPos.y,
				flipX = false
			})
		end
		for i = 1, counterLag/2 do
			local cur = pastPos - delta * i / (counterLag/2)
			add(stage.recordedMoves, {
				x = cur.x,
				y = cur.y,
				flipX = false
			})
		end
	end


end

function rndrange(_min, _max)
	local diff = _max - _min
	return _min + diff * rnd()
end

metaTable = {
	__add = function(v1, v2)
		return vec2(v1.x + v2.x, v1.y + v2.y)
	end,
	__sub = function(v1, v2)
		return vec2(v1.x - v2.x, v1.y - v2.y)
	end,
	__mul = function(s, v)
		if type(s) == 'table' then
			s,v = v,s
		end

		return vec2(s * v.x, s * v.y)
	end,
	__div = function(v, s)
		return vec2(v.x / s, v.y / s)
	end,
	__eq = function(v1, v2)
		return v1.x == v2.x and v1.y == v2.y
	end
}

function vec2fromAngle(ang)
	return vec2(cos(ang), sin(ang))
end

function vecFromDir(dir)
	if dir == dirs.left then
		return vec2(-1, 0)
	elseif dir == dirs.right then
		return vec2(1, 0)
	elseif dir == dirs.up then
		return vec2(0, -1)
	elseif dir == dirs.down then
		return vec2(0, 1)
	else
		assert(false)
	end
end

function modInc(x, mod)
	return (x + 1) % mod
end

function modDec(x, mod)
	return (x - 1) % mod
end

function vec2(x, y)
	local ret = {
		x = x,
		y = y,
		norm = function(self)
			return vec2fromAngle(atan2(self.x, self.y))
		end,
		squareDist = function(self, other)
			return max(abs(self.x - other.x), abs(self.y - other.y))
		end,
		taxiDist = function(self, other)
			return abs(self.x - other.x) + abs(self.y - other.y)
		end,
		-- Beware of using this on vectors that are more than 128 away
		eucDist = function(self, other)
			local dx = self.x - other.x
			local dy = self.y - other.y
			-- return sqrt(dx * dx + dy * dy)
			return approx_magnitude(dx, dy)
		end,
		isWithin = function(self, other, value)
			return self:taxiDist(other) <= value and
				self:eucDist(other) <= value
		end,
		isOnScreen = function(self, extra)
			if extra == nil then extra = 0 end

			return extra <= self.x and self.x <= 128 - extra
				and extra <= self.y and self.y <= 128 - extra
		end,
		length = function(self)
			return self:eucDist(vec2(0, 0))
		end,
		angle = function(self)
			return atan2(self.x, self.y)
		end,
		clone = function(self)
			return vec2(self.x, self.y)
		end
	}

	setmetatable(ret, metaTable)

	return ret
end


function hasAnimation()
	return gs.currentAnimation != nil and costatus(gs.currentAnimation) != 'dead'
end

function acceptInput()
	if btn(dirs.left) then
		gs.player.vel.x = -1 * gs.player.speed
		gs.player.flipX = true
	elseif btn(dirs.right) then
		gs.player.vel.x = 1 * gs.player.speed
		gs.player.flipX = false
	else
		gs.player.vel.x = 0
	end

	-- TODO variable jump speed
	if gs.player:calcIsGrounded() then
		if btnp(dirs.x) then
			gs.player.vel.y = -1 * gs.player.jumpSpeed
		end
	end

end

function writeContent()
	local content = ""
	for move in all(moves) do
		local flipX = 0
		if move.flipX then
			flipX = 1
		end
		content = content .. flr(move.pos.x) .. ',' .. flr(move.pos.y) .. ',' .. flipX .. ';'
	end
	printh(content, '@clip')
end

function _update()


	if gs.isGameOver then
		if gs.endTime == nil then
			gs.endTime = t()
		end
		-- Restart
		if btnp(dirs.x) then
			_init()
		end
		return
	end

	gs.stage.stageCounter += 1
	add(gs.stage.recordedMoves, {
		x = gs.player.pos.x,
		y = gs.player.pos.y,
		flipX = gs.player.flipX
	})
	if shouldRecord then
		add(moves, {
			pos = gs.player.pos:clone(),
			flipX = gs.player.flipX
		})
	end
	if btnp(dirs.z) then
		writeContent()
	end


	if hasAnimation() then
		return
	end
	-- acceptInput()

	updatePhysics()

	acceptInput()

	-- checkCollisions()
	checkDeath()

	checkTeleport()
end

function checkTeleport()
	local box = gs.player:getBoundingBox()

	if fget(mget(box.left / 8, box.top / 8), 5) then
		gs.currentAnimation = cocreate(function()
			-- Wait for past self to catch up
			if gs.stage.isNowFuture then
				gs.player.pos.y = 200
				for i = 1, counterLag*3 do
					yield()
				end
			end
			goToStage(gs.stage.stageNum + 1, gs.stage.isNowFuture)
		end)
	end
end

function playerIsInDanger()
	return isDeadly(gs.player.pos.x, gs.player.pos.y)
end

function checkDeath()
	-- TODO something dramatic...
	if playerIsInDanger() then
		die()
		return
	end

	if gs.player:calcIsGrounded() then
		local box = gs.player:getBoundingBox()
		if isTrap(box.left, box.bottom + 1) or
			isTrap(box.right, box.bottom + 1) then
				local boxes = {}
				if isTrap(box.left, box.bottom + 1) then
					local cell = vec2(flr(box.left/8), flr((box.bottom + 1)/8))
					add(boxes, {
						cell = cell,
						pos = vec2(box.left, box.bottom),
						sprite = mget(cell.x, cell.y)
					})
				end
				if isTrap(box.right, box.bottom + 1) then
					local cell = vec2(flr(box.right/8), flr((box.bottom + 1)/8))
					add(boxes, {
						cell = cell,
						pos = vec2(box.right, box.bottom),
						sprite = mget(cell.x, cell.y)
					})
				end

				gs.currentAnimation = cocreate(function()
					for i = 1, 100 do
						local mul = 1.5
						for box1 in all(boxes) do
							-- spr(0)
							local box = box1.cell * 8
							rectfill(box.x, box.y, box.x + 7, box.y + 7, 0)
							spr(box1.sprite, box.x, box.y + i * mul)
							gs.data = box1.pos
							-- box1.pos.y += 1
						end

						gs.player.pos.y += mul

						if playerIsInDanger() then
							die()
							return
						end

						yield()
					end
					die()
				end)
		end
		-- isSolid(box.left, box.bottom + 1) or
		-- isSolid(box.right, box.bottom + 1)
	end
end

function die()
	-- gs.player.pos = gs.checkPoint.pos:clone()
	-- gs.player.vel = gs.checkPoint.vel:clone()
	goToStage(gs.stage.stageNum, gs.stage.isNowFuture)
end

function mymget()
	local sprite = mget(gs.player.pos.x / 8, gs.player.pos.y / 8)
	return sprite
end

function isTrap(x, y)
	return fget(mget(flr(x/8), flr(y/8)), 2)
end

function isSolid(x, y)
	return fget(mget(flr(x/8), flr(y/8)), 0)
end

function isDeadly(x, y)
	return fget(mget(flr(x/8), flr(y/8)), 1)
end

function checkCollisions()
	local player = gs.player
	local box = player:getBoundingBox()
	if isSolid(box.left, box.bottom) or isSolid(box.right, box.bottom) then
		player.vel.y = 0
		player.pos.y = box.top -1
	elseif isSolid(box.left, box.top) or isSolid(box.right, box.top) then
		player.vel.y = 0
		player.pos.y = box.top + 1
	end

	local box = player:getBoundingBox()
	if isSolid(box.left, box.top) or isSolid(box.left, box.bottom) then
		player.vel.x = 0
		player.pos.x = box.left + 1
	elseif isSolid(box.left, box.top) or isSolid(box.right, box.bottom) then
		player.vel.x = 0
		player.pos.x = box.left - 1
	end

end

function isSolidBb(newPos)
	local newBox = gs.player:getBoundingBox(newPos)
	return isSolid(newBox.left, newBox.top) or
		isSolid(newBox.left, newBox.bottom) or
		isSolid(newBox.right, newBox.top) or
		isSolid(newBox.right, newBox.bottom)
end

function updatePhysics()
	local g = 90
	-- if not gs.player.isGrounded then
		gs.player.vel.y += g * gs.dt
	-- end


	local d = gs.player.vel * gs.dt

	local newPosXonly = gs.player.pos + vec2(d.x, 0)
	local newPosYonly = gs.player.pos + vec2(0, d.y)

	if not isSolidBb(newPosXonly) then
		gs.player.pos.x = newPosXonly.x
	else
		gs.player.vel.x = 0
	end

	if not isSolidBb(newPosYonly) then
		gs.player.pos.y = newPosYonly.y
	else
		gs.player.vel.y = 0
	end

end

function drawGameOverWin()

end

function drawGameOverLose()
	print('the end', 50, 64, 7)
	print('press ❎ to play again', 25, 90, 7)
end

function drawBackground(flag)
	-- TODO take into account stage
	map(0,0,0,0,256,256, flag)
end



function drawPlayer()
	palt(0, false)
	palt(14, true)
	if (gs.stage.isNowFuture and not isCutscene()) or gs.makePlayerShirtBlue then
		spr(52, gs.player.pos.x, gs.player.pos.y, 1, 1, gs.player.flipX)
	else
		spr(36, gs.player.pos.x, gs.player.pos.y, 1, 1, gs.player.flipX)
	end
	palt()
end

counterLag = 30

function isCutscene()
	return (gs.stage.stageNum == 0 or
		gs.stage.stageNum == 4)
end

function drawLeader()
	local move = gs.stage.moveList[gs.stage.stageCounter]
	if move == nil then
		if isCutscene() then
			move = gs.stage.moveList[#gs.stage.moveList]
		else
			move = {
				x = 1000,
				y = 200,
				flipX = 1
			}
		end
	end

	if gs.stage.isNowFuture and not isCutscene() then
		move = gs.stage.recordedMoves[gs.stage.stageCounter - counterLag]
		if move == nil then
			move = gs.stage.recordedMoves[1]
		end
	end

	palt(14, true)
	palt(0, false)
	if gs.makeLeaderShirtless then
		spr(54, move.x, move.y, 1, 1, move.flipX)
	elseif gs.stage.isNowFuture and not isCutscene() then
		spr(36, move.x, move.y, 1, 1, move.flipX)
	else
		spr(52, move.x, move.y, 1, 1, move.flipX)
	end
	palt()
end

function _draw()
	cls(0)
	camera(gs.stage.camera.x, gs.stage.camera.y)
	if gs.isGameOver then
		if gs.gameOverState == gameOverWin then
			drawGameOverWin()
		else
			drawGameOverLose()
		end
		return
	end

	drawBackground()

	if hasAnimation() then
		local active, exception = coresume(gs.currentAnimation)
		if exception then
			color(7)
			stop(trace(gs.currentAnimation, exception))
		end

		-- return
	end

	drawLeader()

	drawPlayer()

	-- Debug
	-- if gs.data then
	-- 	print(gs.data.x .. ' , ' .. gs.data.y)
	-- end
end





__gfx__
0000000000000000000000005555555555555555000000005550000000000088800000000000ccc000000000000000000ccc0000000000000000000000000000
00000000000000000000000055555555555555550000005555550000000088228ee0000000cc11cdd00000000000000cc11cdd00000000000000000000000000
0070070000000000999999005555555545555555000555555555440000008228ee80000000c11cddc00000000000000c11cddc00000000000000000000000000
00077000990099999888889955555555555555550055555555555400000e828ee88800000dc1cddccc000000000000dc1cddccc0000000000000000000000000
00077000999aaaaa88aa988855545555555555550555445556666550008ee28e82228000cdd1cdc111c0000000000cdd1cdc111c000000000000000000000000
00700700aaa9999888888999555555555555655505554456665665500028e8ee228280001cdcdd11c1c00000000001cdcdd11c1c000000000000000000000000
00000000888aaaaaaa998999555545565555555555555556555665500028e282288880001cd1c11cccc00000000001cd1c11cccc000000000000000000000000
000000009998899988aaaaa95555445555555555555555556556640000288e82888880001ccdc1ccccc00000000001ccdc1ccccc000000000000000000000000
00000000888898888888888a55554455555554555555555565565600002282e22222200011c1d111111000000000011c1d111111000000000000000000000000
00000000899888888988889855554555555555555555555565566600008228e2ee882000c11cd1ddcc10000000000c11cd1ddcc1000000000000000000000000
00000000999888888889999955555555555555550455555665554000002222e88e8820001111dccdcc100000000001111dccdcc1000000000000000000000000
000000009aa888aaaaaaa99956555555555555550445566555554000008822e88e888000cc11dccdccc0000000000cc11dccdccc000000000000000000000000
00000000aa899889988888895555545555555555000555555554000000088ee88ee800000ccddccddc000000000000ccddccddc0000000000000000000000000
000000008899888889999988555555555555555500000555555000000000ee8822e0000000ddcc11d00000000000000ddcc11d00000000000000000000000000
000000008999999988889999555555555565555500000000000000000000e8222880000000dc111cc00000000000000dc111cc00000000000000000000000000
0000000088888888999999995555555555555555000000000000000000000088800000000000ccc000000000000000000ccc0000000000000000000000000000
eeeeffffeeeeeeeeeeeeffffeeeeeeeeeefffffe0000000000000000555555655555555500000000000000000000000000000000000000000000000000000000
eeeffffffeeeeeeeeeeffffffeeeeeeeeefff0fe0000000000000000555555555556555500000000000000000000000000000000000000000000000000000000
eefff0ff0feeeeeeeefff0ff0feeeeeeeefffffe00c00c0000000000555555545555555500000000000000000000000000000000000000000000000000000000
eeffffffffeeeeeeeeffffffffeeeeeee8fffffe00cccc0000000000555555445555565500000000000000000000000000000000000000000000000000000000
eeffffffffeeeeeeeeffffffffeeeeeee88888ee0cccccc000000000555545555555555500000000000000000000000000000000000000000000000000000000
eeffffffffeeeeeeeeffffffffeeeeeee88888ee0cccccc000000000556555555555555500000000000000000000000000000000000000000000000000000000
e88ffffffeeeeeeeeccffffffeeeeeeee88888ee0cccccc000000000555555555555555500000000000000000000000000000000000000000000000000000000
e888ffffeeeeeeeeecccffffeeeeeeeee8ee8eee0000000000000000555555555545555500000000000000000000000000000000000000000000000000000000
e8888888eeeeeeeeeccccccceeeeeeeeeefffffeeefffffeeefffffe555555555555555500000000000000000000000000000000000000000000000000000000
e8888888eeeeeeeeeccccccceeeeeeeeeefff0feeefff0feeefff0fe555555555555565500000000000000000000000000000000000000000000000000000000
e888888eeeeeeeeeecccccceeeeeeeeeeefffffeeefffffeeefffffe455545554555555500000000000000000000000000000000000000000000000000000000
e888888eeeeeeeeeecccccceeeeeeeeeecfffffeecfffffeeffffffe445555555555555500000000000000000000000000000000000000000000000000000000
ee8ee8eeeeeeeeeeeeceeceeeeeeeeeeeccccceeeccccceeefffffee555555555555555500000000000000000000000000000000000000000000000000000000
ee8ee8eeeeeeeeeeeeceeceeeeeeeeeeeccccceeeccccceeefffffee555555555555556500000000000000000000000000000000000000000000000000000000
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeccccceeeccccceeefffffee555655655555555500000000000000000000000000000000000000000000000000000000
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeceeceeeeceeceeeefeefeee555555555555555500000000000000000000000000000000000000000000000000000000
00000000444444444444444400000000000000004404454404404404000000000000000000000000000000000000000000000000000000000000000000000000
00000000444444444444444400000000000000004454454504454404000000000000000000000000000000000000000000000000000000000000000000000000
00000000444444644444444400000050000000004404404404454404000000000000000000000000000000000000000000000000000000000000000000000000
00000000444444444445444400000550000000004454404454454404000000000000000000000000000000000000000000000000000000000000000000000000
00000000446454444444444400000650000000004455404404454404000000000000000000000000000000000000000000000000000000000000000000000000
00000000444444444444644400000560000000004454404404454404000000000000000000000000000000000000000000000000000000000000000000000000
00000000544444464444444400000550000050004454404454454404000000000000000000000000000000000000000000000000000000000000000000000000
00000000444444444444444400000550000050004404444404454444000000000000000000000000000000000000000000000000000000000000000000000000
00000000444444444444444400005650000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000044444444644444440000d550000556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000044445444444454440500d555000555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000464444444444444406005565000555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000044444444444444440505555d500655000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000444444444444444456055555500555600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000044444644446444445505565d550565500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000004444444444444444d605655665056d500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666660000000050000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000677777660000000056000000000000650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000676666560000000056660000000066650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000067666656000000005676bb3bbbb366750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000676666560000000057663bbbb3bb67650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000676666560000000056660000000066650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000665555560000000056000000000000650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666660000000050000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000677777660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000676666560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000006766665600000000bbb3bbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000006766665600000000b3bbb3bb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000676666560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000665555560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555455555555555555545555555555555554555555555555555455555555555555545555555555555554555555555555555455555555555555545555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55545555555555555554555555555555555455555555555555545555555555555554555555555555555455555555555555545555555555555554555555555555
55555555555565555555555555556555555555555555655555555555555565555555555555556555555555555555655555555555555565555555555555556555
55554556555555555555455655555555555545565555555555554556555555555555455655555555555545565555555555554556555555555555455655555555
55554455555555555555445555555555555544555555555555554455555555555555445555555555555544555555555555554455555555555555445555555555
55554455000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555455
55554555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
56555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555455000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055655555
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ccc00000000055555555
5555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cc11cdd000000055555555
5555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c11cddc000000045555555
555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dc1cddccc00000055555555
55545555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cdd1cdc111c0000055555555
555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001cdcdd11c1c0000055556555
555545560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001cd1c11cccc0000055555555
555544550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ccdc1ccccc0000055555555
5555445500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011c1d1111110000055555455
55554555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c11cd1ddcc10000055555555
555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111dccdcc10000055555555
56555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cc11dccdccc0000055555555
555554550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ccddccddc00000055555555
5555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ddcc11d000000055555555
5555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dc111cc000000055655555
555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ccc00000000055555555
55555555000000000000000000000000000000000000000000000000555555555555555500000000000000000000000055555455555554555555545555555555
55555555000000000000000000000000000000000000000000000000555555555555555500000000000000000000000055555555555555555555555555555555
55555555000000000000000000000000000000000000000000000000555555555555555500000000000000000000000055555555555555555555555545555555
55555555000000000000000000000000000000000000000000000000555555555555555500000000000000000000000055555555555555555555555555555555
55545555000000000000000000000000000000000000000000000000555455555554555500000000000000000000000055555555555555555555555555555555
55555555000000000000000000000000000000000000000000000000555555555555555500000000000000000000000055555555555555555555555555556555
55554556000000000000000000000000000000000000000000000000555545565555455600000000000000000000000055655555556555555565555555555555
5555445500000000000000000000000000000000000000000000000055554455555544550000fffff00000000000000055555555555555555555555555555555
5555445500000000000000000000000000000000000000000000000000000000000000000000fff0f00000000000000000000000000000000000000055555455
5555455500000000000000000000000000000000000000000000000000000000000000000000fffff00000000000000000000000000000000000000055555555
555555550000000000000000000000000000000000000000000000000000000000000000000cfffff00000000000000000000000000000000000000055555555
565555550000000000000000000000000000000000000000000000000000000000000000000ccccc000000000000000000000000000000000000000055555555
555554550000000000000000000000000000000000000000000000000000000000000000000ccccc000000000000000000000000000000000000000055555555
555555550000000000000000000000000000000000000000000000000000000000000000000ccccc000000000000000000000000000000000000000055555555
555555550000000000000000000000000000000000000000000000000000000000000000000c00c0000000000000000000000000000000000000000055655555
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045555555
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55545555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055556555
55554556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55554455000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55554455000000000000000000000000000000000000000000000000000000000000000000000000555554550000000000000000000000000000000055555455
55554555000000000000000000000000000000000000000000000000000000000000000000000000555555550000000000000000000000000000000055555555
55555555000000000000000000000000000000000000000000000000000000000000000000000000555555550000000000000000000000000000000055555555
56555555000000000000000000000000000000000000000000000000000000000000000000000000555555550000000000000000000000000000000055555555
55555455000000000000000000000000000000000000000000000000000000000000000000000000555555550000000000000000000000000000000055555555
55555555000000000000000000000000000000000000000000000000000000000000000000000000555555550000000000000000000000000000000055555555
55555555000000000000000000000000000000000000000000000000000000000000000000000000556555550000000000000000000000000000000055655555
55555555000000000000000000000000000000000000000000000000000000000000000000000000555555550000000000000000000000000000000055555555
5555555500000000000000000000000000000000000fffff00000000000000000000000000000000000000000000000000000000000000000000000055555555
5555555500000000000000000000000000000000000fff0f00000000000000000000000000000000000000000000000000000000000000000000000055555555
5555555500000000000000000000000000000000000fffff00000000000000000000000000000000000000000000000000000000000000000000000045555555
5555555500000000000000000000000000000000008fffff00000000000000000000000000000000000000000000000000000000000000000000000055555555
55545555000000000000000000000000000000000088888000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555555000000000000000000000000000000000088888000000000000000000000000000000000000000000000000000000000000000000000000055556555
55554556000000000000000000000000000000000088888000000000000000000000000000000000000000000000000000000000000000000000000055555555
55554455000000000000000000000000000000000080080000000000000000000000000000000000000000000000000000000000000000000000000055555555
55554455000000000000000000000000000000005555555555555555000000000000000000000000000000000000000055555565555555550000000055555455
55554555000000000000000000000000000000005555555555555555000000000000000000000000000000000000000055555555555556550000000055555555
55555555000000000000000000000000000000004555555545555555000000000000000000000000000000000000000055555554455555550000000055555555
56555555000000000000000000000000000000005555555555555555000000000000000000000000000000000000000055555544555555550000000055555555
55555455000000000000000000000000000000005555555555555555000000000000000000000000000000000000000055554555555555550000000055555555
55555555000000000000000000000000000000005555655555556555000000000000000000000000000000000000000055655555555555650000000055555555
55555555000000000000000000000000000000005555555555555555000000000000000000000000000000000000000055555555555555550000000055655555
55555555000000000000000000000000000000005555555555555555000000000000000000000000000000000000000055555555555555550000000055555555
55555555000000888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555555000088228ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
5555555500008228ee80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045555555
55555555000e828ee888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55545555008ee28e8222800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
555555550028e8ee2282800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055556555
555545560028e2822888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
5555445500288e828888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55554455002282e22222200000000000000000000000000000000000000000000000000055555555555555550000000000000000000000000000000055555455
55554555008228e2ee88200000000000000000000000000000000000000000000000000055565555555555550000000000000000000000000000000055555555
55555555002222e88e88200000000000000000000000000000000000000000000000000055555555455545550000000000000000000000000000000055555555
56555555008822e88e88800000000000000000000000000000000000000000000000000055555655445555550000000000000000000000000000000055555555
5555545500088ee88ee8000000000000000000000000000000000000000000000000000055555555555555550000000000000000000000000000000055555555
555555550000ee8822e0000000000000000000000000000000000000000000000000000055555555555555550000000000000000000000000000000055555555
555555550000e8222880000000000000000000000000000000000000000000000000000055555555555655650000000000000000000000000000000055655555
55555555000000888000000000000000000000000000000000000000000000000000000055455555555555550000000000000000000000000000000055555555
55555555555555555555555555555555555555550000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555555555555555555555555555555555555550000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555555555555555555555545555555555555550000000000000000000000000000000000000000000000000000000000000000000000000000000045555555
55555555555555555555555555555555555555550000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55545555555455555554555555555555555455550000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555555555555555555555555556555555555550000000000000000000000000000000000000000000000000000000000000000000000000000000055556555
55554556555545565555455655555555555545560000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55554455555544555555445555555555555544550000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55554455555544555555445555555455555554550000000000000000000000000000000000000000000000000000000000000000000000000000000055555455
55554555555545555555455555555555555555550000000000000000000000000000000000000000000000000000000000000000000000000000000055555555
55555555555555555555555555555555555555550000000099999900000000009999990000000000999999000000000099999900000000009999990055555555
56555555565555555655555555555555555555559900999998888899990099999888889999009999988888999900999998888899990099999888889955555555
5555545555555455555554555555555555555555999aaaaa88aa9888999aaaaa88aa9888999aaaaa88aa9888999aaaaa88aa9888999aaaaa88aa988855555555
5555555555555555555555555555555555555555aaa9999888888999aaa9999888888999aaa9999888888999aaa9999888888999aaa999988888899955555555
5555555555555555555555555565555555655555888aaaaaaa998999888aaaaaaa998999888aaaaaaa998999888aaaaaaa998999888aaaaaaa99899955655555
55555555555555555555555555555555555555559998899988aaaaa99998899988aaaaa99998899988aaaaa99998899988aaaaa99998899988aaaaa955555555
5555555555554455555555555555555555555555888898888888888a888898888888888a888898888888888a888898888888888a888898888888888a55555555
55555555555545555555555555555555555555558998888889888898899888888988889889988888898888988998888889888898899888888988889855555555
55555555555555555555555545555555555555559998888888899999999888888889999999988888888999999998888888899999999888888889999945555555
55555555565555555555555555555555555555559aa888aaaaaaa9999aa888aaaaaaa9999aa888aaaaaaa9999aa888aaaaaaa9999aa888aaaaaaa99955555555
5554555555555455555455555555555555545555aa89988998888889aa89988998888889aa89988998888889aa89988998888889aa8998899888888955555555
55555555555555555555555555556555555555558899888889999988889988888999998888998888899999888899888889999988889988888999998855556555
55554556555555555555455655555555555545568999999988889999899999998888999989999999888899998999999988889999899999998888999955555555
55554455555555555555445555555555555544558888888899999999888888889999999988888888999999998888888899999999888888889999999955555555
55554455555554555555445555555455555544555555545555554455555554555555445555555455555544555555545555554455555554555555445555555455
55554555555555555555455555555555555545555555555555554555555555555555455555555555555545555555555555554555555555555555455555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
56555555555555555655555555555555565555555555555556555555555555555655555555555555565555555555555556555555555555555655555555555555
55555455555555555555545555555555555554555555555555555455555555555555545555555555555554555555555555555455555555555555545555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555556555555555555555655555555555555565555555555555556555555555555555655555555555555565555555555555556555555555555555655555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555

__gff__
808282818180808080a0a0a0a0808080808282818180808080a0a0a0a0808080808080808080808585808080808080808080808080808085858080808080808080818182820581808080808080808080808181828280808080808080808080808081808282808080808080808080808080858082808080808080808080808080
0080808080808080800000000000000000808080808080808000000000000000008080808080808080000000000000000080808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0304030403040304030403040304030400000000005152515152515151525151515151515100000000616161616161616161616161616161610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1300000000000000000000000000001400000000004200000000000000000000000000005200000000610000000000000000000000000000610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03000000000000000000000000090a040000000000420000000000000000000000000708520000000061000000000000000000000000090a610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
13000000000000000000000000191a140000000000420000000000000000000000001718520000000061000000000000000000000000191a610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0300000000000003030000001414140400000000005100000000000045450000005151515200000000610000000000006161000000716161610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1300000000000000000000000000001400000000004200000000000000000000000000005200000000610000000000000000000000000000610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0300000000000000000000000000000400000000005100000000000000000000000000005200000000610000000000000000000000000000610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1300000000000000000014000000001400000000004200000000000000000046000000005200000000610000000000000000006100000000610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0300000000000000000000000000000400000000004200000000000000000000000000005200000000610000000000000000000000000000610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1300000000040400000000002738001400000000004200000000454500000000004646005200000000610000000061710000000000617100610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
030708000000000000000000000000040000000000420b0c0000000000000000000000005200000000610708000000000000000000000000610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
131718000000000000283700000000140000000000421b1c0000000000004546000000005200000000611718000000000000716100000000610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303030403000000000000000000000400000000004241424142000000000000000000005200000000616161616100000000000000000000610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1313131414010201020102010201021400000000005251525152434443444344434443445200000000616161616163737373737373737364610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0313030403111211121112111211120400000000004241424142535453545354535453545200000000616161616163737373737373737364610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1314131413141314131413141314131400000000005251525151515151515151515151515200000000616161616161616161616161616161610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
