pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
--klein bottle tweet             v0.1.0
--mini mech media

-- Let's draw a Klein bottle! It will consist of 2 main pieces,
-- the neck and the base. For both, we will use a curve that's
-- shaped like a question mark `?`. For the neck, we will form
-- a pipe surface by sweeping a circle through the question mark.
-- For the base, we will form a surface of revolution by rotating
-- the question mark around a straight line.

-- To generate the question mark curve, we will use a Clothoid aka
-- Euler spiral aka Cornu spiral. This curve is parameterized by
-- the Fresnel integrals, \int_0^L cos(l^2)dl, \int_0^L sin(l^2)dl
-- This curve has some very convenient properties:
-- * It is naturally parameterized by arc length, so
--   * If we calculate points at regular intervals of our loop index, 
--     they will be equidistant along the curve, which looks nice.
--   * The derivative (tangent vector) will already be normalized to 
--     unit length, saving some characters
-- * It is defined by integrals, so
--   * We can reuse results in subsequent loop iterations
--   * We get the derivative (tangent vector) for free
-- * The curvature of the curve is a linear function of arc length, so
--   * We can build a train track that follows the curve and passengers
--     will not experience jarring acceleration. Just kidding, we don't
--     need that use case. But the curve does look visually appealing
--     and smooth.

-- We only need a small segment of the Clothoid's infinite extent to get
-- our question mark curve. We choose endpoints so that a line connecting
-- them is a bitangent (tangent at both points). This makes it so the neck
-- smoothly flows into the body. Then we rotate so that the endpoints lie
-- on the x-axis, making it easier to calculate the surface of revolution 
-- for the base. Then we translate so the endpoints are equidistant from
-- the origin, allowing us to re-use the neck curve for the body curve.

-- A delta of of arc length
dl_=.0024415
-- x,y will be our position on the curve. Initialize to first endpoint
x=-.3626
y=0
-- Radius of the neck of the bottle
r=.05
-- Holds the x,y,z of each point in the mesh
mesh_q={}
-- Index variable for the points list
i=0
___c=cos
___s=sin
-- Here is where we calculate the curve and the mesh based on that

-- 4427 happens because we are inlining a couple of loops here
-- Mesh will consist of 12 "slices" of the bottle
--   (Actually there are 24, but we calculate 2 slices at a time)
-- Each slice will be an octogon of 9 points (first and last overlap)
-- We take a slice every 41 iterations to preserve accuracy of the curve
-- 12*9*41 = 4428, and this is a 0-based loop
for j=0,4427do
-- (Signed) arc length of the curve so far. Offset by -.7789 since that is the
-- arc length corresponding to our starting point
__l=j\9*dl_-.7789
-- Value to use when calculating the next part of the Fresnel integrals
-- We offset by -.1068 to align the bitangent with the x-axis
a=(__l)^2-.1068
-- Calculate the tangent vector
__tx=___c(a)
__ty=___s(a)
-- If this is the 41st iteration since our last slice, take a slice
if(j\9%41<1)--[[then
    -- To take a slice, we need to take where we are on the curve and
    -- * for the neck, form a circle centered at that point and perpendicular
    --   to the tangent of the curve
    -- * for the body, form a circle that intersects where we are on the curve,
    --   centered on the x-axis, and perpendicular to the x-axis

    -- The angle around the octogon for the slice
    ]]theta_b=j%9/8--[[
    ]]o=___s(theta_b)--[[
    ]]i+=1--[[
    -- Forming a slice of the neck. Calculate a circle centered at where
    -- we are on the curve, and perpendicular to the tangent of the curve
    ]]mesh_q[i]={--[[
        -- Note that the normal convention would be to use cos, cos, sin.
        -- But using sin, sin, cos makes it easier to draw the bottle later on
        -- Note that we turned the tangent vector (tx, ty) into a normal vector by
        -- doing (-ty,tx)
        ]]x=x-r*o*__ty,--[[
        ]]y=y+r*o*__tx,--[[
        ]]z=r*___c(theta_b)--[[
    ]]}--[[
    -- Forming a slice of the body. We are rotating the curve around the
    -- x-axis, so calculate a circle with radius y, centered on the x-axis
    -- and perpendicular to the x-axis.
    -- Except that would result in a 0 width at the ends, so we actually need
    -- to offset the radius by the radius of the neck.
    ]]bodyradius_k=r-y--[[
    -- Add 108 because there will be 9*12-108 points in the neck when we are
    -- done. And we want the body points to come right after.
    ]] mesh_q[i+108]={--[[
        -- The curve of the body is actually a mirror image of the curve
        -- of the neck. Achieve this by doing -x
        -- Note again that we are using sin, cos instead of cos, sin to make
        -- it easier to draw the bottle later on
        ]]x=-x,--[[
        ]]y=bodyradius_k*o,--[[
        ]]z=bodyradius_k*___c(theta_b)--[[
    ]]}
--[[end]]
-- Add the tangent vector times out delta of length. Because we inlined the loop
-- for calculating the curve with the loop for calculating the slice, we are
-- doing this 9 times more than we want. So we can just add a ninth of our delta
-- to compensate.
x+=__tx*dl_/9
y+=__ty*dl_/9
end
-- We now have our mesh populated. Time to draw the lines connecting the vertices.
-- The strategy is to do 2 passes.
-- First we draw a line connecting every pair of points that has an index of 9 away.
-- This connects corresponding points of each slice, drawing the "lines of longitude".
-- Then we connect every adjacent point (with respect to the array indices) with a 
-- line. This will result in drawing all the "lines of latitude". 
-- Technique borrowed from https://x.com/MunroHoberman/status/1335957716053987328?s=20
-- While we're at it, we will also rotate each point around an angle parameterized by
-- time, to animate a rotation.
::_::
cls()
-- We do both passes in one loop. The second pass handles all 24*9=216 points in the bottle.
-- The first pass does the same, except we need to draw the first slice twice, so
-- 25*9=225 points. This gives us a total of 441 iterations.
for i=0,441do
-- The first pass can be thought of 9 smaller passes, one for each vertex of our octogon.
-- 
-- i%25 tells us which slice we are on. Then *9 to get the base index for that slice (index of 
-- the first point in that slice).
__sliceindexbase=i%25*9
-- Calculate which vertex of the slices we are working with
__sliceoffset=i\25
-- Remember how we said we needed to draw the first slice twice? This `or` makes
-- it so we loop around back to the first slice. You might think it should just be
-- mesh_q[__sliceoffset], but this would result in the lines criss-crossing.
-- This is actually a consequence of the non-orientability of the Klein bottle. Taking
-- the modular inverse fixes it though. This is also the reason we used sin,cos for
-- calculating slices instead of cos,sin. The correction is much simpler this way.
--[[    ]]p=mesh_q[__sliceindexbase+__sliceoffset+1]or mesh_q[9-__sliceoffset]
-- By now, our point p might be nil or just wrong, since we might actually be onto the second pass.
-- That's ok, just overwrite it if we are. The second pass, logic is much easier. Just loop through each point.
--[[    ]]if(i>225)p=mesh_q[i-225]
-- Almost there, just need to apply a rotation. Here is our angle. The 9 is unrelated to our octogons.
--[[    ]]a=t()/9
___m=___c(a)
___n=___s(a)
-- This calculates a composition of rotations along 2 axes
--[[    ]]line((p.z*___n+___m*___m*p.x-___m*___n*p.y)*100+64,(___n*p.x+___m*p.y)*100+64,7)
end
flip()
goto _

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000007777777777777700000000000000000000000000000000000000000000077777777777700000000000000000000000000000
00000000000000000000000000777000000000007077000000000000000000000000000000000000000077707000000000777000000000000000000000000000
00000000000000000000000077007777777777777000777000000000000000000000000000000000077700007000000000700700000000000000000000000000
00000000000000000000007700777000000000070777700770000000000000000000000000000007700000007000000000700077000000000000000000000000
00000000000000000000770077000700000000070000077777700000000000000000000000000777000000007000000000700000770000000000000000000000
00000000000000000077007700000777777777777000000077777000000000000000000000007007000000007000000000700000007000000000000000000000
00000000000000000700770000077700000000070777000007777770000000000000000000770007000000007000000000700000007700000000000000000000
00000000000000000777000000700070000000070000777077007707700000000000000077000007000000007000000000700000007700000000000000000000
00000000000000007077000077000070000000700000000770000077077000000000000700000007000000007000000000700000007070000000000000000000
00000000000000007700707700000777777777770000000707700000770700000000007700000007000000777777777777700000007007000000000000000000
00000000000000070700070000077077777777777777000700070000007070000000770700000007007777007000000000777000007007000000000000000000
00000000000000077000707007707700000000007700777000007700070707700007000700000007770000007000000000700770007000700000000000000000
00000000000000077000700770770000000000000077707770000077070077070070000700000777000000007000000000700007707000700000000000000000
00000000000000770007000777000000000000000000077007000000700000707700000700077007000000007000000000700000077000070000000000000000
00000000000000770007007070000000000000000000000770770007070000070770000707700007000000007000000000700000007700070000000000000000
00000000000007700070007700000000000000000000000007707707007700777707000770000007000000007000000000700000007070770000000000000000
00000000000007700700070700000000000000000000000000077070000077070070777700000007000000007000000000700000007070770000000000000000
00000000000077000700077000000000000000000000000000000707000777070707707700000007000000007000000000700000007007770000000000000000
00000000000077777700707000000000000000000000000000000070777000770770700700000007000000007000000000700000007007770000000000000000
00000000000077007077770000000000000000000000000000000007777000077000077777000007000000007000000000700000007007070000000000000000
00000000000007700700770000000000000000000000000000000007770707770700000700700007000000007000000000700000007007070000000000000000
00000000000007700700077000000000000000000000000000000770707777070077000770777007000000007000000000700000007070770000000000000000
00000000000007700700077000000000000000000000000000077000777770770007700707000777000000007000000000700000007070770000000000000000
00000000000007700070070700000000000000000000000007700007700007070000070770770007700000007000000000700000007777070000000000000000
00000000000000770070007700000000000000000000077770007770700000777700007770007707077700007000000000700000077077070000000000000000
00000000000000770070007070000000000000007777700707770000700000077070000770000077007077777000000000700007707770070000000000000000
00000000000000770007770777700000777777770077777770000000700000070707000707700007777777007777777700700770077070070000000000000000
00000000000000770007000007777777777777777770000700000000700000070070777700077007070000777777777777777077707070070000000000000000
00000000000000077070770000077777700007700000000700000000700000070007707700000777700000007070000077777700007070070000000000000000
00000000000000077700007000070000000007700000000700000000700000070000070777000007777000007070000000707000007070070000000000000000
00000000000000077700000770070000000007700000000700000000700000070000007700770007700777777770000000707000007070070000000000000000
00000000000000007777000007770000000007700000000700000000700000070000000777007707000000077777777700707000007070070000000000000000
00000000000000000077770000077777777777777777777777777777777777777777777777777777777777777777777777777777777777770000000000000000
00000000000000000000777700070000000007000000000700000007700000070000000700007707007777777070000000707000007070070000000000000000
00000000000000000000007777070000000007000000000700000007700000070000000700000077770000007777777700707000007070070000000000000000
00000000000000000000000077777777700007000000000700000007700000070000000700000007007777777070000077777700007070070000000000000000
00000000000000000000000000777777777777777770000700000007700000070000000700000007000000007777777777777077007070070000000000000000
00000000000000000000000000000000077777770007777770000007000000070000000700000007000000007000000000700770777070070000000000000000
00000000000000000000000000000000000000007777700707700007000000070000000700000007000000007000000000700007007770070000000000000000
00000000000000000000000000000000000000000000077700077707000000070000000700000007000000007000000000700000777077070000000000000000
00000000000000000000000000000000000000000000000077000077000000070000000700000007000000007000000000700000007777070000000000000000
00000000000000000000000000000000000000000000000000770007770000070000000700000007000000007000000000700000007077770000000000000000
00000000000000000000000000000000000000000000000000007707007700070000000700000007000000007000000000700000007070770000000000000000
00000000000000000000000000000000000000000000000000000077000077070000000700000007000000007000000000700000007007770000000000000000
00000000000000000000000000000000000000000000000000000000700000770000000700000007000000007000000000700000007007070000000000000000
00000000000000000000000000000000000000000000000000000000077000077700000700000007000000007000000000700000007007770000000000000000
00000000000000000000000000000000000000000000000000000000000700070077000700000007000000007000000000700000007007770000000000000000
00000000000000000000000000000000000000000000000000000000000070070000770700000007000000007000000000700000007007770000000000000000
00000000000000000000000000000000000000000000000000000000000007770000007700000007000000007000000000700000007077770000000000000000
00000000000000000000000000000000000000000000000000000000000000070000000777000007000000007000000000700000007770070000000000000000
00000000000000000000000000000000000000000000000000000000000000007000000700770007000000007000000000700000007700070000000000000000
00000000000000000000000000000000000000000000000000000000000000000770000700007707000000007000000000700000777000700000000000000000
00000000000000000000000000000000000000000000000000000000000000000007000700000077770000007000000000700077707000700000000000000000
00000000000000000000000000000000000000000000000000000000000000000000700700000007007777007000000000707770007007000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000077700000007000000777777777777770000007007000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000700000007000000007000000000700000007070000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000077000007000000007000000000700000007700000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000700007000000007000000000700000007700000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000077007000000007000000000700000007000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000777000000007000000000700000770000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000007700000007000000000700007000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000077700007000000000700770000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000077707000000000777000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777777777700000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__meta:cart_info_start__
cart_type: tweet
# Embed: 750 x 680
game_name: Klein Bottle Tweet
# Leave blank to use game-name
game_slug: ''
jam_info: []
tagline: An (almost) tweetable animation of a Klein bottle
time_left: ''
develop_time: ''
description: |
  A [Klein bottle](https://en.wikipedia.org/wiki/Klein_bottle) non-orientable surface
  that is related to the Möbius strip.

  This can be rendered so compactly thanks in part to the [Euler spiral](https://en.wikipedia.org/wiki/Euler_spiral)
controls: []
hints: ''
acknowledgements: ''
to_do: []
version: 0.1.0
img_alt: A wireframe render of a Klein bottle
about_extra: ''
number_players: [0]
__meta:cart_info_end__
