pico-8 cartridge // http://www.pico-8.com
version 39
__lua__
--broke out                      v0.1.0
--mini mech media



gs = nil

dirs = {
	left = 0,
	right = 1,
	up = 2,
	down = 3,
	z = 4,
	x = 5
}

gameOverWin = 'win'
gameOverLose = 'lose'

function makeBall(pos, vel, rad, life, isStationary, isMain, isPaddle)
	return {
		pos=pos,
		vel=vel,
		rad=rad,
		isMain = isMain,
		isStationary = isStationary,
		isPaddle=isPaddle,
		draw = function(self)
			local col = 7
			if self.life > -1 then 
				col = 14-self.life
			end
			circfill(self.pos.x, self.pos.y, self.rad, col)
		end,
		update = function(self)
			self.pos += self.vel * gs.dt
			
			if self.pos.x < self.rad then
				self.pos.x = self.rad
				self.vel.x *= -1
			elseif self.pos.x > (128-self.rad) then
				self.pos.x = (128-self.rad)
				self.vel.x *= -1
			end
			if self.pos.y < self.rad then
				self.pos.y = self.rad
				self.vel.y *= -1
			end
			if self.isMain and not self.isPaddle and self.pos.y > 128 + 2*self.rad then
				gs.isGameOver=true
				gs.gameOverState = 'lose'
			end
		end,
		life = life
	}
end

function makeAllBalls()
	local ret = {}
	local xoff_start = -6
	local yoff = 0
	for rowi = 1, 6 do
		-- break
		for coli = 1, 10 do
			local neg = 1
			if rowi % 2 == 0 then
				neg = -1
			end

			local xoff = xoff_start + 3 * neg

			add(ret, makeBall(
				vec2(coli*12+xoff, rowi*(12 * sqrt(3)/2)+yoff),
				-- vec2(rnd(10),rnd(10)),
				-- vec2(0,20),
				vec2(0,0),
				4,
				7-rowi,
				true
				))
		end
	end
	return ret
end

function _init()
	gs = {
		getAllBalls = function(self)
			local ret = {}
			for ball in all(self.balls) do
				add(ret, ball)
			end
			for player in all(self.players) do
				add(ret, player)
			end
			return ret
		end,	
		dt = 1/30,
		isGameOver = false,
		gameOverState = nil,
		startTime = t(),
		endTime = nil,
		currentAnimation = nil,
		balls = makeAllBalls(),
		players = {makeBall(vec2(64,128), vec2(0,0), 10, -1, true, true,true)}
	}

	add(gs.balls, makeBall(
		vec2(64, 90),
		vec2(0, 45),
		4,
		-1,
		false,
		true
		))

end

function rndrange(_min, _max)
	local diff = _max - _min
	return _min + diff * rnd()
end

metaTable = {
	__add = function(v1, v2)
		return vec2(v1.x + v2.x, v1.y + v2.y)
	end,
	__sub = function(v1, v2)
		return vec2(v1.x - v2.x, v1.y - v2.y)
	end,
	__mul = function(s, v)
		if type(s) == 'table' then
			s,v = v,s
		end

		return vec2(s * v.x, s * v.y)
	end,
	__div = function(v, s)
		return vec2(v.x / s, v.y / s)
	end,
	__eq = function(v1, v2)
		return v1.x == v2.x and v1.y == v2.y
	end
}

function vec2fromAngle(ang)
	return vec2(cos(ang), sin(ang))
end

function vecFromDir(dir)
	if dir == dirs.left then
		return vec2(-1, 0)
	elseif dir == dirs.right then
		return vec2(1, 0)
	elseif dir == dirs.up then
		return vec2(0, -1)
	elseif dir == dirs.down then
		return vec2(0, 1)
	else
		assert(false)
	end
end

function modInc(x, mod)
	return (x + 1) % mod
end

function modDec(x, mod)
	return (x - 1) % mod
end

-- https://www.lexaloffle.com/bbs/?tid=36059
function approx_magnitude(a,b)
 local a0,b0=abs(a),abs(b)
 return max(a0,b0)*0.9609+min(a0,b0)*0.3984
end

function vec2(x, y)
	local ret = {
		x = x,
		y = y,
		dot = function(self, other)
			return self.x * other.x + self.y * other.y
		end,
		norm = function(self)
			if self.x==0 and self.y==0 then
				return self
			end
			return vec2fromAngle(atan2(self.x, self.y))
		end,
		squareDist = function(self, other)
			return max(abs(self.x - other.x), abs(self.y - other.y))
		end,
		taxiDist = function(self, other)
			return abs(self.x - other.x) + abs(self.y - other.y)
		end,
		-- Beware of using this on vectors that are more than 128 away
		eucDist = function(self, other)
			local dx = self.x - other.x
			local dy = self.y - other.y
			-- return sqrt(dx * dx + dy * dy)
			return approx_magnitude(dx, dy)
		end,
		isWithin = function(self, other, value)
			return self:taxiDist(other) <= value and
				self:eucDist(other) <= value
		end,
		isOnScreen = function(self, extra)
			if extra == nil then extra = 0 end

			return extra <= self.x and self.x <= 128 - extra
				and extra <= self.y and self.y <= 128 - extra
		end,
		length = function(self)
			return self:eucDist(vec2(0, 0))
		end,
		approxLength = function(self)
			return approx_magnitude(self.x, self.y)
		end,
		angle = function(self)
			return atan2(self.x, self.y)
		end
	}

	setmetatable(ret, metaTable)

	return ret
end


function hasAnimation()
	return gs.currentAnimation != nil and costatus(gs.currentAnimation) != 'dead'
end

function acceptInput()
	local x = tonum(btn(0)) - tonum(btn(1))
	gs.players[1].vel = -30 * vec2(x,0)
end

function _update()
	if gs.isGameOver then
		if gs.endTime == nil then
			gs.endTime = t()
		end
		-- Restart
		if btnp(dirs.x) then
			_init()
		end
		return
	end

	if hasAnimation() then
		local active, exception = coresume(gs.currentAnimation)
		if exception then
			stop(trace(gs.currentAnimation, exception))
		end

		return
	end

	acceptInput()

	for ball in all(gs.balls) do
		ball:update()
	end
	for player in all(gs.players) do
		player:update()
	end

	local allballs = gs:getAllBalls()
	for i = 1, #allballs do
		for j = i+1, #allballs do
			handleCollision(allballs[i], allballs[j])
		end
	end

	-- cleanup
	local newballs = {}
	local anyAlive = false
	for ball in all(gs.balls) do
		if (ball.life > 0 or ball.life == -1) then
			-- and ball.pos.y < 130
			-- then
			ball.collidedThisFrame = false
			if not ball.isMain then
				anyAlive = true
			end
			if ball.pos.y < 130 or ball.isMain then
				add(newballs, ball)
			end
		end
	end
	gs.balls = newballs
	if not anyAlive then
		gs.isGameOver = true
		gs.gameOverState = 'win'
	end
end

function handleCollision(ball1, ball2)
	local disp = ball1.pos - ball2.pos
	-- assert(ball1.isMain)
	local deficit = disp:approxLength() - (ball1.rad + ball2.rad)
	if deficit < 0 and not ball1.collidedThisFrame and not ball2.collidedThisFrame then
		-- assert(ball2.isMain)
		if ball1.life > 0 then
			ball1.life-=1
		end
		if ball2.life > 0 then
			ball2.life -= 1
		end
		-- TODO be more intelligent
		local proj = disp:norm()
		local aligned1 = proj:dot(ball1.vel)
		ball1.vel -= 2*aligned1*proj
		if not ball1.isStationary then
			ball1.pos -= 1.01*deficit * proj
		end
		-- if not ball2.isStationary then
		-- 	ball2.vel += 2 * aligned * proj
		-- end
		if not ball2.isMain then
			ball2.vel += aligned1 * proj
		end

		local aligned2 = proj:dot(ball2.vel)
		ball2.vel -= 2*aligned2*proj
		if not ball2.isStationary then
			ball2.pos += 1.01*deficit * proj
		end
		-- if not ball1.isStationary then
		-- 	ball1.vel += 2 * aligned * proj
		-- end
		if not ball1.isMain then
			ball1.vel += aligned2 * proj
		end

		-- ball1.collidedThisFrame=true
		-- ball2.collidedThisFrame=true
		-- ball1.vel *= -1
		-- ball2.vel *= -1
	end
end

function drawGameOverWin()
	if not gs.endTime then
		return
	end
	print(' you win!')
	print(' time to clear level: ')
	print('\n ' .. (flr((gs.endTime or 0) - gs.startTime)) .. ' sec', 7)
	print('')
	print(' press ❎ to play again', 7)
end

function drawGameOverLose()
	print(' you lose!', 7)
	print('')
	print(' press ❎ to play again', 7)
end

function _draw()
	cls()
	if gs.isGameOver then
		if gs.gameOverState == gameOverWin then
			drawGameOverWin()
		else
			drawGameOverLose()
		end
		return
	end

	-- Draw
	for ball in all(gs.balls) do
		ball:draw()
	end
	for player in all(gs.players) do
		player:draw()
	end
	-- print('balls:' .. #gs.balls, 7)
end


__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888000000000888000000000888000000000888000000000888000000000888000000000888000000000888000000000888000000000888000000000
00000088888880000088888880000088888880000088888880000088888880000088888880000088888880000088888880000088888880000088888880000000
00000088888880000088888880000088888880000088888880000088888880000088888880000088888880000088888880000088888880000088888880000000
00000888888888000888888888000888888888000888888888000888888888000888888888000888888888000888888888000888888888000888888888000000
00000888888888000888888888000888888888000888888888000888888888000888888888000888888888000888888888000888888888000888888888000000
00000888888888000888888888000888888888000888888888000888888888000888888888000888888888000888888888000888888888000888888888000000
00000088888880000088888880000088888880000088888880000088888880000088888880000088888880000088888880000088888880000088888880000000
00000088888880000088888880000088888880000088888880000088888880000088888880000088888880000088888880000088888880000088888880000000
00000000888000000000888000000000888000000000888000000000888000000000888000000000888000000000888000000000888000000000888000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00099900000000999000000000999000000000999000000000999000000000999000000000999000000000999000000000999000000000999000000000000000
09999999000099999990000099999990000099999990000099999990000099999990000099999990000099999990000099999990000099999990000000000000
09999999000099999990000099999990000099999990000099999990000099999990000099999990000099999990000099999990000099999990000000000000
99999999900999999999000999999999000999999999000999999999000999999999000999999999000999999999000999999999000999999999000000000000
99999999900999999999000999999999000999999999000999999999000999999999000999999999000999999999000999999999000999999999000000000000
99999999900999999999000999999999000999999999000999999999000999999999000999999999000999999999000999999999000999999999000000000000
09999999000099999990000099999990000099999990000099999990000099999990000099999990000099999990000099999990000099999990000000000000
09999999000099999990000099999990000099999990000099999990000099999990000099999990000099999990000099999990000099999990000000000000
00099900000000999000000000999000000000999000000000999000000000999000000000999000000000999000000000999000000000999000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000aaa000000000aaa000000000aaa000000000aaa000000000aaa000000000aaa000000000aaa000000000aaa000000000aaa000000000aaa000000000
000000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa0000000
000000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa0000000
00000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000000
00000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000000
00000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000aaaaaaaaa000000
000000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa0000000
000000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa00000aaaaaaa0000000
00000000aaa000000000aaa000000000aaa000000000aaa000000000aaa000000000aaa000000000aaa000000000aaa000000000aaa000000000aaa000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000bbb00000000bbb000000000bbb000000000bbb000000000bbb000000000bbb000000000bbb000000000bbb000000000bbb000000000bbb000000000000000
0bbbbbbb0000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb0000000000000
0bbbbbbb0000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb0000000000000
bbbbbbbbb00bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000000000000
bbbbbbbbb00bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000000000000
bbbbbbbbb00bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000bbbbbbbbb000000000000
0bbbbbbb0000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb0000000000000
0bbbbbbb0000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb00000bbbbbbb0000000000000
000bbb00000000bbb000000000bbb000000000bbb000000000bbb000000000bbb000000000bbb000000000bbb000000000bbb000000000bbb000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ccc000000000ccc000000000ccc000000000ccc000000000ccc000000000ccc000000000ccc000000000ccc000000000ccc000000000ccc000000000
000000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc0000000
000000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc0000000
00000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000000
00000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000000
00000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000ccccccccc000000
000000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc0000000
000000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc00000ccccccc0000000
00000000ccc000000000ccc000000000ccc000000000ccc000000000ccc000000000ccc000000000ccc000000000ccc000000000ccc000000000ccc000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000ddd00000000ddd000000000ddd000000000ddd000000000ddd000000000000000000000ddd000000000ddd000000000ddd000000000ddd000000000000000
0ddddddd0000ddddddd00000ddddddd00000ddddddd00000ddddddd00000000000000000ddddddd00000ddddddd00000ddddddd00000ddddddd0000000000000
0ddddddd0000ddddddd00000ddddddd00000ddddddd00000ddddddd00000000000000000ddddddd00000ddddddd00000ddddddd00000ddddddd0000000000000
ddddddddd00ddddddddd000ddddddddd000ddddddddd000ddddddddd000000000000000ddddddddd000ddddddddd000ddddddddd000ddddddddd000000000000
ddddddddd00ddddddddd000ddddddddd000ddddddddd000ddddddddd000000000000000ddddddddd000ddddddddd000ddddddddd000ddddddddd000000000000
ddddddddd00ddddddddd000ddddddddd000ddddddddd000ddddddddd000000000000000ddddddddd000ddddddddd000ddddddddd000ddddddddd000000000000
0ddddddd0000ddddddd00000ddddddd00000ddddddd00000ddddddd00000000000000000ddddddd00000ddddddd00000ddddddd00000ddddddd0000000000000
0ddddddd0000ddddddd00000ddddddd00000ddddddd00000ddddddd00000000000000000ddddddd00000ddddddd00000ddddddd00000ddddddd0000000000000
000ddd00000000ddd000000000ddd000000000ddd000000000ddd000000000000000000000ddd000000000ddd000000000ddd000000000ddd000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000007770000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000777777700000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000777777700000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000007777777770000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000007777777770000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000007777777770000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000777777700000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000777777700000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000007770000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000007777777000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000777777777770000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000007777777777777000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000077777777777777700000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000777777777777777770000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000007777777777777777777000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000007777777777777777777000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000077777777777777777777700000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000077777777777777777777700000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000077777777777777777777700000000000000000000000000000000000000000

__meta:cart_info_start__
cart_type: game
# Embed: 750 x 680
game_name: Broke Out
# Leave blank to use game-name
game_slug: 
jam_info:
  - jam_name: Spring Game Jam
    jam_number: 2023
    jam_url: null
    jam_theme: 'Chain Reaction'
tagline: Like Breakout, but broken
time_left: '0:0:0'
develop_time: ''
description: |
  Clear all the obstacles, and don't lose your ball. Simple!
  (If it seems like that will take too long, don't worry.
  Just wait for the chain reaction...)
  
controls:
  - inputs: [LEFT_ARROW_KEY, RIGHT_ARROW_KEY]
    desc: Move paddle
  - inputs: [X]
    desc: Play again
hints: ''
acknowledgements: ''
to_do: []
version: 0.1.0
img_alt: Colorful circles being broken by a ball
about_extra: ''
number_players: [1]
__meta:cart_info_end__


