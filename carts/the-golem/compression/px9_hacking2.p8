pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- px9 data compression v9
-- by zep & co.
--
-- changelog:
--
-- v9:
--  @pancelor
--  ★ redo bitstream order
--  234 tokens (but ~4% slower)
--
-- v8:
--  @pancelor
--  ★ smaller vlist initialization
--  241 tokens
--
-- v7:
--  smaller vlist_val by @felice
--  7b -> 254 tokens (fastest)
--  7a -> 247 tokens (smallest)
--
-- v6:
--  smaller vlist_val by @p01
--  -> 258 tokens
--
-- v5:
--  fixed bug found by @icegoat
--  262 tokens (the bug was caused by otherwise redundant code!)
--
-- v4:
--  @catatafish
--  ★ smaller decomp
--
--  @felice
--  ★ fix bit flush at end
--  ★ use 0.2.0 functionality
--  ★ even smaller decomp
--  ★ some code simpler/cleaner
--  ★ hey look, a changelog!
--
-- v3:
--  @felice
--  ★ smaller decomp
--
-- v2:
--  @zep
--  ★ original release
--
--[[

	features:
	★ 273 token decompress
	★ handles any bit size data
	★ no manual tuning required
	★ decent compression ratios


	██▒ how to use ▒██

	1. compress your data

		px9_comp(source_x, source_y,
			width, height,
			destination_memory_addr,
			read_function)
				
		e.g. to compress the whole
		spritesheet to the map:
		
		px9_comp(0,0,128,128,
			0x2000, sget)

	…………………………………
	2. decompress
	
		px9_decomp(dest_x, dest_y,
			source_memory_addr,
			read_function,
			write_function)

		e.g. to decompress from map
		memory space back to the
		screen:
		
		px9_decomp(0,0,0x2000,
			pget,pset)

		…………………………………

		(see example below)

		note: only the decompress
		code (tab 1) is needed in
		your release cart after
		storing compressed data.
		
]]

function _init()

	-- test: compress from
	-- spritesheet to map, and
	-- then decomp back to screen

	cls()
	print("compressing..",5)
	flip()

	w=128 h=128
	raw_size=(w*h+1)\2 -- bytes

	ctime=stat(1)

	-- compress spritesheet to map
	-- area (0x2000) and save cart

	clen = px9_comp(
		0,0,
		w,h,
		0x2000,
		sget)

	ctime=stat(1)-ctime

	--cstore() -- save to cart

	-- show compression stats
	print("                 "..(ctime/30).." seconds",0,0)
	print("")
	print("compressed spritesheet to map",6)
	ratio=tostr(clen/raw_size*100)
	print("bytes: "
		..clen.." / "..raw_size
		.." ("..sub(ratio,1,4).."%)"
		,12)
	print("")
	print("press ❎ to decompress",14)

	memcpy(0x7000,0x2000,0x1000)

	-- wait for user
	repeat until (btn(❎) or true)

	print("")
	print("decompressing..",5)
	flip()

	-- save stats screen
	local cx,cy=cursor()
	local sdata={}
	for a=0x6000,0x7ffc do
		sdata[a]=peek4(a)
	end

	dtime=stat(1)

	-- decompress data from map
	-- (0x2000) to screen

	px9_decomp(0,0,0x2000,pget,pset)

	dtime=stat(1)-dtime

	-- wait for user
	repeat until (btn(❎) or true)

	-- restore stats screen
	for a,v in pairs(sdata) do
		poke4(a,v)
	end

	-- add decompression stats
	print("                 "..(dtime/30).." seconds",cx,cy-6,5)
	print("")

end

-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 8 and
	-- 15 bits long with the next
	-- bits in these positions:
	--   0b0000.12345678...
	-- (1 is the next bit in the
	--   stream, 2 is the next bit
	--   after that, etc.
	--  0 is a literal zero)
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<8 then
			-- cache next 8 bits
			cache_bits+=8
			cache+=@src>>cache_bits
			src+=1
		end

		-- shift requested bits up
		-- into the integer slots
		cache<<=bits
		local val=cache&0xffff
		-- remove the integer bits
		cache^^=val
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)
		end
	end
end

-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function
	px9_comp(x0,y0,w,h,dest,vget)
	local mytable = {}
	local dest0=dest
	local bit=1
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	local cache,cache_bits=0,0
	function putbit(bval)
	 cache=cache<<1|bval
	 cache_bits+=1
		if cache_bits==8 then
			mytable[dest] = cache
			poke(dest,cache)
			dest+=1
			cache,cache_bits=0,0
		end
	end

	function putval(val, bits)
		for i=bits-1,0,-1 do
			putbit(val>>i&1)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if cache_bits>0 then
		-- flush
		mytable[dest] = cache<<8-cache_bits
		poke(dest,cache<<8-cache_bits)
		dest+=1
	end

	local str = ''
	for i = dest0, dest do
		-- str ..= (chr(mytable[i]))
		str ..= chr(peek(i))
	end
	printh('compressed to ' .. #str .. ', ' .. #str/8192)
	str = escape_binary_str(str)
	print('' .. dest-dest0 .. ', ' .. #str) -- .. dest0 .. ', ' .. dest .. ', ' .. str)
	printh(str, 'output.bin')
	printh(str, '@clip')
	return dest-dest0
end

function byte_to_hex(byte)
	local hi = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte\16]
	local lo = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte%16]
	return '\\x' .. hi .. lo
end

function escape_binary_str(s)
 local out=""
 for i=1,#s do
  local c  = sub(s,i,i)
  local nc = ord(s,i+1)
  local pr = (nc and nc>=48 and nc<=57) and "00" or ""
  local v=c
  if(c=="\"") v="\\\""
  if(c=="\\") v="\\\\"
  if(ord(c)==0) v="\\"..pr.."0"
  if(ord(c)==10) v="\\n"
  if(ord(c)==13) v="\\r"
  if(ord(c)==9) v="\\t"
  	-- v = byte_to_hex(ord(c))
  out..= v
 end
 return out
end
-- 40% - 50%
-- 14 images per cart...
-- dw = 8 images per cart...

__gfx__
333333333333333333133331333133133131331313130303001010100000000000000010000000000000101111000000111111111111d111d111011d101d1010
313131c131c1313131331313313313313133130330333030301001011010000000101001000000000010111010000000111111c1111111d1dc11001c01111111
33333333c1333c1c33c13c331c1331313313133033030333030101001001000000000100000000000100dc11100110000111111dc11111111dd11011111c1111
313131c1331313313133313331331333131331331330330303010101010010000010001000000000001011dd10001100111111c1dc110000dc1d111001d11111
3333331333c13333c33c13c13333c13133130303030330303030000000100000000010010000000000101011c10001011100111d1c1d110011dc011100111111
31303333c1331313131331331c131331303330333033033030030300100000000000010000000000010111011110000011000111cddcd110111111c11011111d
333331c133133133c3d3d3d3333331333313133033033033033000110101000001010010000000000010c211110111110011001111c1dc111111011d11111111
d30333331333133d35333c3d3d3d3c1313313313313303033030301010101000000010100000000000011cd11001111101111111111dc111d111011111c11011
3330353d3d333133d3dd3533d33133313313133133033330303001001000000000100101000000001010011d110011111100011111111d11dc110011111d1111
3133333333d1333d3d33d3d3d3d3d3d33d333131313103033030301010110100001001010000100000011011c11000011110001c11111111d1dc000110d11111
3303353d3d33313d3dbd3dbd3d3d3d313313131313333033033030010100100000100101000000000100d11101111000011110111c111001cdc11111001c111d
d33303d3d3d3333dbdddbdddbddbd3d3d3d33313313033033030301000100000000100100000000000011c1100001110011111111111110011dd11110011111d
330333d33d33135ddbdb65bddbd53d3d333d31313133133033030301101010000100010100000000010011d111001110111111c111111100111111c111110011
5333533ddbd3333db6dddb6dbddb63d3d3d33333131330330330300010010010001001000000000000100011111000111110011dc11111111111001d11110011
353035dbdd335356dbdb6ddbfdb65dbd3d353d1331313303303030300100100000100110000000001001111111101000111100111d111000d111001111dc1001
d33333dbdbd3335bd6dadb6dbdddb65dbd5d333d33131330303303030010000000100010000000000011d11110011100011111111c1c110011110011111d1110
33035bddd65353d6bdbd6db6dab6ddbddbdbd53313133133033030301001010000101010000000000101cdd110001111011111111111d11011110010001c1111
d3303dbdbdb5333d6d6bd6db6dddb6ddddbd53d35331313033033030030010000000010000000000001001cd11100011110001cd1111111111000010011111c2
533334dad6d335d6b6d6b6bfddb6ddbdbdd3d3533531331330303030300000100111011010000100010100111111000011110111cd111001dc1100110011101d
d3503dbdbdbd33db656b6d6db66b6b6ddbddbdd3d31353303333030301010000001010100000000000111101111c11000111101111cd110011d1001000111001
53333d6b66d353d6db6dab6d6bd6dddbddbddb5353d331331303330303030030101001100000000000111d1100111110010110111111d1111111101001111000
db035bd65b6335b6bfdb6d6b66db6b6ddb65ad3d3d313531330303303000300100100101001000001010011c10001111110000dc111111111111001110111011
d3335dab665b53d6d666d6d6db66d6bd6dbdbdbd353d3531313330330330010300010010000000001d1111111d11001d111100111c111001d111001110110101
d530bdd6b6d355b6bab6b6b666b6b6ddb6d6dd5d3d35335353303303030303000010011000000000111c1001111110011c1111111111100011c1001101d10001
b5335b6d6b635b6d6d6d666b6d6d656b6dbdb6bd3d3d53c3313303303030300300001010010000000111dd1100111100110111111111d11011110010001c1000
d53156b6d6bdb5dac6b66b66db6b6b6d6bfda3dbd3db53dd3d133033330313000100010100000010011111c111000011010011cdc11111111100001100111110
db533ad6bfd55bd6b666b66b666666d6b6db6ddddbd53cc3c13533103031003030100000000000000101011dc110000111010111d1110000d1100011011111c1
d5335d6b66bdbdd66db666d66b6db6b6d6b6db6bddbddc5cdcd31333131330300001001000000000001000011dd1100001111011dc1c11001111001001110011
db535b666bf3ddb6b666b66b6666a6d6b66dadbddbd3cdc5c1cdc13131303030330010000000001001010001111c111001111011111d11000111001000d11011
db53566b66dbdd6666666b66ab6b6b66dab6b6d6bf3ddcdcdcd3dc1331303030030000100010000000100001101111c1110010dc1111c1111100001100111100
d5353ad6ab6ddb56b6b6666b666666b6b66d6b65d3dcd3cdddcdc1c531330303030300001000100001010001100011111110011c111111111110001100111111
db5356b6666b5566666b6bf66b6b66666db66db6b5cdcdddcdd3cd3c1313303300300300000000000010000110000011111001111d110000dc11001001111111
d535b666b6ddb5b6b666666b66666b6b666b6ad6536cdcd16cdc1c1dcd3133030300300001000000011000011000000011111111111c110011d11010001d1001
db5356b666bdb6666b6ab666666b6666b6a6b6bdbcddcdccd3c5c5d1c1c1303030300030000100000011000110000000111111c1111011101111001101110110
65b55666666bd5dbf66666b66b66ab666b6d6d63ddcdcdddcdcdc1cd3c1c133303030300000000100100000110001000110011ddc11101011110011110110111
db55b66b6b6ddb666b66b666666b666b666b6bd36cdcdc6cdc1c1dc1c1c1c131330300300300100000110001100001000100111d1d1110001d11001101110001
ddb5d666666bd5ab6666666bfb6666b76b66d6bcdcdcdddcdcd3cd3c1c13d3c13030300100000000011000011000000011100011c1c1d1001111001001d11001
6b4db6b6b66bdb6666b66bf66666b66666b6bf3dc6dd6cdcd3cddc1c1dc3c13d330303030010030000110001110010001100001111dc11110111001100111111
dddbd6f66665a366bf66a6666a66666b6a666d6bdcdc6dcdcddc1cddc31c1c1c10330300100300000101000110000000110000111111c1111110001000111111
6bd5bf666b6bddb6666666b66b66b666b66b6b6db5d6cdcd33cddc1c1c1c1c13330303030300000000100001000000001100011111110111c11100100111101d
6db566b6666bdd666ab6bf66666666bf6666bf666bcddcdc53dc1c1c3dc13dc103133030000100100111000010000000010000111111000011d1001000d11011
6bd5d666bf6db6bfb766666a6b66bf666b6b6db6d6d63ddcdcddcdc1c1c1c1331303d313303030030010000101000000111000111111000011c1101100111110
ddbdb66666b65bf666666a6b6666666b6a3cdc6db6c6db3dcdc1c1cd3c1c3c1303313c1303000000011000001000010011000011111100001111001100110111
6b6dd6bfbf6b65666bf6b66666a66bf66bcdcdc6d6d6b666ddcdc53c1dc1d1310313c13c11303001001000001000000001000011111100001110001111110001
d65bda66666dbdbf6f66666666b66666636cdcdcdc6b6d6d353c1cdc1c1c3313033d1c1133100500011000001000000011000011111100001110001101d11000
6db5d66666b65a66bf6a66a6bf666a6bdcdcd6cd6dc6d66bdd3dcd1c1c3dc131331c13c1c13310000010001001000000110000111111000001100010011d1111
6bd5b666bf6bdbd6f66b66666666b666b6cdcdddcdd6dd6dbddd3cdc3d3c13c031c1c13c13c1310001100000100001001100001c111100001111000100111111
6db566a666addd666bf666bf6a66666bdcddcdcd66c6cddb5c3dd13dc1c1311313331c11c113131100100000100000000100011111110000111100100011111d
6b4b6666666bdb6a6666a66666bf6abcdc6cdcdc6ddddcbd3d33c1313c1cdc133cdc13c131c11331110000001000000011000011111100001111000100111011
6dddb6a6bf6b6daca66666a666666636cddcdcbdcddccddcd33131dc13d1cdd3d131c13c131c1131311000001001111111111011111100001111000100110000
6bdb666666addb6666a66666bf6a6bcd6cdc6dcd6dcd6cd3cdd313ddd33133dcc1c1c1c1c1c1131c111100001100110011011111111100001110000100d11001
66b4da66a66b6b6a6666bf6a6666bd6cdc66dcdcdd6ddcdcdc5d33333d1303dd3cdd313131131311311110000000100011001011111100001111001000110001
6bd5b666666bdd666bf6f66666a6bcdc6dcd6cd6c6cd6dcdddcddd13133135331561c3c1c1c11c131c1010001100100011011111111100000110000100110001
6dbd66a66b66dba66f66a666a66bc66cd36dcdc6dddcddddcddc3331313dd31dc1c1c11c131c1131111101110000100011001011111100001111000000111000
6d5bd6666f6b65666a6666b666bd6c6dd16d6cd3c6cdcdc6c3c3d3dc131d3d3131313c13c131131c13100111110010001100001c111100001110001001110001
6ba56666a66b6b6a66666a666666ddcdcdc6dccd66dcdcdddddccd13533313d3d3d131c11c1c1131111103c11100111011001011111100001111000100111000
6dbdd6a666addb6666a6666a6a666b6cdd6c6ddcdcd6cdcdccdddcd31c513111c113c11c11c1131c1c10111c1c11111111111111111110001111001100110011
6bddbf66666b6da66666bf6666bc66ddddcd6c6d666cddcdddcc313dc53c131303111313c11311c1111013111111100111111111111100001110001001111010
665b666a666b6b66a666f66666666d63ddd666cdcdddcddccdddc51131ddd3131133dc1113c11113110031c1c11c110011000011111100001111001000111000
66b46a666a6ddad666a66a6b666a66cdc5dcd6d666cd6cdddccd3133131331d313111131111c1313111031311c11311101000011111100001110000100110001
6bd36666666b6b6666666666c6c66bf6dc661cdc6dcdcdc6cdd333131313131353133113131311c11101c1c1c11c113111000011111100001111000001111000
665bda666a66dd66a66a66a3dcdd666bdddc131dc6dcecdcddcd131313131131131513d1d1c1131311011c111c11c1c11c10001c111000001110001100110001
6b4d666a666b6b66666666665d66c666b66d3133dc6d6cddcddcdc131313130303031313131111111003c11c111c111111110011111100001111000000111000
66b5bf66666dbfbf66a666666666666c66cd31c11cd66dc6cd313ddc53131130303030111133113101311313c1111c13c1311011111000001110001001110001
6b4d66f6f6a6dbf6f6666c66a666a6bfdc6c311cdd3cd6d6cd1131c53cdd313130303031311d13131003c1c111c1311111310011111010100110000100110000
66bdbf6a666b66666a66bdc66bc6c666b6d6dc31cd113cdd6d31313dd131cdd3dd3d3d131311131131101c11c11c11c11c110011111110101d11001101111001
6d5bf6666a66dbfa6666666666dd66666d6cd6dd3c1c111cdcdc11113dc113113131d3d111101131131001c11c11c111c111001c111110001111001100d11001
6b656a66666b6d6666a66666666666c6c6d63c6cdd13d3111dddcd3c11d3131313131113113110313110001131c111c11110011c111100001110001000110001
6635666a666dbab6666bf6a66666b66adc6d6ddd6cd3cdc331c3dcd5cd3dd31131d311103013311131310011111313113110011c1c1101001111000101111001
6b4b6a6666a6dd66a66f66666b666c6c666cdcdc666dcd1dcd1dd3d3ddc3cdd3531130301030031113131031111c1c11c11001c211c111001110001000110001
6a3db666666b6b6666a666ab66666666d66dddcddc36dcdcd3cdcdcd31d1531cdcd3111303000013c1151011101111c1110111c1c1d1c1001d10001100d10000
6dbd66f6a66b6db66666bf66c6666a66c66c633d3d11dd31dd13d131313dcddd3d13d313110303011131311110111111c1001dc1d1c11c111111001000110001
6bdd6a6666adb6dcc6c6f666f66c66b66dc66dcdcd3c1c6c1cddcd3dcdcd3d31c1cd1d3d133100001311111110111111110111cd1c1c11111111001101111000
665bd666a66b6566666c6666666ac666b633d6dddc1131ddd313131d13d1d3c5d313131131153101111313110011100011101c1c11c11c1c1d10001111110001
6db466a6666dbd6666a6c6c66a6c666c6313c3c6ddc6c6cdcdc13dcdc113111cdc51d1cd1c1113100111d11110110000110011c1c11c11111111001115d10001
6bdbd666bf6b66c666666666c66666666cdcddd6c66666dddddcd1113dc1cd151131311111d311313111131c01111000011131c1c1c1c1c11111101101110001
d6556a6666adc666a666a6666c6d6c66d6ddcdcddcdcddcdcd6dcd31111313d313dc1d11111111311103111110110000111011cd1d1c1c1111c1c11101d11001
6b5b66bf666cd6d666bf666a6666c6c666666ddc666dcddd3d3ddcdcdcdddc1cd1c53c110011311c111111c11c1110001100011c1c1111c1111c11c101d11001
dad5bf66a6cdd66b66f66666666a666d3cc6cdcd6c6ddc331131cddd3dc1d3d13dc11d33103001113131d11d3dc1100001000011d1c1c1111c1d111c11d15101
6bdb6666666dcd666666a6bf6a6666c63dd3dc6dcddc6ddc6cdcd31cd3dcddcddc1511c1311001131d1313111cdc110011100011111c111012c1c1d1cdd10111
d635d6a66b6356bf6a6b666666b66666cdc3d66d633d3d3d1ddddcddd31d313d3d13131d11110011313d1111dcddcd10110001111111c110c11d11c111c11051
6b55b66b666db66acb66666a66666b6666ddcd6c61c5111131113ddc5cd3dc1cdc1d1d13d110001111d1c1c111cd1cd111100011011111011cd1c1dc1c211011
ddb566666c6b56b666d666666666a66dcd6c6dcd3d6c13c11c11113dd11c11d1dd31c1c1131103011131d111d11cddcdc101011110100001c1d111c11c2d1111
6b4db6b6cd65b666b66c666c6666c66633313313c6dd6c1313131111cdd1ddcdc1113ddcd1110011011c1c111111cddcdc010011101100011c1c11c1c1dc1c11
dd35dac1d6655d6c66666c66666c766663c11c1c6dcdcd6cdcd113111131311d3d3d1cdcdc131011001111c1d1111dc1dcd111111111000111c1c1d1d11d1c1c
d6b5b6d1d66b5b6dc6ab66b6c6666c6c6d3c11c6dddd31d6d6cdc1cd3d1cdcdcdc11cdd6cdd1110101111511110111dcddcdd11dc1111111111111c111cd1c1d
db55d6dc6665b5cddc66666c6c6c6666c66dcd6dcdc11cdcd16ddcddcdcd5d3d1d11dcdcddc1d3110011111311101111dcdc111111111111c11111c111ddc1dd
ddb5b6666c6b45d666c6c666666666c66dcdd66cd6d3cd13d11cddd3115dcdcdc13d1ddddcd1d13110111111111111011ddd111111111111d11111d111dc1d1c
db45db6b6adb5b6666d66c666666b66dcdd6666d66c66666cd113dcddc1111d1d3d1cdc6cdd1d1cc1111111111011101111c1111111111d11c11111c1c1dd1c1
dd33466666bd6ddb666b666b6cd6666663cdc63cd1ddd131dcd311131dcd3dcd3d1cdd6dddc111ddd131111111111111111d11111111110111d111c111d1c11d
db43b6ab66d5dc666b66666ddcddd6666ddddcdd3c6d311c1d6c11111111cdd3d111cdcdcdd1c1cd1111111cdd1110111111110011111101cdcd1111111c1cdd
dd354b666bd3cd666666b66bd6cdc6c66c66cd6cd6d1c111cdd66cd3c1311dcd1c116dddddc1d1dc1111d11dccd111111111110111111011d11c1111111dddcd
bd5bd66666dddcdc6b666666d666666c663ddcdd76c111cdddc1ddcdd6cdd3dcd1d1c6dcddd1d1dc1111111cd6cdc11d1c1011001111100111d11dc111d1cddd
db5536b6b6b51dddc666b5cc6cd6c666c66c3ddc6d31c53dc511111131d1cdd1d13d1dd6dcd1c1dd11d111dc6cdddcd1d11001101111101111cdc11111111dcd
d5355666666353d6dcdc531dd1dc6cdd66c76dd66c66dcdd113131111111dc1cdc1c11dcddc121cdc111c1ddcddc6dcd1c01011111cd10111d11111111dc1d1d
5b53bdb6b6b535db66dd6dddc1d6c11cd6d6c66c5d31c51c3d111131113d111d1ddd11111dd1c1dc11111111dcd6cddcdc1001111111111d111111111d1dcdcd
d5355ad6ad6353d66b66cdc6d6c6ddd6dcdd6c6c313111cddcdc6cdcdcd1c5dc53d3dcd1111d11dd111dc11012cddcddcd111001111dd11111111dcd11c1dc2d
5b535db6b6d355b6d66b6c66d66dc6666dc1d6d6cdc1136d1ddd1dddd1cd1311d111c11d1111d1cd11111c11001dc6dcdd101111d111c111111111111c1dc211
d530b6d6db630556b6d651ddc1cdddd6d666dcdd6cdc1cdd11c1cdc1cddcddc111c51113dc11111c111c1d1010001ddddc00dc2111dd1d100011001d1111d111
353555b6d6b53b56ab6b6dddddd111ddc11d6d6cddddc613cd1ddcddddd5315d311d1d1c11d1111111111d110110001cdd10ddcd1111dc111010001111dc1111
553036db6bd505bdd6d6db6ddcdd6d6ddcddc6d6d6c6dd11cddcdd13111111cddd11c1d11511c111111dd11110110000dd00dcd6c1111111d111101d111d111d
53135bddadd353d6b6b6d6b6d6dcd6cdddd6ddcdd6dd6c03111111111111111dc1c15d31d1c111dd11111110110000100100dc6ddcdc01111111111c11dcdd1d
535034dbdbd305bddb65b6db6b6ddc6d6d6cd6d6cddcd130313131111111311d1ddcdcddc15d111cd11d1111001100000000dcdcddcd1d11111d10d11cdddc1d
53035bddddb5355b6d56db65ddbdbddcdcdddcddd6d61303003d11311111cdcd31111111111311d111c111110010001100101ddcdcd6c210dcd110dc1dddc21d
130313dcbd53033ddcd3d3d3cd3dc53d3dccdcccccc1c55131dc1d66cdc6dd15110001001dcd1c11d11dc110100000010011001dddcdd11dcdd110dddcdddc1d
15003dd3d3d3053dddb6b6b6bdb6ddbdd3dcddddddcd5dc1056d1dcdd510131110003111010111d1311d16cd0000000000100001cdddc11ddcd1101cddc1dddd
13035d1ddd35035dbddddddddddd3dcd3dddcddc6dd113d13dc1cddc5003110011015dcd11101111d1dd1c6cdd00000100011000d116d1dc1dd110011dddc1cd
15001d33dcd0353dcdcdcd3dc1cdc1d1c1c1dcdddcd3c11316dcddcdcd001d0111001101dcd1d111d11c1d66c6cd000000001110c111d11ddcdc11111cdd111d
11031cd1c5d103ddddd3ddcd1dd3dc1dd1d11dcddd1d1d10c6d6cddddc631110110030001dd13dcd1c1dddc6dc6dcd1000001011d1001c11ddd6d1dcd1dc11dd
1300111d535301133d3533533d31d1313313d111c1313133dcdc1cdddddcdc00100030301d101101d1d1dc6c6ddcd6cd0000010111111ddcddc6cddd1dcdd1cd
110113131310313131313131311313130313130311301105cdc1dcdccdcdcd310103030001100100111156c6d6c6dd6c20001001111d11dddddddcdc11dd1d1d
1100131d13d101151313513131313113030310303103033dcdd3cdcddcdddcdd31000000110011000011ddd6c6dd6c6d1000001d111111cd11cdddddc1dd11dd
110011313d11031c11dc1d1d03111313033033030330301cdc3dddddddcddddcd6c10300010001011ddd1d112c6cd66c1011001dc1011211111dc11c2dc6d11d
11101c1c1c1101031311313131313103303030311003031dcdcdddddcdddcdddcddc003000001101dc1cd11001dddc6611d5111d11011d1111d1dd1d1cecd111
1100111d11111131d13113113113130310000013010000011dcdccdddccddcdcdcddd10000000101dd1dc500111d1dd611c21ddcdd111cd11d1dc11111d1d1c2
110011c11111011131131d1311113111310010030000011311113dccddc1cdcddcccc31300001101dc6101101dc1111dc2dcd1ddcd111d1011cd1111111dc112
11011c11c1110111c1c1d1c1131d1131110000111000001110111cddcddcdcdcdddddd003000010066cd00101ddd100111dd111cd1111111112d1d1111cdd111
1101111c1d111111d1d1c111c11131111100101110010011111111dddcdddd6dcdcdcd0005d11100c66d00151dc11011001d11dddc1111d1dc11111111ddc111
10101111111000111111111101311113110000101000003003111111cedd6ddcd6d6d1030c6cd101dcdcd1dd1d1d101111d111dcddd11011d1d1111001dc2dcd
1000111110010001110030303003030001000003000010030003010111cdcddddcddc0005dcdddd1d11dd111111111ddddc1101dcdc211111d11d1001dd61d1d
1100111c1110010110300100010010030100100000100000000000300001dccddcdc10303cd3cccc6d111dd1111111dcdcdd11ddd11111011111111101cdc1dd
11101c111c1010113113113131311300300000100000000103003000030001dcdcdd00056cdcdddc6cd101100d11111dddcdcd1c11d111011d1c110111dd1ddd
110011c1c11100111c1d111111111111010100110100010000100101000000155cd10035c6dcdc6d6ddc2100111111dcdddddcddd1dc00116cd11111d1111dcd
1101111c1111011111111c1111111111110000101000001101010100300301001111005ddc6d6ddd6c6dcd000dcd111ddcdc2dddc1dd111166c001d1111111d1
1010111111110011c1c1111c11111111110010111001011010110110101010010001003dcdcdcccdcdcdcdc10166d111dd6dc1dc2c11d11dc6d121d1111111d1
1000111111000001111111111111c1111100001100000011111111111101111010110131c6dc1d6d6dcdcddcd1dc61ddd1cddcddddddcddddcd111cdc11111cd
110011c11110010000010110101101101101011110010011011111101110111101110111ddcdcdcc6dcddcddc111ddcd1dcddd66cdcdddc1dd111dd111ddd1dd
1100111c1c110011110010000100000001000000000001110111111111111111101101111c6d6d6d6dd6dcddd1dd1ddd1cdd1dc6ddddddd111d1d111111dcddd
__label__

ccccccccccccccccccccccccccc11111111111111ccccccccccccc111111111111111111ccccccccc1111111cccc111111111111111111111111111111111111
ccccccccccccccccccc11cccccccc1111111111111111c1111111111111c111cc11ccc111ccccccccc1111111cccc11111111111111111111111111111111111
ccccccccccccccccccc111cc11cccc11cccc1111111111111111111111ccc11cc111ccc11ccccccccccc1111111ccc1111111111111111111111111111111111
cccccccccccccccccccc11cc111ccccc11111ccc11111111111111111ccccccccc11cccccccccccc11cccc1111111cc111111111111111111111111111111111
cccccccccccccccccccccc1cc11cccccc1cccc111111111111111111cccccccccccc11cccccccccc111cc111111111cc11111111111111111111111111111111
cccccccccccccccccccccc11111ccccccccc111111111111111111cccccccccccccc111cccccccccc11c11111111111cc1111111111111111111111111111111
ccccccccccccccccccccccc11111111111111111ccccc11111ccccccccccccccccccc11cccccccccccc11cccc111111111111111111111111111111111111111
ccccccccccccccccccccc11cccccc111111111cc11cccccccccccccccccccccccccccccccccccccccc11cccccc11111111111111111111111111111111111111
cccccccccccccccccccc111cccc11ccccccccc11111cccccccccccccccccccccccccccccccccccccc111ccccccc1111111111111111111111111111111111111
cccccccccccccccccccc11cccc111cccccccc111c11cccccccccccccccccccccccccccccccccccccc11ccccccccc111111111111111111111111111111111111
cccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11ccccccccccc1111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc11cccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc1111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccc1111ccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccc111cc11c1111c111cccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc11cccc11cccc111ccccc11cccccccccc1111111111111111111111111111
ccccccccccccfffccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccccc11111ccc11111111ccccccccc111111111111111111111111111
ccccccccccffff77fccccccccccccccccccccccccccccccccccccccccccccccccc1cc11cccccc1cccc1111111111111111111111111111111111111111111111
cccccccccfff77777fcccccccccccccccccccccccccccccccccccccccccccccccc11111ccccccccc1111111cccc1111111111111111111111111111111111111
cccccccffff777777fccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111ccccccccc11111111111111111111111111111111111
ccccccffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111cc11ccccccccc111111111111111111111111111111111
cccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11111cccccccccc1111111111111111111111111111111
ccccffff7777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccc111cccccccc111c11ccccccccccccc1111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccc111111111111111111111111111
ccccffff77777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccfff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccfffffff77777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11111111111111111111111111
ccccccfffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccc11111111111111111111111111
77777cffffffff777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777fffffffffffff7777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c11111111111111111111111111
77777777ffffffff7fff77ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111111
77777777ffffff7777fffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c111111111111111111111111111
777777777777777777ffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111c111111111111111111111111111
777777777777777777fffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777777777777777fffcccf77777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
777777777777777777ffffff777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
7777777777777777777fffff7777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
77777777777777777777fffff77777777777fffffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
7777777777777777777777fffffff77777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
777777777777777777777777ffffff77777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffff77777777777777777777fffff77777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
ffffff7777777777777777777fffffff777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffffff777777777777777777fffffffffffffff7fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc191111111111111111111111111
ffffffff77777777777777777cccccfffcccccccccccccccccccccccccccccccccccccccccccccccccccc9ccccccccccccccc199111111111111111111111111
fffffffff7777777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9f9cccccccccccccc9ff911111111111111111111111
ffffffffff77777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccff99ccccccccccccc9ff911111111111111111111111
fffffffffff77777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc999999999999999999999911111111111111111111111
fffffffffffffffff7777cccccccccccccccccccffffccccccccccccccccccccccccccccccccccccccc999999999999999999999991111111111111111111111
fffffffffffffff7f77777cccccccccccccffff77777ffcccccccccccccccccccccccccccccccccccc9999999999999999999999991111111111111111111111
ffffffffffffffff77777777ccccccccccffff77777777fcccccccccccccccccccccccccccccccccc99999999999999999999999999111111111111111111111
fffffffffffffffff77777777cccccccfffffff777777777cccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
fffffffffffffffffffff7777ffffffffffffffff7777777fccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff999990099999999999009999999911111111111111111111
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9999990099999999999009999999911111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9999999999999999999999999999911111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999991111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc99999999999999999999999999999991111111111111111111
d6666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999999111111111111111111
df66666666666666666666666666666666666666dd66666666666666666666666666666666666999999999944444444449999999999999991111111111111111
ddff6666666666666666666666666666666666ddddf6666666666666666666666666666666666999999999999999999999999999999999999111111111111111
dddf666666666666666666666666666666666ddddddf666666666666666666666666666666669999999999999999999999999999999999999111111111111111
ddfff6666666666666ddd66666666666666ddddddddff66666666666666666666666666666699999999999999999999999999999999999999911111111111111
ddddfd66666666666ddddf666666666666ddddddddffff66666666666666666666666666669999999999ffffffffffffffffff99999999999911111111111111
dddddddd666666ddddddddf666666666dddddddddddffdd77777777777777777777777777799999999ffffffffffffffffffffff999999999911111111111111
dddddddddddddddddddddddfd66666ddddddddddddddddd6666666666666666666666666699999999ffffffffffffffffffffffff99999999991111111111111
dddddddfdddddddddddddddddddddddddddddddddddddddd77777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
dddddddffdddddddddddddddddddddddddddddddddddddddd7777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddd77dd7777777777777777777999999ffffffffffffffffffffffffff9999999911111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddd777777777777777777779999ffffffffffffffffffffffffff9999991111111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd7777717177777777779999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd717771777777777777999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddd9dddddddddddddddddd71717777777377777999fffffffffffffffffffffffff99999911111111111111111
dddddddddddddddddddddddddddddddddddddddd979ddddddddddddddd1dd1711771777377711999fffffffffffffffff5fffffff99999911111111111111111
ddddddddddddddddddddddddddddddddddedddddd9dddd1ddddddddddd1dd111117111773711199993fff3ffffffffff5fffffff999999111111111111111111
ddddddddddddddddddddddddddddddddde7edddddd3dddd1dddd1dddd1d3d131111111173111109993fff3ffffff5555fffffff9993999111111333111133311
ddddddddddddddddddddddddddddddddddeddddddd3d33d11dddd1d111d3313131111111313300999939933f3fff67ddfff3f999993333333313333333333331
dddddddddddddddddddddddddddddddddd3bdddddd333dddd1d3d1dd11113331311313111337700999393333333367dd39933933333333333311333333333333
ddddddddddddddddddddddddddddddddddbdddbddd3dddddd113301d11313331333333138877773333333333333367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbdbdddddd33dddd33010330333313333113333888777777888888888883367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbbbddddbd33ddddd30133b3333311333133333887733337788888998888867dd23333333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbdbddb33b33333d33bb333333333333338888877333377888893a9888867dd22888333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbbbbbb33b33bbbd33bb3333333333333888888873333722889999a9888555528838333333333333333333333333333
dddddddddddddddddddddbdddbdddbbbbdbbbbbbbbb33bbbbbbbbbb3333333333888888888888888888999999888888888883333333333333333333333333333
ddddddddaddddddddddddbbddbbdbbbbbbbbbbbbbbb3bbbbbbbbbbb3333333383888888888888888888899992288888888833333333333333333333333333333
ddddddda7addddddddddddbdbbbdbbbbebbbbbbbbbbbbbbbbbbbbbbbb333388888888888888888888888899228888888388333333333333333333333b3333333
ddddddddaddddddddddbbdbbbbbbbbbe7ebbbbbbbbbbbbbbbbbbbbbbbbb3888888888888888888888888888888888883883333333333333333333333b3333333
dddbdddd3ddddddbd333bdbbbbbbbbbbe3bbbbbbbbbbbbbbbbbbbbbbbbb888bb88888888888888888888888888888883833b3333333b3333b3333333b3333333
dddbdddbbbddddbbd3bbbdbbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbb88888b8888888b88888888888888b888888b83333b33bb333b3333b3333333bbb3b333
dddbbdbbbddddbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb8888888888888bb8888b8bbb3b3b33bb333b33333b33b333bbbb3333
dddbbddb3bdbdbddbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb888bbb8bbb888b88888b88bbbbbbbbbb333bbb333b33b33bbbbb3333
bbdbbbdb3bdbb33dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbb88888b8bbbbbbbbbbb3b3bbbbbbb33bb3bbbbb3333
bbbbbbbb3b3bbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbbbbbbbbbbbbbbbbbbbbbb3bbbb3b333b3333
bbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbb3bbb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b3b3bb3bb3333bb333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b3b3bb3bb333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333b3333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3b3bbb3333bbb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb33333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3b3333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33333333333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333333b333bb3333333
bbbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333b33b333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b33b333333333
bbbbabbbbbb3bbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bb3b33b333333333
bbba7abbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33333bb33
bbbba3bbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33b33bbb3
b3333333333bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b3bbbb
b3bb3bb3bb3bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbb
b33b3bb3bb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3b33b33b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbb
b3bb3bb3b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

__gff__
0081030301811303030301010000010003030101010103030101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
fffffff0ffff0ffd89e32fc19aa67c51f47fc01ffcc05f7c3c8cff11bf818b9b851f420042b8c21112fee70148c0f8f821e008c20b0a84ff733842c042f8295c940f8c62f83f23e01906fe092f3811f00dff6fc641c03fe046f8427887ff73183f50caf8851bc3f87ff12338f818ffb342f9df13065ec2ff8a7084ff3fc0022e
12f03fe3e37fce013ef0bfe6ff2ff0ff57f8ffd360e003ff7f3a20bce1ff1f87833ff8ffc760fcc1ffbf0eff7f1f08c0cdff82ffbf03168484ff7f0bce4258085ff8ff8f0148180290e10bff3309ffd3702402168431aef07f927593ff2732788681ff215f0207ff5719070165fc9f780438c2ff344c7e201cfcdf643ce07fca
c107c1c7ff4ac617fec782977081ff8f8c13fc6f255c24e024fc2fc3ff990ffcc5ffdfe4ff007ee7ff8f12fe1789ffff6f08c0ffff178430feff7ea83c82ffffcd8df0ffafc31fe0ffdf08fe47899ff8ff3f89ff83952b9c99ff3f13fe47f2519af8ff3730e17f22e40a02feffd2f03b7f3090c4ffff41f89d4b4e59e2ffff10
fe9784ffff44f81f72642be4ff6f70f0ff4b207cfcff6ffe08ffffc4fe871c5c25f9ffd3e18fc2ffdf90ff6558f82095ffbf4c180f1bfeff3168380bff7f8df25bf82bfcffbdf02ff8ffafe1672efeff43ea7f127e92121ef93fa6fe59f8972bc98ffcaf63f883f12b5ff843feffc3f0bf4df2caff5f88fe0f79e59025fe92f1
ff17c2ff6963a91f648941fe47f6bfe497851a3933e1e37f633f871ff9273c591e3bc233c9ffc4fea7fcc498fd012ef9ff83e1e27fc0ffc881173ce1ff8fcae1f8ffd9ff5f73fcff3cffffc9fe17e137fbffff865cf9ffc7e1afede8ffca85ff8fe3f49dfc007eca35f2bfb125f9ff2be12ffbdf4827f99fd8ffba8fe4070b7f
8027c9ffc2fe57e11fccf2b22cb75c24c9ffc04efb8bbf198c1c5c593e7901d7ff07fcc7ff843f6a567ef2fcedb8c2af7ce1bff00b3fdbff24fcccff22fcbf72f5ffbff1bf03c05f791cfc6f1cff7f83f29790ff91fcff1bd03e38f9ffcf8d90c299f8fff07fcffc744402474eff173b12fff3087ed90c32421c83849ff2faff
17b9355f9bf885091c5442963709e7c66187fd7f930b5d5ed9350bc391385dc3f26c9c520e494e1f6184ff4f729f40220d04b2c44190cbd67110b2efb93a721096b8c3ff66d70f1eb19a6382a06982157ce8210924d22542867be2e5ff931f2493e8f1894d481cf4e08f3f8ec439f99ff0bfdc18310cdd6e2091c58365e569ea
95f1ff3f2258788e438207cd6152c006ea43f4c82ff97f87030788d0c31124f9411f4ef80707f63591ff2faf9c96f0931cfb83ee975f58f201d9fbc70f512bbff363c242001e0b0d07a75d76f2f9e30abf73e51f3f2432fc232fd7c25ff9c5f6cf7cf27fe049863790d09c4ef983097e4c62e109f831f1479e7f5e802b825f11
f9594e0cff0712e678466d9cfbe1cadf810fff0f88c41316fe4c6018fe083fe70fe34afc118e400ef0138667482a18c6ff499e05841fc0020c7f6c08214308f922c0c2ff949384302b022e063eca41c27158e2ffca4f213cdc618c845b2e09ffff28fc4a00c20f24fcff557280f00fff7f120ce0ffbf0f06e00affff39fc42f9
ffc724349cfcffe9d0808bff3f5c1046f8ffeb0316feff3f8087ffbfcecbff3f0f77f82b8fff3f1bfe8c0fff7f34fc9c7fbeffbf19be081e967f1c9e66feff6148f82909ca92e0ff7f7281ee49cec4ffdf0d0bece408ffff7430044110f0ff7f2938863ff8ffd70f20e0ff6f872308ff7f9d868fffffceffff2f000000000000
