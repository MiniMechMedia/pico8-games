pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- px9 data compression v9
-- by zep & co.
--
-- changelog:
--
-- v9:
--  @pancelor
--  ★ redo bitstream order
--  234 tokens (but ~4% slower)
--
-- v8:
--  @pancelor
--  ★ smaller vlist initialization
--  241 tokens
--
-- v7:
--  smaller vlist_val by @felice
--  7b -> 254 tokens (fastest)
--  7a -> 247 tokens (smallest)
--
-- v6:
--  smaller vlist_val by @p01
--  -> 258 tokens
--
-- v5:
--  fixed bug found by @icegoat
--  262 tokens (the bug was caused by otherwise redundant code!)
--
-- v4:
--  @catatafish
--  ★ smaller decomp
--
--  @felice
--  ★ fix bit flush at end
--  ★ use 0.2.0 functionality
--  ★ even smaller decomp
--  ★ some code simpler/cleaner
--  ★ hey look, a changelog!
--
-- v3:
--  @felice
--  ★ smaller decomp
--
-- v2:
--  @zep
--  ★ original release
--
--[[

	features:
	★ 273 token decompress
	★ handles any bit size data
	★ no manual tuning required
	★ decent compression ratios


	██▒ how to use ▒██

	1. compress your data

		px9_comp(source_x, source_y,
			width, height,
			destination_memory_addr,
			read_function)
				
		e.g. to compress the whole
		spritesheet to the map:
		
		px9_comp(0,0,128,128,
			0x2000, sget)

	…………………………………
	2. decompress
	
		px9_decomp(dest_x, dest_y,
			source_memory_addr,
			read_function,
			write_function)

		e.g. to decompress from map
		memory space back to the
		screen:
		
		px9_decomp(0,0,0x2000,
			pget,pset)

		…………………………………

		(see example below)

		note: only the decompress
		code (tab 1) is needed in
		your release cart after
		storing compressed data.
		
]]

function _init()

	-- test: compress from
	-- spritesheet to map, and
	-- then decomp back to screen

	cls()
	print("compressing..",5)
	flip()

	w=128 h=128
	raw_size=(w*h+1)\2 -- bytes

	ctime=stat(1)

	-- compress spritesheet to map
	-- area (0x2000) and save cart

	clen = px9_comp(
		0,0,
		w,h,
		0x2000,
		sget)

	ctime=stat(1)-ctime

	--cstore() -- save to cart

	-- show compression stats
	print("                 "..(ctime/30).." seconds",0,0)
	print("")
	print("compressed spritesheet to map",6)
	ratio=tostr(clen/raw_size*100)
	print("bytes: "
		..clen.." / "..raw_size
		.." ("..sub(ratio,1,4).."%)"
		,12)
	print("")
	print("press ❎ to decompress",14)

	memcpy(0x7000,0x2000,0x1000)

	-- wait for user
	repeat until (btn(❎) or true)

	print("")
	print("decompressing..",5)
	flip()

	-- save stats screen
	local cx,cy=cursor()
	local sdata={}
	for a=0x6000,0x7ffc do
		sdata[a]=peek4(a)
	end

	dtime=stat(1)

	-- decompress data from map
	-- (0x2000) to screen

	px9_decomp(0,0,0x2000,pget,pset)

	dtime=stat(1)-dtime

	-- wait for user
	repeat until (btn(❎) or true)

	-- restore stats screen
	for a,v in pairs(sdata) do
		poke4(a,v)
	end

	-- add decompression stats
	print("                 "..(dtime/30).." seconds",cx,cy-6,5)
	print("")

end

-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 8 and
	-- 15 bits long with the next
	-- bits in these positions:
	--   0b0000.12345678...
	-- (1 is the next bit in the
	--   stream, 2 is the next bit
	--   after that, etc.
	--  0 is a literal zero)
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<8 then
			-- cache next 8 bits
			cache_bits+=8
			cache+=@src>>cache_bits
			src+=1
		end

		-- shift requested bits up
		-- into the integer slots
		cache<<=bits
		local val=cache&0xffff
		-- remove the integer bits
		cache^^=val
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)
		end
	end
end

-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function
	px9_comp(x0,y0,w,h,dest,vget)
	local mytable = {}
	local dest0=dest
	local bit=1
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	local cache,cache_bits=0,0
	function putbit(bval)
	 cache=cache<<1|bval
	 cache_bits+=1
		if cache_bits==8 then
			mytable[dest] = cache
			poke(dest,cache)
			dest+=1
			cache,cache_bits=0,0
		end
	end

	function putval(val, bits)
		for i=bits-1,0,-1 do
			putbit(val>>i&1)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if cache_bits>0 then
		-- flush
		mytable[dest] = cache<<8-cache_bits
		poke(dest,cache<<8-cache_bits)
		dest+=1
	end

	local str = ''
	for i = dest0, dest do
		-- str ..= (chr(mytable[i]))
		str ..= chr(peek(i))
	end
	str = escape_binary_str(str)
	print('' .. dest-dest0 .. ', ' .. #str) -- .. dest0 .. ', ' .. dest .. ', ' .. str)
	printh(str, 'output.bin')
	printh(str, '@clip')
	return dest-dest0
end

function byte_to_hex(byte)
	local hi = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte\16]
	local lo = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte%16]
	return '\\x' .. hi .. lo
end

function escape_binary_str(s)
 local out=""
 for i=1,#s do
  local c  = sub(s,i,i)
  local nc = ord(s,i+1)
  local pr = (nc and nc>=48 and nc<=57) and "00" or ""
  local v=c
  if(c=="\"") v="\\\""
  if(c=="\\") v="\\\\"
  if(ord(c)==0) v="\\"..pr.."0"
  if(ord(c)==10) v="\\n"
  if(ord(c)==13) v="\\r"
  if(ord(c)==9) v="\\t"
  	-- v = byte_to_hex(ord(c))
  out..= v
 end
 return out
end
-- 40% - 50%
-- 14 images per cart...
-- dw = 8 images per cart...

__gfx__
00000000010010101010110111113131353d3d3d3d3dddddd666666666666767777777777777777777777676666666666dddcddc5c3d3d3d3515111111111111
01001010101010010101011103131313d3d3d3dd3ddc3dcb6c666c6c6666677777777777777777777777776766666c666c6b63dbdd3cd3dd3d35353513531130
00010001001001101111303031113133d31c1d3dcd3ddd6d6d66666666667667677777777777777777776766666666666b6cdc6cdcdbcd3d3d35153151151301
0100101010101013010011011113131d3c1d3dc53ddcbdcb66b66c6666666777777777777777777777777676766c666666d6bddbdbcd3dc5d3d3d35353531131
0010010010103010130301311315353d353dc3dddbdddcd6d666666c6666667677777777777777777777776766666c66b6cdc6cdcddbddbd3d53531d31353113
1001001010301105011111111513153d3c53dd33cd3cdb6dc6666666666676777777777777777777777767766666666666c6bddbdcbcdcdd3d3d1d3135113131
010110301011053150530535315353d3d3dc3ddd3dddd636b6666c66c666676777777777777777777777767676666666c6b6cdc6bdcd3dbd3d3d313d13313113
105050505015050513151505153153d3c13d3d3cddbcbd6c66666666666676777677777777777777777777676666c66666c6db6cdc3dc3dc5d353d1313531313
115051050305315031505313515353c1d3ddcddbdcdd6dcd6b6666c66666767777777777777777777776767666666666c6b6c6dbcdbddbd3d3d3d31d31315313
0505351315115035151351515353d53d3dc3dbdddb63dcac66666666666667676777777777777777777777666666666666cd6b6cdcdcbcdd3d313d33d3d31351
11505050505151515151535355553dd3dd3dddcddddc6bddb66666c66666767777777677777777777767676766666666c6b6cdcdbdbcdd3d3d3d31d13131d313
103151515315031531535515353d3d3c3dc3dbddbc6bd6c66c66666666666676767777777777777777776766666666666c6d6b6cdc63dcbd3d3d3c33d3d31313
1510503115035551535513551d3d1c5d3d36cdcd6dddcd6b66c66666c76676767777777777777776776776766666666c66b6c6cb6bcdbddcd3d3d1d3d13c13d3
11531515315513535535553d35d3d3d3cdc5dbdbcdb6db6c6d6666666666667676776777776777777776766676666666c6c6cb6dcdc6cdbdd3dc53d3c3d13d31
15155351553555555d53d3d5d3dd3ddddbdcd6d6d6cd6c6d6c66666666666767677777776777776776767676666666c666b666c6b6bdb6cd363ddc5d3d3d33d3
5351555355553d3d3d3d5d3d3d5dd3c36cdb6cdcb6dc6d6c66b666666667666767676777777777776776766666666666c66c6cdc6c6c6ddddcd3d3d3d3d3d3d3
5153535553ddd3dd5d5d3ddddd3dddd636d6b6b66c6b66b6666c666766666766767777677776767776766766667666666c66b66b6c6dc6b6bdd636cdcddc3d3d
555555d5dd3d5dd3d3dddd3d3ddcdb6dc6b6c66c6d666c66c666666676676676767676776777776767676767676666c666c66c66c6b66b6c6dcd63ddbd3ddd3d
53d3dd3d3dddbdddd63636dd6d6d6d6d6d6c6d6666c6666666c666666766676767676777767677767676766676676666c66666c6666c66d6d6b6d6c6dc63dcdd
dddddddd6ddd6db6dd6ddd6b6db6d6c6b6666c6c6666c66c666666667677667676767767677767677677676767666666666c666c6c666c66c66dc6b6d6b6db6d
dd3ddb6ddb6dd6d6b6d6b66d6666c66666c6666666c6666666666666676767676777676776767776776676776766666666666c666666666666c6666d6d6c66dd
dd6d6dd666d6b66d66d666c66c6666b66666c666c66666666666666676767767767777767777767767776767676666666666666666c666c66666b666c666d6c6
d6b6d66b6d6666666666c66666666666666666666666666666666676676776776767677667767767767677767676766666666666666666666666666666b666b6
6d666b6666666d666b66666666666666666666666676666666676677676767777776776767777777777776776766676766666666666666666666666666666666
666d66666666666666666666666666666666666767667676776676767677767677777767767767767676776767677676767676767676666666666666c6666666
66666666666666666676666667667677676767676676767676776767676767777677c6c6c6c66777777777767776767676767676767677676666666767666666
66666666666666667667777776776767677677677677677767677777777677767777c6c6b66c6677767767776767776777677677676767676777676676666667
666667676767676767676676767677677677677677677676777676767677777777776c6b6cc6c677777776777777677676776776777776776767676767676667
66676666767676767676767676776776776776767676777767777777777767777776cbcccbccc777776777767677767777767767767677676767676766667676
66666676666766676767676767676767677677677767767677676767676777677677ccbcbccb6777777777777776777676777677676767676767676676766667
66666666767667666766767676767677676767767677677767777777777777777777cbcc6c6c6777677767767777767777767776777676767676766766676767
666666666666666766676667667676676767676767676767676676676767676766c6bccbcbcbc776767776777676776767677676767677676766676667666666
66d666666666666666666666666666666666667667666666766766766767667cc6cbcbcdc6cb6667667677667676767767676767666766666667666666666666
d6666666c66666666666666666666666666666666666767666c66c76666666666c66cbcbbbcc6c76666766766666666666766666676666666666666666666666
ddb6db666b66c66c6666666666666666666666666666c6666bb6c6666666c666cbbc666c6c6b676666666666766666666cf6666666666666c66c66666c66c666
ddd666d6dddd66d66b6c66c6666c666c66666666c6fbdbfc6c3db6666666666cbcdbc666bbcb66666666666c66666666b6b66666c66c66c66b6d6c6c666666d6
536dd6dbd3b5d6b66d66d666c6666c66666c66c666633d6b6dbcdc6666c6c666cbc6b666c6ccb66c666c7c66666c66cbc36c66c766666666dcd6b6666b6db6d6
d566bd6dd556b66d666b6db6d66b66666c66666666bddb666c3dbd6c66666cbbdcbcdbbc6bb6cc666c76666c66c666c3d3dd66666c666c6bddb66ddb66d66db6
d5dd6d6653dd6d656ddd666d6b6666b6b66b666666c36db6d33cd666c66c6bdc3bd3c3cb6cc3b66c666c76c6666666c3dbdbcb6c66b666b6d66d6b6d6d6d66d6
d3dbd63d65656ddbd6b6d66b66dddd666d666c6666b333d6bc333c66c666ccbdcdcbdbcdcdb6cb666c666c666c6c66dbcddd66bdb66c6ddddb6d6dd366bdbd6d
55dd5d5535d6bddd6d6d6b6ddddb6dd6d6b6d6bbbdd3d3663d3ddb666bcbdb76b6b6cdbdb6c66d666667666c66b6bbc333db63b366d6b6db6ddb6dbddddd663d
5ddddad35ddad565bfddddd6db66d6b666b66b3dbdb3d3dcdbd3c366c6d6c6dc66cdbc666cb6bc66666666666c6c33ddbcd366d33bd66d6ddb6dd66d6bddd635
53ddbddddbdd3d6d5da6b6ddd6dd6d666d6c6db333dddbdb63d3db66b6bcb63bc3dbc33cb66d6b366cbbc6b66bb763bc3db3633cdd6b66b6dddc6bd36ddbd3dd
d55d5ddb6653ddadda6df6db6dd6b6dd6bdb6b53d333db6bb6dbcd36bbdbdc3d3cd33cdb6d3cddcc6b66bc6c6bf66c3d3dd36633db6dbdddb636d66d3dd6dddd
dddbd6dddd5dd663dbfddb66d6bdddb6d6d6bd3353d3dcdbdb6d3ddb6ada3dcddb3cd6b6c3cbdb3bd3cdbbdbbd6666bdbdbd6bdd3dbbd6b6dddbd6ddb53dbd53
d5d5d5b65ddb66dddd5bd6d6d6d6dd5dbdbd3d3dd3dbdbdbb3663cdbd366b3333c3dbccbd63dc33cbd636b66b3bdbdbdd3636bd3bd6b3dbd66dd36bdddddd5d5
5dbd5dd5db5d5dad6d66dd565bd6b6d6663b33333dd3dd3ddb6d6bd3d666c3c33333cb66b63bd3d3dbdbcb36436ab63d3cdbaad333d333d3dbdd3d6ddbddbd3d
5d5ddda6d55ddbd6bddd5b53d6dd6d66d635d5353bdb536bdcdbd6d33bb6bd33c3c336b66bd33c3336cdb6d6b333da3dbdaa6ba353533535dd3d5d3dddd3ddd5
55dbd3d35355d55dd5b655dd5566a66bdd3333533d33333333d6dcdb3dbb3bd33d33b6a6bd3c3dbcddbdd3cd33d3333d33db66d33dd335dbd3d3dbddbd3d5dbd
d5dddd5d5d53dd6dbd5d6dd6b6dddd66d6353353353153d3533ddd6d3b6bd33cd33ddb3d6bd36cb5bdcbcdb633c333cd3c3533b533d33356d63d66d6dd5dbd45
d5dbddd6666653d65535d6bfd6d6b6db6533533535333d33d3ddbdbdc336cb6566db3cdb66bcddbbdbd3dbd63333333db5b3353d353535ddbdddddad6d6d65d5
5dd565b6565635ddddddbf66d6b6d3b5db53531335353d3dd3d633d333666ddcdb6c333c3d3ddbddbd3c33db3d313d36dbd333d3333533b55d6bd3ddb6bdd5bd
db655d555356665a3db66d55d5dd55d3dbd53331353d3333333d33bd333333bb66a663d333c3d3bd6b3bdbbd3c3333dd33db36b5b53b35b5dbdd53d3dd555655
ddd65b55515d6a666d5d653d3dddb53d35b53533531351313d3353d3d33c33dbbbabbd33c53db3cdb3dbb3ddd33533d63d353565b335b5b55ddd5dd6553d5dd5
5555f5535d3ddd3dbadabfd3dbddd5b5add6dd5d3d313333533333333c53d333d3d76bd333db3bf63333d33babd313dd33d333d31035303535dbddbd5d5d6b65
555d6655555356665baba5a356a335b5bd56b6d66533111331556d33333333136666dd333c3d3dbdd3c133dc36bd33dbdb5355db13133335d6ba3ad5dbdbd65d
53db66dd35355d355b4b53baaddb53535b4b5535b53133513133d3313d35313d33dbbb633133dddbd3d33333ab666d3ddd3333b53335335bab4db5d656dfd5dd
515d5553dd555b515155539babb95b1035d53335535355331313d33d34b1333d333ddbd353d333dd336dd33d6dbdd633b3b5b4a333535303a5ab5dbdbddad5dd
53156dbd555dd553035355da3566666dd56351355331535dddddb5b5b53531d33333bdbd3133133d6333d33b666b335da353535353553535dab5555d653535dd
5115df5555355d55305013535535d55d3553350355335313333563335333133d33533dd333133333d3333d3d665b55ba3353335353535d656355535dd653d53d
550355d6d65db53d5d313501355553555b5b533353531313131355313d13313dd333ddd3313c1d33d3dd333baba33b53d33353553555d6db4d353dd6bd555dd5
511553dad66d55d56555553505335353555303335310331313533d331331313d3d5ddb6d33d3d3dbd3d3db53353355333313513d535db5555b55d35d4ddd65b5
53030ddd3dbd6ddbd55566d53d503030353531535353535355d6dd31331313d3d33ddddb3353dd3d3535353d3d33135355353555353555535553555db5dbdd55
dd555fddd66b4b4dd6356666553555553053530353035d6666d66d3135333333353333d53535335dbd3333335b43556db5335b555353535355553d65555d5bd5
6d6566abbaab43aba65666665653130303530315515315ddddbd631313131313531353533313133535353b5bb9b533d553555badb53535555d35dd6d6b5bda55
5d6db5db4355ab4abaabadb76b5553555ab45d503315333335d353313113113333313bb53133313d331353535bd55bdb53a34badb5350335b5d356b6bfafabad
55355013053505334b5bababa5d359bab5a6f7d3513535535b3b4313031313553535b4633131353d3131355335d35555353d6d5b5ab43534aba6b9b99b555d55
1551355050553053555559b4babab4abad6665b55351533535555d353313313355b555d3331333bd331d33353dd533313155dba5b4ab955b4aaa35ab59ba3b5b
d555665501050500535333533aadbbf67665d5d53535305355353530b5b533131313335d333535bd33331313135b51355313353ddb55b6aabbb5b53535535055
553555553503053505055554ab5a6776d55b55b5b9b50310305313031313535313313553313b4b6533313131355d355b53535355d535355b9a55555551505150
055d5d56503053053530555daa667d5d5bd5aab55a5335035305513153535313511535d33535abab53135331353d5baa35ba353335556d5b5a35530030501055
1133db5d5301055300555dbad66653535511b5b9baa653130131535353110303133133535b5bfb4a6b5b43353335f6b5bab9b55535353555a353553555555555
00134515530000001035b5d66d335555135554b5bf67d5030303555b5313355303031315dabaaabbaa5ab5131543dfab59aba3b4355053355b53b95551da3535
10115535501030101054bbdd5355550035abd6daa6663130111156ba6b4b553130313135639b4ba5abab435035315d65bb4ab9ab505350535b539bd5353d55d6
5b4ba55d65b455535535505355555031b935556badb553030303daddba553530313031356ddaba3ba35bad33131035666ab5b5ba35305350353035d515535355
9ba9bfabb9abada345303030010030159b53b556665dd530535566666666dd311313113556bd3b4b4ba3a3b53531353563535b4dfa330053005153555345b9b5
34b5a77f5b7ff66ada6555505301030d6d5555bfd35d5301053d6666f66f6d303015351335ddb4abda3ba65b55030353535353ba66d53035350534abaaba4ab5
5035d6db446666b4bbf645550330356fb555554555d350353056f666676666303531531513d6ab5abb5daa6a313155505555355dbd6d530055355b9b9b9bb541
5555db455b555555d55350303001556bbb3b4535dd503000135ddbdddd6f653013033030533d6bb356ababab510303653535435556bf5303305555b455d44555
53555555515135505155150101003535555455534b50030350bf6a6adbadbd510303035305535643abada6a535305035130b55355abbf5305315b4535b535b53
1505355510555555da555dad550300501035315550101035034766666f6fad530353550135355dab5aab6bab4303031315303135bb5355335053535555555530
55515566666a6666ddd6553530151535550505301003010105666667666dbd53010150300315336dbab4bdb9b430100530530535033355555555555353535501
dd66a66f6f7776fa3030310115000050053503000300030315666666766dad511303035301035156a3abb4b9b5503303030530530505553557677f55555555dd
5b4b9bab66665b5313510530503130305050501010101010536656666665d63035305301030353136ab555b5553301130101030503053003566d66b43555b5d7
5b9b5b55535b5b4b5350505503555500030030300003030355533b555bdad50305053553013015515651343adb503000301301130501030555d6655b3bb555ad
5b95b43b45b454b54553500000dab53010300003030000103d55555355dddb131355350300103035356d5b5bd5301303010035350355555d635b465505330305
535b4b4ad646bd435300050355aba4b500010300001030305da3b5b4bfba5503035303503030355033d5b53b9650300010305055555baaa6d555303555505301
355dff6d5535001000553354abaaab930303001030000003553b5b5badd53010503553301030003515303330353001303010300b5b49b5bbbab9355530555550
55555511030050505054b4aabaab4b011500101001301301555350b55dd530030305350103013535305110303503010101010305b935b939a5b5ab5b45303555
550301555050550555abaabaab435515030303011556dd55b530300355b50101343555350103553555350353431053553030105554b4ababaa3335aab9b50000
00050300010515abab49b9ab49b510130050015566f6ff76555535505550300139b4b4aa313533003055550515346f66650103053dd39b59b9b9b5b933a30550
1050001050555b99aabaab49bddd55001030303abf66666653050515513303035ababa6ba000030303010551055766646add50305555b4b5ab4b95aa33b55050
0000005055fab9bab9b4b4bad6d530100105565adaabf66f5533335003015535b9b539bab530303010555350535666bbab6f630105355555b993b9b53055ab51
00001055badab95a5ab95565b4530050305bf77666b46666505050030535df55ab9b9badbf0305011535a5d3503adda5d6f66f53005015555b559b939b356a55
000015adabab4b9b5b9ddbdd5100500306f766776666d66553000300503566ab9b9daba5bf30130300535bfd351db5df666bdf6650030535535355b9ba9b4b55
0015555b44b94b9b445bd4505050303546677776776ffa65300100103035d6db4b3b5ab4b955030530555ab63505d5366665bdf663500000555535354ab4b5ba
0555dd5ddb9b4b49b5dd55050355555dad66666766767d3505030510350df6fa3553335aabf6300553053ffb403034555d6455355055530503555353034a355a
155b4b559554b43d4555050035555566d355d66666666d3030500350305d666da3b535b9ba65030300530dfab50115d3053655551555663010503553533303a9
05553553555b9d553100303555556da66666556666f6555050030003505dadab4b9b4aabaf66503050003066a53053555555a666fd35566b5050001553555335
01533335556dd31005050355b456a66d6665f666f6656b03010010303056db6aba5aabaa6f67d301033030366b5500355355356676d5535ab43055030555a553
000500555550005050503546f65d66666f665566665634150303005103556d6bf5aba5b9ba67d303055031d66a31350555005bf6aa6355554add550050053535
0000000000005000555d466d66656d6666f6666f6db5053500003035055bdab95ababab4b566650503300333da5300303d530556dab935dddbda6d5010501103
01010000010505050555555df6da35d5dd6d6f66b45055303030150305d65d66aa5b95b9ada66350305355546ab501050555155535bb555a3d5d5d5555000501
00050505053505035555b55566666db55df6666d555565305051030056f66a66abb535b5ba66f530055055dab4a50501305d5355d55bbb535555535050105000
151555055555050500355166f66667f6f66ad6555356d501533535035d66dd66b55355b53b5a6a1010350dab5ba5303505355305555533505b40100101010500
55555555555550000000056566f7776666d6bd55305f630500555350566adb6b93353b4b4baba33050135bd5a46b430300003550015055455554350505005010
d55d5d555300000103010ddd555666776665d553000dd530305535556f6665665b5b435355b46615030555d5baa6555003000531053555b3135aa00000103000
555da350000003000000566666666d6666d55350555d65305355305576776d66934b5b53355f6a31305003455666653010105055550555533333410000030101
d6d3000001010000000156a66666665665b550055d66653b5053050d6666636db3353335335f66555503056665d55305001003030535555a9aaadb0100000050
d5500001000000010105666dd666666555505001556add5053015053055d634d4333553535b66655301053ddb5556d505355000503550555a4b53d3001001001
0000010000001030130566b6b466ad535350050155356535055055ddd553506d655b5b9b9b9d765301555555566f665550501000500031033331333100000000
5100000003030000000565b55bd553550005000000515505113535f666655356ab45a5aa9aa66655555566666a66d53050305030030501011133133101301000
0001001030001010010555055551550505000303000050530550566666f6555dd5abababab576d66f66666565535550500010055050305001111153100000300
110050050000000000000305000505301303000001035050500515555566d3056aba99b939b76dad66d555535050300030503503550010350000113000000000
500000000010000000050030350301050000301000350010053050053553050d6666d66666f66d53503530500505503000030050055505035050105000000010
000100000000000000005000005050301030500300501035000505530555013555666666ddd5dd5051500301000030505000503050dd50000505500000000000
00000000000000000000055050030505300500000100030010100550000150030530303033055351505050530000055501050305035fd3050000000000000000
00000000000000000000005555565300050100103005050505013550000001005000330330555555030103005000000b4b500050305354530101000000000000
000000001000000000000555df6f51501000103000003030303054300000005035030030305550055050305053000005d4d53000050003555550000000000000
00000000000000010000555666651003001030000100150000005d00000001015005000005530003d53050501501000005635050135550155651010000000000
000000000000000000055566dad30500005030010010000505314600100005030103501500550000ad30050300350000003553010005100055fd550000000000
00000000000000000055b555535050005030000000050100001555300000530000305005500000005ad550001003000000005510500000101566555500000000
00000000000000000515a55500000010305000005003535010356500000050050005055055010001366d50515505150000000013010100005055dd5350000000
0000000000000000555555500051010500000000030100003005650001030000100000050000000055d553050300030500000000050305000050345555500000
0000000000000000d56500001005050300000101000550500051435500055050105050100000000535bf64535050505000000000001010100035555655500000
00000000000000015550503000000300000000010100000100055d65000551000100010300000101555f6651500100030000000000005003055055a565600100
0000000000001000515530050101000000000000001010303005356500000001001001005000000050b45565010010010000000000000000003553aaccba49cd
00000000000000005555005050000000000001050050000505001035000301000000503001000000155b555d001001005000100000000000050555a6ccbb9edc
__label__

ccccccccccccccccccccccccccc11111111111111ccccccccccccc111111111111111111ccccccccc1111111cccc111111111111111111111111111111111111
ccccccccccccccccccc11cccccccc1111111111111111c1111111111111c111cc11ccc111ccccccccc1111111cccc11111111111111111111111111111111111
ccccccccccccccccccc111cc11cccc11cccc1111111111111111111111ccc11cc111ccc11ccccccccccc1111111ccc1111111111111111111111111111111111
cccccccccccccccccccc11cc111ccccc11111ccc11111111111111111ccccccccc11cccccccccccc11cccc1111111cc111111111111111111111111111111111
cccccccccccccccccccccc1cc11cccccc1cccc111111111111111111cccccccccccc11cccccccccc111cc111111111cc11111111111111111111111111111111
cccccccccccccccccccccc11111ccccccccc111111111111111111cccccccccccccc111cccccccccc11c11111111111cc1111111111111111111111111111111
ccccccccccccccccccccccc11111111111111111ccccc11111ccccccccccccccccccc11cccccccccccc11cccc111111111111111111111111111111111111111
ccccccccccccccccccccc11cccccc111111111cc11cccccccccccccccccccccccccccccccccccccccc11cccccc11111111111111111111111111111111111111
cccccccccccccccccccc111cccc11ccccccccc11111cccccccccccccccccccccccccccccccccccccc111ccccccc1111111111111111111111111111111111111
cccccccccccccccccccc11cccc111cccccccc111c11cccccccccccccccccccccccccccccccccccccc11ccccccccc111111111111111111111111111111111111
cccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11ccccccccccc1111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc11cccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc1111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccc1111ccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccc111cc11c1111c111cccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc11cccc11cccc111ccccc11cccccccccc1111111111111111111111111111
ccccccccccccfffccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccccc11111ccc11111111ccccccccc111111111111111111111111111
ccccccccccffff77fccccccccccccccccccccccccccccccccccccccccccccccccc1cc11cccccc1cccc1111111111111111111111111111111111111111111111
cccccccccfff77777fcccccccccccccccccccccccccccccccccccccccccccccccc11111ccccccccc1111111cccc1111111111111111111111111111111111111
cccccccffff777777fccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111ccccccccc11111111111111111111111111111111111
ccccccffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111cc11ccccccccc111111111111111111111111111111111
cccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11111cccccccccc1111111111111111111111111111111
ccccffff7777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccc111cccccccc111c11ccccccccccccc1111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccc111111111111111111111111111
ccccffff77777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccfff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccfffffff77777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11111111111111111111111111
ccccccfffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccc11111111111111111111111111
77777cffffffff777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777fffffffffffff7777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c11111111111111111111111111
77777777ffffffff7fff77ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111111
77777777ffffff7777fffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c111111111111111111111111111
777777777777777777ffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111c111111111111111111111111111
777777777777777777fffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777777777777777fffcccf77777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
777777777777777777ffffff777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
7777777777777777777fffff7777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
77777777777777777777fffff77777777777fffffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
7777777777777777777777fffffff77777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
777777777777777777777777ffffff77777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffff77777777777777777777fffff77777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
ffffff7777777777777777777fffffff777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffffff777777777777777777fffffffffffffff7fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc191111111111111111111111111
ffffffff77777777777777777cccccfffcccccccccccccccccccccccccccccccccccccccccccccccccccc9ccccccccccccccc199111111111111111111111111
fffffffff7777777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9f9cccccccccccccc9ff911111111111111111111111
ffffffffff77777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccff99ccccccccccccc9ff911111111111111111111111
fffffffffff77777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc999999999999999999999911111111111111111111111
fffffffffffffffff7777cccccccccccccccccccffffccccccccccccccccccccccccccccccccccccccc999999999999999999999991111111111111111111111
fffffffffffffff7f77777cccccccccccccffff77777ffcccccccccccccccccccccccccccccccccccc9999999999999999999999991111111111111111111111
ffffffffffffffff77777777ccccccccccffff77777777fcccccccccccccccccccccccccccccccccc99999999999999999999999999111111111111111111111
fffffffffffffffff77777777cccccccfffffff777777777cccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
fffffffffffffffffffff7777ffffffffffffffff7777777fccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff999990099999999999009999999911111111111111111111
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9999990099999999999009999999911111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9999999999999999999999999999911111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999991111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc99999999999999999999999999999991111111111111111111
d6666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999999111111111111111111
df66666666666666666666666666666666666666dd66666666666666666666666666666666666999999999944444444449999999999999991111111111111111
ddff6666666666666666666666666666666666ddddf6666666666666666666666666666666666999999999999999999999999999999999999111111111111111
dddf666666666666666666666666666666666ddddddf666666666666666666666666666666669999999999999999999999999999999999999111111111111111
ddfff6666666666666ddd66666666666666ddddddddff66666666666666666666666666666699999999999999999999999999999999999999911111111111111
ddddfd66666666666ddddf666666666666ddddddddffff66666666666666666666666666669999999999ffffffffffffffffff99999999999911111111111111
dddddddd666666ddddddddf666666666dddddddddddffdd77777777777777777777777777799999999ffffffffffffffffffffff999999999911111111111111
dddddddddddddddddddddddfd66666ddddddddddddddddd6666666666666666666666666699999999ffffffffffffffffffffffff99999999991111111111111
dddddddfdddddddddddddddddddddddddddddddddddddddd77777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
dddddddffdddddddddddddddddddddddddddddddddddddddd7777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddd77dd7777777777777777777999999ffffffffffffffffffffffffff9999999911111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddd777777777777777777779999ffffffffffffffffffffffffff9999991111111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd7777717177777777779999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd717771777777777777999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddd9dddddddddddddddddd71717777777377777999fffffffffffffffffffffffff99999911111111111111111
dddddddddddddddddddddddddddddddddddddddd979ddddddddddddddd1dd1711771777377711999fffffffffffffffff5fffffff99999911111111111111111
ddddddddddddddddddddddddddddddddddedddddd9dddd1ddddddddddd1dd111117111773711199993fff3ffffffffff5fffffff999999111111111111111111
ddddddddddddddddddddddddddddddddde7edddddd3dddd1dddd1dddd1d3d131111111173111109993fff3ffffff5555fffffff9993999111111333111133311
ddddddddddddddddddddddddddddddddddeddddddd3d33d11dddd1d111d3313131111111313300999939933f3fff67ddfff3f999993333333313333333333331
dddddddddddddddddddddddddddddddddd3bdddddd333dddd1d3d1dd11113331311313111337700999393333333367dd39933933333333333311333333333333
ddddddddddddddddddddddddddddddddddbdddbddd3dddddd113301d11313331333333138877773333333333333367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbdbdddddd33dddd33010330333313333113333888777777888888888883367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbbbddddbd33ddddd30133b3333311333133333887733337788888998888867dd23333333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbdbddb33b33333d33bb333333333333338888877333377888893a9888867dd22888333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbbbbbb33b33bbbd33bb3333333333333888888873333722889999a9888555528838333333333333333333333333333
dddddddddddddddddddddbdddbdddbbbbdbbbbbbbbb33bbbbbbbbbb3333333333888888888888888888999999888888888883333333333333333333333333333
ddddddddaddddddddddddbbddbbdbbbbbbbbbbbbbbb3bbbbbbbbbbb3333333383888888888888888888899992288888888833333333333333333333333333333
ddddddda7addddddddddddbdbbbdbbbbebbbbbbbbbbbbbbbbbbbbbbbb333388888888888888888888888899228888888388333333333333333333333b3333333
ddddddddaddddddddddbbdbbbbbbbbbe7ebbbbbbbbbbbbbbbbbbbbbbbbb3888888888888888888888888888888888883883333333333333333333333b3333333
dddbdddd3ddddddbd333bdbbbbbbbbbbe3bbbbbbbbbbbbbbbbbbbbbbbbb888bb88888888888888888888888888888883833b3333333b3333b3333333b3333333
dddbdddbbbddddbbd3bbbdbbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbb88888b8888888b88888888888888b888888b83333b33bb333b3333b3333333bbb3b333
dddbbdbbbddddbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb8888888888888bb8888b8bbb3b3b33bb333b33333b33b333bbbb3333
dddbbddb3bdbdbddbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb888bbb8bbb888b88888b88bbbbbbbbbb333bbb333b33b33bbbbb3333
bbdbbbdb3bdbb33dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbb88888b8bbbbbbbbbbb3b3bbbbbbb33bb3bbbbb3333
bbbbbbbb3b3bbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbbbbbbbbbbbbbbbbbbbbbb3bbbb3b333b3333
bbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbb3bbb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b3b3bb3bb3333bb333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b3b3bb3bb333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333b3333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3b3bbb3333bbb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb33333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3b3333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33333333333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333333b333bb3333333
bbbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333b33b333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b33b333333333
bbbbabbbbbb3bbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bb3b33b333333333
bbba7abbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33333bb33
bbbba3bbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33b33bbb3
b3333333333bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b3bbbb
b3bb3bb3bb3bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbb
b33b3bb3bb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3b33b33b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbb
b3bb3bb3b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

__gff__
0081030301811303030301010000010003030101010103030101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
fffffff0ffff0ffd89e32fc19aa67c51f47fc01ffcc05f7c3c8cff11bf818b9b851f420042b8c21112fee70148c0f8f821e008c20b0a84ff733842c042f8295c940f8c62f83f23e01906fe092f3811f00dff6fc641c03fe046f8427887ff73183f50caf8851bc3f87ff12338f818ffb342f9df13065ec2ff8a7084ff3fc0022e
12f03fe3e37fce013ef0bfe6ff2ff0ff57f8ffd360e003ff7f3a20bce1ff1f87833ff8ffc760fcc1ffbf0eff7f1f08c0cdff82ffbf03168484ff7f0bce4258085ff8ff8f0148180290e10bff3309ffd3702402168431aef07f927593ff2732788681ff215f0207ff5719070165fc9f780438c2ff344c7e201cfcdf643ce07fca
c107c1c7ff4ac617fec782977081ff8f8c13fc6f255c24e024fc2fc3ff990ffcc5ffdfe4ff007ee7ff8f12fe1789ffff6f08c0ffff178430feff7ea83c82ffffcd8df0ffafc31fe0ffdf08fe47899ff8ff3f89ff83952b9c99ff3f13fe47f2519af8ff3730e17f22e40a02feffd2f03b7f3090c4ffff41f89d4b4e59e2ffff10
fe9784ffff44f81f72642be4ff6f70f0ff4b207cfcff6ffe08ffffc4fe871c5c25f9ffd3e18fc2ffdf90ff6558f82095ffbf4c180f1bfeff3168380bff7f8df25bf82bfcffbdf02ff8ffafe1672efeff43ea7f127e92121ef93fa6fe59f8972bc98ffcaf63f883f12b5ff843feffc3f0bf4df2caff5f88fe0f79e59025fe92f1
ff17c2ff6963a91f648941fe47f6bfe497851a3933e1e37f633f871ff9273c591e3bc233c9ffc4fea7fcc498fd012ef9ff83e1e27fc0ffc881173ce1ff8fcae1f8ffd9ff5f73fcff3cffffc9fe17e137fbffff865cf9ffc7e1afede8ffca85ff8fe3f49dfc007eca35f2bfb125f9ff2be12ffbdf4827f99fd8ffba8fe4070b7f
8027c9ffc2fe57e11fccf2b22cb75c24c9ffc04efb8bbf198c1c5c593e7901d7ff07fcc7ff843f6a567ef2fcedb8c2af7ce1bff00b3fdbff24fcccff22fcbf72f5ffbff1bf03c05f791cfc6f1cff7f83f29790ff91fcff1bd03e38f9ffcf8d90c299f8fff07fcffc744402474eff173b12fff3087ed90c32421c83849ff2faff
17b9355f9bf885091c5442963709e7c66187fd7f930b5d5ed9350bc391385dc3f26c9c520e494e1f6184ff4f729f40220d04b2c44190cbd67110b2efb93a721096b8c3ff66d70f1eb19a6382a06982157ce8210924d22542867be2e5ff931f2493e8f1894d481cf4e08f3f8ec439f99ff0bfdc18310cdd6e2091c58365e569ea
95f1ff3f2258788e438207cd6152c006ea43f4c82ff97f87030788d0c31124f9411f4ef80707f63591ff2faf9c96f0931cfb83ee975f58f201d9fbc70f512bbff363c242001e0b0d07a75d76f2f9e30abf73e51f3f2432fc232fd7c25ff9c5f6cf7cf27fe049863790d09c4ef983097e4c62e109f831f1479e7f5e802b825f11
f9594e0cff0712e678466d9cfbe1cadf810fff0f88c41316fe4c6018fe083fe70fe34afc118e400ef0138667482a18c6ff499e05841fc0020c7f6c08214308f922c0c2ff949384302b022e063eca41c27158e2ffca4f213cdc618c845b2e09ffff28fc4a00c20f24fcff557280f00fff7f120ce0ffbf0f06e00affff39fc42f9
ffc724349cfcffe9d0808bff3f5c1046f8ffeb0316feff3f8087ffbfcecbff3f0f77f82b8fff3f1bfe8c0fff7f34fc9c7fbeffbf19be081e967f1c9e66feff6148f82909ca92e0ff7f7281ee49cec4ffdf0d0bece408ffff7430044110f0ff7f2938863ff8ffd70f20e0ff6f872308ff7f9d868fffffceffff2f000000000000
