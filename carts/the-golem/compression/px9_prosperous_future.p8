pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- px9 data compression v9
-- by zep & co.
--
-- changelog:
--
-- v9:
--  @pancelor
--  ★ redo bitstream order
--  234 tokens (but ~4% slower)
--
-- v8:
--  @pancelor
--  ★ smaller vlist initialization
--  241 tokens
--
-- v7:
--  smaller vlist_val by @felice
--  7b -> 254 tokens (fastest)
--  7a -> 247 tokens (smallest)
--
-- v6:
--  smaller vlist_val by @p01
--  -> 258 tokens
--
-- v5:
--  fixed bug found by @icegoat
--  262 tokens (the bug was caused by otherwise redundant code!)
--
-- v4:
--  @catatafish
--  ★ smaller decomp
--
--  @felice
--  ★ fix bit flush at end
--  ★ use 0.2.0 functionality
--  ★ even smaller decomp
--  ★ some code simpler/cleaner
--  ★ hey look, a changelog!
--
-- v3:
--  @felice
--  ★ smaller decomp
--
-- v2:
--  @zep
--  ★ original release
--
--[[

	features:
	★ 273 token decompress
	★ handles any bit size data
	★ no manual tuning required
	★ decent compression ratios


	██▒ how to use ▒██

	1. compress your data

		px9_comp(source_x, source_y,
			width, height,
			destination_memory_addr,
			read_function)
				
		e.g. to compress the whole
		spritesheet to the map:
		
		px9_comp(0,0,128,128,
			0x2000, sget)

	…………………………………
	2. decompress
	
		px9_decomp(dest_x, dest_y,
			source_memory_addr,
			read_function,
			write_function)

		e.g. to decompress from map
		memory space back to the
		screen:
		
		px9_decomp(0,0,0x2000,
			pget,pset)

		…………………………………

		(see example below)

		note: only the decompress
		code (tab 1) is needed in
		your release cart after
		storing compressed data.
		
]]

function _init()

	-- test: compress from
	-- spritesheet to map, and
	-- then decomp back to screen

	cls()
	print("compressing..",5)
	flip()

	w=128 h=128
	raw_size=(w*h+1)\2 -- bytes

	ctime=stat(1)

	-- compress spritesheet to map
	-- area (0x2000) and save cart

	clen = px9_comp(
		0,0,
		w,h,
		0x2000,
		sget)

	ctime=stat(1)-ctime

	--cstore() -- save to cart

	-- show compression stats
	print("                 "..(ctime/30).." seconds",0,0)
	print("")
	print("compressed spritesheet to map",6)
	ratio=tostr(clen/raw_size*100)
	print("bytes: "
		..clen.." / "..raw_size
		.." ("..sub(ratio,1,4).."%)"
		,12)
	print("")
	print("press ❎ to decompress",14)

	memcpy(0x7000,0x2000,0x1000)

	-- wait for user
	repeat until (btn(❎) or true)

	print("")
	print("decompressing..",5)
	flip()

	-- save stats screen
	local cx,cy=cursor()
	local sdata={}
	for a=0x6000,0x7ffc do
		sdata[a]=peek4(a)
	end

	dtime=stat(1)

	-- decompress data from map
	-- (0x2000) to screen

	px9_decomp(0,0,0x2000,pget,pset)

	dtime=stat(1)-dtime

	-- wait for user
	repeat until (btn(❎) or true)

	-- restore stats screen
	for a,v in pairs(sdata) do
		poke4(a,v)
	end

	-- add decompression stats
	print("                 "..(dtime/30).." seconds",cx,cy-6,5)
	print("")

end

-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 8 and
	-- 15 bits long with the next
	-- bits in these positions:
	--   0b0000.12345678...
	-- (1 is the next bit in the
	--   stream, 2 is the next bit
	--   after that, etc.
	--  0 is a literal zero)
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<8 then
			-- cache next 8 bits
			cache_bits+=8
			cache+=@src>>cache_bits
			src+=1
		end

		-- shift requested bits up
		-- into the integer slots
		cache<<=bits
		local val=cache&0xffff
		-- remove the integer bits
		cache^^=val
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)
		end
	end
end

-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function
	px9_comp(x0,y0,w,h,dest,vget)
	local mytable = {}
	local dest0=dest
	local bit=1
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	local cache,cache_bits=0,0
	function putbit(bval)
	 cache=cache<<1|bval
	 cache_bits+=1
		if cache_bits==8 then
			mytable[dest] = cache
			poke(dest,cache)
			dest+=1
			cache,cache_bits=0,0
		end
	end

	function putval(val, bits)
		for i=bits-1,0,-1 do
			putbit(val>>i&1)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if cache_bits>0 then
		-- flush
		mytable[dest] = cache<<8-cache_bits
		poke(dest,cache<<8-cache_bits)
		dest+=1
	end

	local str = ''
	for i = dest0, dest do
		-- str ..= (chr(mytable[i]))
		str ..= chr(peek(i))
	end
	str = escape_binary_str(str)
	print('' .. dest-dest0 .. ', ' .. #str) -- .. dest0 .. ', ' .. dest .. ', ' .. str)
	printh(str, 'output.bin')
	printh(str, '@clip')
	return dest-dest0
end

function byte_to_hex(byte)
	local hi = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte\16]
	local lo = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte%16]
	return '\\x' .. hi .. lo
end

function escape_binary_str(s)
 local out=""
 for i=1,#s do
  local c  = sub(s,i,i)
  local nc = ord(s,i+1)
  local pr = (nc and nc>=48 and nc<=57) and "00" or ""
  local v=c
  if(c=="\"") v="\\\""
  if(c=="\\") v="\\\\"
  if(ord(c)==0) v="\\"..pr.."0"
  if(ord(c)==10) v="\\n"
  if(ord(c)==13) v="\\r"
  if(ord(c)==9) v="\\t"
  	-- v = byte_to_hex(ord(c))
  out..= v
 end
 return out
end
-- 40% - 50%
-- 14 images per cart...
-- dw = 8 images per cart...

__gfx__
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777677777677777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777767777767777767776776777677777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777776777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777776777777777777777777777777777777777767777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777677777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777677677767776777677777776777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777677677777777777777777777767777777767777777777777777777777777777777777777777777777777777777776777777777777777777777777777777
77777777777777777777777777777777777777777777767777776777777777777777777777777777777777777777777776777777777777777777777777777777
77777777777767776777677677776777777777777777777777777777776777767777777777777777767777777777777776777777777777777777777777777777
77776776776777777777777777677777776777777767777777777777777777777777677767776777777777677767777776677777777777777777777777777777
77777777777777777767777777777777777777677777777777777777777777777777777777777777777777777777777776777777767776777677767776777777
77777767777777677777776777777777677777777777777776777777777777777777777777777777777777777777777766677777777777777777777777777777
77767777767767777777677777777767777777777777777777777776777777777777777777777777777777777777777767677777777777777777777777777777
77777777777777776777777776776777777776777777767777777777777777777777777777777777777777777777777766777777777777777777777777777777
77777677777777777777777777777777777777777767777777777777777777777777777777777777777777777777777776677777777777777777777777777777
77777776776776777677677677777777777677777777777777767777777777777777777777777777777777777777777666777777777777777777777777777777
777677777777777777777777777777777777777777777777777677777777777677777777777777777677777777766d6d36677777777777777777777777777777
777777776777776777777777776777677777777777777777777667777777767777776777777777677777777766d366d66d667777777777777777777777777777
7777767777767777767767776777777777677777677777777776777777777777777777777776777777777766d66676d666766777777777777777777777777777
77777777777777777777777777777777777777777777777677767777777777777777777777777777777776dd777676dd66776777777776777767777677777777
77767776777767767777776777777777777777777777767777767777777777777777777777777777777776bf676676d66677d777777777777777777777776777
7777777777677777777677777777677767777767777777777776777777777777777777777777777777777646777676d666776777777777777777777777777777
77777777777777777777777777777777777777777777777777767777777777777777777777777777777776a666d676dd6677d777777777777777777777777777
77776776777777677777667777677777777777777777777777766777777677777777777777777777777776bf76d676d66677d6677776b6777777777777777777
77777777777677777677db777777777677777777777677777766dd66777777777777777776777777777777466d6677d6667736a777633d777777777777777777
7777777776777777777735bd777776db677776777777777776d6d66666667777777777777777666dd67776ba666776dd66776a3d76335a777777777777777777
777776777777777777775b5357776a35777777777777777776d6da6666d6d6777777767766dd6666667777467677666d6677d633db0b5a677777777777777777
777777777777776777774b533d76b1b97777777777777777766655677776d7777777776dd6666d66667777da666666d6667767d35530b7777777767776777777
77777776777767777777b43533f6305a77777777777777777d66ad77777657777777776676666777667777ba6676663d667767643005f7777777777777777777
777767777767777777776330306d33a777777777767777777666da677776d6777777776666677777667777dd677666d66677676100bf77777777777777777777
777777777777777777777535036d556777777777777777777666d6777766a6777777776666666d666d6777aa66677ddd6676d665514777777777777777777777
777777777777777776777f3300dd577777777777777777677d66ad777766d67777777766d3d667d6635566db66776ddd66756777775177777777777777777777
77777776777777777777776500505677777777677777777776666a777666d677777777666666776765ab455a667766dbf76ba766777557777777777777777777
777777777777777777777776d5001d7777777777777777777666d6777666a6777777776666667667654ab9b56677666d6665ddb6677717777777777777777777
7777767777767776777777766550566777777777777777777d66ad767667d67777777766677666666b9b44a5667666dd676b4567d66656777777777777767777
77777777777777777777775067777776677777777777777776666d776666d6776777776666776d7764b966676d66dd5d66655d67766766777777777776777777
777777777777777777777d0577777666b6777777777677777d66a67766775677777777666d77667764a56777766d66dd66d5a6777777d6777777777677777777
77777777777777777777711677776676fa6777776666d67776666a6766765677767777666d7776766b4bf677666667656f6bd6677777f6777777777777777777
7777777767777777777763677666667d5b7766d6666d66777d66d6766676ad66666666666d67766664a566776666776d66d95667776667777777777777777777
7777777777777677777765d6666666765566d66d777666677666a6766776555d55dd6b666d6776776b9bf6666ddd776d666bf77766dd67777777777777777777
777777777777777777676df667666666b5d76d66676666777d67d6666766b96666665a666d66667764b96667666d67dd66a55777ddd767777777777777777777
777777777777777777776f677777777655666666677666777667da66776646766677dd666566667764a5666666d6676d666333ddd67767777777777777777777
7777777777777777777767777777766db5d66667d67666677667d666776656766667646675d766666b4bf7666666676d66a030d6677767777777777777777777
777777777677777777776767777777769bdf66d6667766777d67da6776f69666d66665667567666764a56777666d67dd666303f7777767777777777777777777
7777777767777777777767667777777654666666767666777667d6676666b666f6df6a66666776676b9bf7777666676d66a33567777777777777777777777777
7777777766777777777767d3d6777777abdf6666776766777667da6766774a6666666566fdd777d664b96666666667dd66d533f7777767777777777777777777
77777777767777777777676d3567777654d666d6666666777d66d66766765d67666f636666577667659567676666676dd7a35677777767777777777777677777
777777776777777777776677d5d3d6d334666666677666677dd6a6776676a5776667655bf65635676b9b6777766d676dd75bf777776767777777777777777777
7777777776777777777767777765530034b76d66667666777da6d676676d5bf76677655b56535b7764b9dd67666d67d6d7a5f77776d766777777777777777777
7777777766777777677767777777663034d666567677667775666a766766446766666ad5b4356df764a566b63666776566dbfd77736767677777777777777777
777777776677777777776777777776035566666d766766777db7d6767666ba6766666566550576676b4bf76d6f7667d6d7a533675d7767777777777777777777
7777666666777777777767777777766334df6666b66666677da66a6676f64d67666664665355766764a56776d776676dd6d33355677767676766677777777777
7777777776677777777767777777775534666666456666bd66d6d6767666ab7766666ba305655ad76b4bf777766677dd674533567777676cb667777777677777
777767677667777777776676777777535bd66dd66b4b534bfda66a666676d4776676655df67653da64a566777666676dd7b5357777776675d666777777777777
77777777666777777777676677777765b46666d6fa5355f66d66dd776f775a676667db4676676d6d6b9b53367766776d67d5b4777777676b6667777777776777
77776767767777777777676677777777446676f666355667a366ad77667756666666d93d6f6da66a65453030d67677ddd7a356776666666dd6d7777677677777
77777777766777777777666666677777b46666667655d56a3666da677666ab66676665a666f6666d6b9b03035666676db7d55677d777665b5bd6777777777677
7777676766677777777767665d67777d5bdf76b66dd5b564ad6666676766dd6676765b476677666a64b4333066667d6d67a34777d67766d555df776776767777
7777777776677777777766763bd6673359667f55f66dd5db465696667766a5677676d9d776676b656b95303567d6d66dd7dbd777d677666b6a66777777777677
77766777766d77777777677777d6653053d676a36f676359b66656667766db7776666b4777766fda64ab53ff776d677dd7d903f77c67666f66b6666667677777
77766777767d77777767667777d665035566665d666f64b446a6a6677666a5776676d9b77776dd666b4455777766777d675b5f77777766b6b6666bdd66776767
7777766667666777677767777777763035d676a66766764bad66567677765a67667665a7777735ad69b966667766777dd7a5577777776656f666dbad66767677
7766766d767d777776776677777776035bf666b677667649b666df766676d56676765bd77767535adb93566d6d66767dd7d3d7777766bf565667a566666333d6
77767dd66766677677676777d777775354d67f96677766b4ad66ad776776ab667766d931366355ab64a5b5dbd6667766d7d53356773346bdb5a6d3dbd335b5bd
77767d6d667d776777776777d677776d5bf66db667776d9b4d66d6676676d46676666935557db55a5b955badf767777dd7ab53b36d33b45b5b56355553535b53
777676b6667d777676776676d677777759d76a53777776b9bd66a6677677da666676db46677777a564b935ddb667777dd7d5b55355b55b5353db5b5b53b53533
77767dd6666667677767677db676776d3466660577776645ad6d566776765bf66676d9d67777765ada5435f67666777d66d5335b5b5b535b5b55b5355d55b553
776676bd667d767767776677d76777635b676a33d66335b9bd66a66677664ad76677dba77777d5badb9b457777dd777dd7a35b5b55535b55b533535355b44b9d
777666666766667676766777d666776354666d55bf6d359b9d66d6767766b4666676dad67776054be4b9667776dd6676d7d5b5535b5b55b555555555aa66f666
76666636667d766777676677d66777635b666a677777f6b95d66a666776659667666646f777dd6a46a5567776676676356d4b5b5b5b4b4b4b5b4ba6666da5ab9
66d66666667d6dd667776776d667776354666ad777776a4bad66567767665bd76666dab7776d76badbabf7676676763bb5b935b4b4b455559dff66dab9b9b9a5
666676d6667d66d6676766766767776535666b5d777776b95da64667677d5a6666666bff7d36774bf444666666666db55b55b55b455b4ba66665ab9b9b9b9b9b
677666b5767d666667676f77777777635466793d7777769bad66bf67677a346766f65966766677a46bab667763b5b535b5b55b95b4adf766ab9b9a5a9a5aa4ab
766676db767d6676677766777776665b4bf66a5667777db95d66a667767d5ad766765ba6777776bad9b43b5ddb535b5b55b4b434a6666dab95aab9b9b9b9b55d
7766666d6766667666666f7777db3b5059666bf76677769bad6656777676b466667654667777774ad5b535b5b53b55b4b55554a6666dab95ab9b9b9b9b95da66
77d676d3667d667d666d6677733535b35b66696763d77da59366a66776664b6766db3ba7777777b96b535b555b55b5b55b95a6666dab9b9ba9b99a595d66f6f6
7d6666db666d677666666f776b535b5b59666bf7666776b9bdf6d666776695d765b553566677774bf5b5b53b535b4b559566766dbab9a4a9b9ab5b466ff6f665
66667677767d6666d66d6677635b53533566f96777777a5a5666a6677766b96765b535b5335677a463535b55b5b434b4b7f666ba9b9b9bab9b45a66f6a66b4b9
6d666666667d5d676766a6766b535b5b5bf66bf777777db9b466d666776643d7635b5b533b5b67dab5b5b4b5b4b4b95f7766b99b9a4ab9b954d66f6a66b4aa9b
335763533573b3fdbd7666b5b535b5b4b5666967777d6a4b9d66a6676766b967db53535b55b5d7b955b435355b444677765a9b9ab9b9a4a5a6a6a666db9ab4b4
53bdb5b53553535333666ab535b5b435b5bf6b7776b3b39a5d66d6f666f6456765b535b5b53b4b5b5b4b5b4b45ab77666bab9b9b9b9b9b56666666b4aab95ad7
35553535b5b535b535666a35b4b4b5b55b55f967d33535b5ad66a66b3b46b4b7653535355b435b55b5b5b4b4ba67766da4a5a9b94a9b46f6a66ada4ba5a3d777
33335b5353535b535b6da3b4b5b55b4b55bb4b77b5b5b5b5bd66665b55b45ad766535b5b5b5b55b5b4b4554a667676ab9bab9b9ab9b46f66666b4ba9b9377777
555b4b4b4b5b45b4b4b5b4b4b4b5b4b5b55b4bf63535b55b94b5b4b4b5bb4d6766b5b5b4b55b5b4b4b4b4bf66776db94ab99b9b9b46f6a6a6b4aa9b956777777
b9b9b4b9b959b4b934b4b4b4b55b4b4b4b4b4b5b5b5b4b5b5b4b5b4b5b43ba67765b4b535b4b4b4b55496f67676da9bab9b9a5a546f6666d5ab9b9b477777777
77777777767676767f654b4b4b4b4b4b4b4b4b435b4b535b55b55b53535b4d6676a5b4b4b4b5b4349b66667676b9b9b99b9b9b9bf6a6a6bab9ab956777777666
4a5a5a5a5aba5aabadab5b9b4b9b4b4b4b4b4b4b4b434b4b5b4b55b4b5b4b96775bd5b5b4b4b459bdff67f67d9ab9a4ba94ab9dff66665a4ab94bf7777776676
ababababa5abab94ab4355555534b4b4b4b4b4b4b4b5b4b4b4b4b4b4b4b4b4776db5b4b4b5554b6f7767676dab94bab9bab95666f6adbabab9b477777776d777
4ab994a5ab995ab9b9b45b4b4b4555554b455b4b4b4b4b4b4b4b4b4b4b4b467665b4b55555abf7f676f676b9b9ba9b9a4ab46a6a66da4a5a4a57777777666766
b44b5b53555355555545454b49baabab94b954555555b4b4b4b55b55b435355b555554ba6a677676f676d9ab9a4b9ab9b95a66666b9babab4d777777766667d7
4ddadfa6a6ff6ff6f6f6a66add555499ba9babab45b46d4d454595545b49b959baa6a6f767676f767765ab99b9bab94ab4666a664ab9b94ad777777776666767
ff66f666666f66f6f6f666f66ff66bd34b9ab99ab99b4666f76f66f6ff66f66676666766767676f765ab9b9b9b994bab4f6a666b9b9a4b9d777777777d667766
66a66a6f6a66a66f6f66f66f6f6ffff6f5559b9b9b9ab9b936666f6f6f6f6676767676f6f6f6766dbab9a4ab9a5aba446f66664ab95ba467777777777d667667
f66f666f66f66f6a66a66a66f66666f6f6f655b9a4b9ab9b9b9bd66667676f6f6f6f6767676765aa4a4bab9a5ab9ab46f6a66b9b9aa9b6777777777776676677
6f66f6a66f6f6f666666f66f6f6a6f66f66f6f65b9ab94a9a4a9b9b4bd6667676767676f66db9bababa9b9b9b9b93ff666665ab9b9b5f7777777777766667677
f6a66f66f6a666a6f6f6f6f6f666f6f66f6f6f6f6559bab4bab9b9a9a9b9b4ad6d6dadab4ba9a4b95ab94a5ab9a5a66a6a6b9b9a4b96777777777777767d7667
6f66a66f666f6f66f6a66f66a6f66f6f6f66f6f6f66559ba9b9b9b9bb9b9ab9babab9b9aa9b9ba9ba4ababa4ab4666666db9a9b9b9677777777777777d766766
f6f666f6a66666666666f6f666f6f66f66f6f66f6f6f6d4b9a5a9ab99a4b9ab999b9ab9b5ab99b9ab9b94aba5a66a6a6a5ab9b99577777777777777776676676
6dadb4b5b4b9b4b9b4b46b66a66f6f6f6f6f6f66f6f6f6fd5b9b9b95bab9b94bab9b94ab9b9b9b9b9b9bab956666666b4b99b9b5777777777777777776676667
4bab9a9aa9b9aa4ab9ab99b4b5566a66f6f66a6f666f6f6ff6559baa9b9a4ba9b994bab9a4a9b9a5a9a4a55fa6a6a65aa9ba4a57777777777777777777667666
ab99b9b5b9ab4bab95a9b9ab9ab9b5bda66f6666fa66f6f66ff6d4b4b9aba9b9abab9a4b9bab9b9b9b9b5a6666666b9b4b9ba3777777777777777777777d776d
94ba4baa9b9b9ab9ab9b9b99b9ab9a9b4b5d6f6f666f666f6f6f6f659b4ab9ab49b9b9ba9b99b9a4b93f66f6a66a5ab9aa4a577777777777777777777777d6da
ba9ba9b4b9a4b99b9b9ab9b9ab94b9b9a9bab4b66f6f6a66f666f6a66d554b99ba9a5a9b9ab9ab4b966a66a666b5ab9b9ba3777777777777777777777777db95
9b9ab9aa9b9bab95a9b94a5ab9ba9b9b9b99b99b4d6666f66a6f666f6ff6a5359b5bab9b9b9b45a66f66f666a5ab994ab95777777777777777777777766b94d7
9ab95b9b9b9a4abab9b9bab95a4b9a5ab9b9ab9abab4bf6f666f6f66f6f66ff6da5a545a55df666f6a66a6fb5ab9bab99377777777777777777777766b946677
b95aa4b9b9b9b99b94ab99bab9bab9b9a4ab95ab94a95b4d6f6f6a6f6a66f66f6666f666fff6a6a6666f66555a4a4ab937777777777777777776665ab9d67777
9bab9ba9a5ab9b9abab9b99b9a94ab9b9b9b9b94babaa9bab5da6666666f6a66a6f6f6a666666666a6f6b55ab4bab99b4d6677777777777766d6bab466777777
a4a5a9b4ba4ab9b94a4a4ba9b4bab9a4ab9a5aba9b9b4b999ba35d6a6f6f666f66f6a66f6a6a6f6f66b54ab9a54b9b54ab956666766666db9b99547777777777
b9bab9ba9bab9a4bababa9b9ab9a4b9b9ab9b9ab9a5aaabb9ab9ab4bdd66a6f66f66666a6666f6a6354ab9ab9badda6764bab9b9ba5ab9a5a566777777777777
9b94ab9b9a5a5ba9b95ab9b9b9b9b9ab9b9b9b99b9b9b4a9b94ba9b9ab43d66a66a6f6f66f6f6b554ab9ab95ad77777777764da5a5a5add6677777ffccb64ecd
a4bab99ab9b9a9b9aba5a5a5a9b9ab94b9a4a9b9b9ab9b9b9ba9b9ab99ba5b5355d6baddbf5b54bab9ab4ab9d77777777777777777677777777777aaccba49dc
__label__

ccccccccccccccccccccccccccc11111111111111ccccccccccccc111111111111111111ccccccccc1111111cccc111111111111111111111111111111111111
ccccccccccccccccccc11cccccccc1111111111111111c1111111111111c111cc11ccc111ccccccccc1111111cccc11111111111111111111111111111111111
ccccccccccccccccccc111cc11cccc11cccc1111111111111111111111ccc11cc111ccc11ccccccccccc1111111ccc1111111111111111111111111111111111
cccccccccccccccccccc11cc111ccccc11111ccc11111111111111111ccccccccc11cccccccccccc11cccc1111111cc111111111111111111111111111111111
cccccccccccccccccccccc1cc11cccccc1cccc111111111111111111cccccccccccc11cccccccccc111cc111111111cc11111111111111111111111111111111
cccccccccccccccccccccc11111ccccccccc111111111111111111cccccccccccccc111cccccccccc11c11111111111cc1111111111111111111111111111111
ccccccccccccccccccccccc11111111111111111ccccc11111ccccccccccccccccccc11cccccccccccc11cccc111111111111111111111111111111111111111
ccccccccccccccccccccc11cccccc111111111cc11cccccccccccccccccccccccccccccccccccccccc11cccccc11111111111111111111111111111111111111
cccccccccccccccccccc111cccc11ccccccccc11111cccccccccccccccccccccccccccccccccccccc111ccccccc1111111111111111111111111111111111111
cccccccccccccccccccc11cccc111cccccccc111c11cccccccccccccccccccccccccccccccccccccc11ccccccccc111111111111111111111111111111111111
cccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11ccccccccccc1111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc11cccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc1111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccc1111ccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccc111cc11c1111c111cccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc11cccc11cccc111ccccc11cccccccccc1111111111111111111111111111
ccccccccccccfffccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccccc11111ccc11111111ccccccccc111111111111111111111111111
ccccccccccffff77fccccccccccccccccccccccccccccccccccccccccccccccccc1cc11cccccc1cccc1111111111111111111111111111111111111111111111
cccccccccfff77777fcccccccccccccccccccccccccccccccccccccccccccccccc11111ccccccccc1111111cccc1111111111111111111111111111111111111
cccccccffff777777fccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111ccccccccc11111111111111111111111111111111111
ccccccffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111cc11ccccccccc111111111111111111111111111111111
cccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11111cccccccccc1111111111111111111111111111111
ccccffff7777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccc111cccccccc111c11ccccccccccccc1111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccc111111111111111111111111111
ccccffff77777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccfff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccfffffff77777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11111111111111111111111111
ccccccfffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccc11111111111111111111111111
77777cffffffff777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777fffffffffffff7777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c11111111111111111111111111
77777777ffffffff7fff77ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111111
77777777ffffff7777fffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c111111111111111111111111111
777777777777777777ffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111c111111111111111111111111111
777777777777777777fffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777777777777777fffcccf77777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
777777777777777777ffffff777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
7777777777777777777fffff7777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
77777777777777777777fffff77777777777fffffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
7777777777777777777777fffffff77777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
777777777777777777777777ffffff77777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffff77777777777777777777fffff77777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
ffffff7777777777777777777fffffff777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffffff777777777777777777fffffffffffffff7fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc191111111111111111111111111
ffffffff77777777777777777cccccfffcccccccccccccccccccccccccccccccccccccccccccccccccccc9ccccccccccccccc199111111111111111111111111
fffffffff7777777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9f9cccccccccccccc9ff911111111111111111111111
ffffffffff77777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccff99ccccccccccccc9ff911111111111111111111111
fffffffffff77777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc999999999999999999999911111111111111111111111
fffffffffffffffff7777cccccccccccccccccccffffccccccccccccccccccccccccccccccccccccccc999999999999999999999991111111111111111111111
fffffffffffffff7f77777cccccccccccccffff77777ffcccccccccccccccccccccccccccccccccccc9999999999999999999999991111111111111111111111
ffffffffffffffff77777777ccccccccccffff77777777fcccccccccccccccccccccccccccccccccc99999999999999999999999999111111111111111111111
fffffffffffffffff77777777cccccccfffffff777777777cccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
fffffffffffffffffffff7777ffffffffffffffff7777777fccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff999990099999999999009999999911111111111111111111
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9999990099999999999009999999911111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9999999999999999999999999999911111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999991111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc99999999999999999999999999999991111111111111111111
d6666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999999111111111111111111
df66666666666666666666666666666666666666dd66666666666666666666666666666666666999999999944444444449999999999999991111111111111111
ddff6666666666666666666666666666666666ddddf6666666666666666666666666666666666999999999999999999999999999999999999111111111111111
dddf666666666666666666666666666666666ddddddf666666666666666666666666666666669999999999999999999999999999999999999111111111111111
ddfff6666666666666ddd66666666666666ddddddddff66666666666666666666666666666699999999999999999999999999999999999999911111111111111
ddddfd66666666666ddddf666666666666ddddddddffff66666666666666666666666666669999999999ffffffffffffffffff99999999999911111111111111
dddddddd666666ddddddddf666666666dddddddddddffdd77777777777777777777777777799999999ffffffffffffffffffffff999999999911111111111111
dddddddddddddddddddddddfd66666ddddddddddddddddd6666666666666666666666666699999999ffffffffffffffffffffffff99999999991111111111111
dddddddfdddddddddddddddddddddddddddddddddddddddd77777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
dddddddffdddddddddddddddddddddddddddddddddddddddd7777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddd77dd7777777777777777777999999ffffffffffffffffffffffffff9999999911111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddd777777777777777777779999ffffffffffffffffffffffffff9999991111111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd7777717177777777779999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd717771777777777777999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddd9dddddddddddddddddd71717777777377777999fffffffffffffffffffffffff99999911111111111111111
dddddddddddddddddddddddddddddddddddddddd979ddddddddddddddd1dd1711771777377711999fffffffffffffffff5fffffff99999911111111111111111
ddddddddddddddddddddddddddddddddddedddddd9dddd1ddddddddddd1dd111117111773711199993fff3ffffffffff5fffffff999999111111111111111111
ddddddddddddddddddddddddddddddddde7edddddd3dddd1dddd1dddd1d3d131111111173111109993fff3ffffff5555fffffff9993999111111333111133311
ddddddddddddddddddddddddddddddddddeddddddd3d33d11dddd1d111d3313131111111313300999939933f3fff67ddfff3f999993333333313333333333331
dddddddddddddddddddddddddddddddddd3bdddddd333dddd1d3d1dd11113331311313111337700999393333333367dd39933933333333333311333333333333
ddddddddddddddddddddddddddddddddddbdddbddd3dddddd113301d11313331333333138877773333333333333367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbdbdddddd33dddd33010330333313333113333888777777888888888883367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbbbddddbd33ddddd30133b3333311333133333887733337788888998888867dd23333333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbdbddb33b33333d33bb333333333333338888877333377888893a9888867dd22888333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbbbbbb33b33bbbd33bb3333333333333888888873333722889999a9888555528838333333333333333333333333333
dddddddddddddddddddddbdddbdddbbbbdbbbbbbbbb33bbbbbbbbbb3333333333888888888888888888999999888888888883333333333333333333333333333
ddddddddaddddddddddddbbddbbdbbbbbbbbbbbbbbb3bbbbbbbbbbb3333333383888888888888888888899992288888888833333333333333333333333333333
ddddddda7addddddddddddbdbbbdbbbbebbbbbbbbbbbbbbbbbbbbbbbb333388888888888888888888888899228888888388333333333333333333333b3333333
ddddddddaddddddddddbbdbbbbbbbbbe7ebbbbbbbbbbbbbbbbbbbbbbbbb3888888888888888888888888888888888883883333333333333333333333b3333333
dddbdddd3ddddddbd333bdbbbbbbbbbbe3bbbbbbbbbbbbbbbbbbbbbbbbb888bb88888888888888888888888888888883833b3333333b3333b3333333b3333333
dddbdddbbbddddbbd3bbbdbbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbb88888b8888888b88888888888888b888888b83333b33bb333b3333b3333333bbb3b333
dddbbdbbbddddbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb8888888888888bb8888b8bbb3b3b33bb333b33333b33b333bbbb3333
dddbbddb3bdbdbddbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb888bbb8bbb888b88888b88bbbbbbbbbb333bbb333b33b33bbbbb3333
bbdbbbdb3bdbb33dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbb88888b8bbbbbbbbbbb3b3bbbbbbb33bb3bbbbb3333
bbbbbbbb3b3bbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbbbbbbbbbbbbbbbbbbbbbb3bbbb3b333b3333
bbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbb3bbb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b3b3bb3bb3333bb333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b3b3bb3bb333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333b3333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3b3bbb3333bbb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb33333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3b3333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33333333333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333333b333bb3333333
bbbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333b33b333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b33b333333333
bbbbabbbbbb3bbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bb3b33b333333333
bbba7abbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33333bb33
bbbba3bbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33b33bbb3
b3333333333bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b3bbbb
b3bb3bb3bb3bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbb
b33b3bb3bb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3b33b33b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbb
b3bb3bb3b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

__gff__
0081030301811303030301010000010003030101010103030101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
fffffff0ffff0ffd89e32fc19aa67c51f47fc01ffcc05f7c3c8cff11bf818b9b851f420042b8c21112fee70148c0f8f821e008c20b0a84ff733842c042f8295c940f8c62f83f23e01906fe092f3811f00dff6fc641c03fe046f8427887ff73183f50caf8851bc3f87ff12338f818ffb342f9df13065ec2ff8a7084ff3fc0022e
12f03fe3e37fce013ef0bfe6ff2ff0ff57f8ffd360e003ff7f3a20bce1ff1f87833ff8ffc760fcc1ffbf0eff7f1f08c0cdff82ffbf03168484ff7f0bce4258085ff8ff8f0148180290e10bff3309ffd3702402168431aef07f927593ff2732788681ff215f0207ff5719070165fc9f780438c2ff344c7e201cfcdf643ce07fca
c107c1c7ff4ac617fec782977081ff8f8c13fc6f255c24e024fc2fc3ff990ffcc5ffdfe4ff007ee7ff8f12fe1789ffff6f08c0ffff178430feff7ea83c82ffffcd8df0ffafc31fe0ffdf08fe47899ff8ff3f89ff83952b9c99ff3f13fe47f2519af8ff3730e17f22e40a02feffd2f03b7f3090c4ffff41f89d4b4e59e2ffff10
fe9784ffff44f81f72642be4ff6f70f0ff4b207cfcff6ffe08ffffc4fe871c5c25f9ffd3e18fc2ffdf90ff6558f82095ffbf4c180f1bfeff3168380bff7f8df25bf82bfcffbdf02ff8ffafe1672efeff43ea7f127e92121ef93fa6fe59f8972bc98ffcaf63f883f12b5ff843feffc3f0bf4df2caff5f88fe0f79e59025fe92f1
ff17c2ff6963a91f648941fe47f6bfe497851a3933e1e37f633f871ff9273c591e3bc233c9ffc4fea7fcc498fd012ef9ff83e1e27fc0ffc881173ce1ff8fcae1f8ffd9ff5f73fcff3cffffc9fe17e137fbffff865cf9ffc7e1afede8ffca85ff8fe3f49dfc007eca35f2bfb125f9ff2be12ffbdf4827f99fd8ffba8fe4070b7f
8027c9ffc2fe57e11fccf2b22cb75c24c9ffc04efb8bbf198c1c5c593e7901d7ff07fcc7ff843f6a567ef2fcedb8c2af7ce1bff00b3fdbff24fcccff22fcbf72f5ffbff1bf03c05f791cfc6f1cff7f83f29790ff91fcff1bd03e38f9ffcf8d90c299f8fff07fcffc744402474eff173b12fff3087ed90c32421c83849ff2faff
17b9355f9bf885091c5442963709e7c66187fd7f930b5d5ed9350bc391385dc3f26c9c520e494e1f6184ff4f729f40220d04b2c44190cbd67110b2efb93a721096b8c3ff66d70f1eb19a6382a06982157ce8210924d22542867be2e5ff931f2493e8f1894d481cf4e08f3f8ec439f99ff0bfdc18310cdd6e2091c58365e569ea
95f1ff3f2258788e438207cd6152c006ea43f4c82ff97f87030788d0c31124f9411f4ef80707f63591ff2faf9c96f0931cfb83ee975f58f201d9fbc70f512bbff363c242001e0b0d07a75d76f2f9e30abf73e51f3f2432fc232fd7c25ff9c5f6cf7cf27fe049863790d09c4ef983097e4c62e109f831f1479e7f5e802b825f11
f9594e0cff0712e678466d9cfbe1cadf810fff0f88c41316fe4c6018fe083fe70fe34afc118e400ef0138667482a18c6ff499e05841fc0020c7f6c08214308f922c0c2ff949384302b022e063eca41c27158e2ffca4f213cdc618c845b2e09ffff28fc4a00c20f24fcff557280f00fff7f120ce0ffbf0f06e00affff39fc42f9
ffc724349cfcffe9d0808bff3f5c1046f8ffeb0316feff3f8087ffbfcecbff3f0f77f82b8fff3f1bfe8c0fff7f34fc9c7fbeffbf19be081e967f1c9e66feff6148f82909ca92e0ff7f7281ee49cec4ffdf0d0bece408ffff7430044110f0ff7f2938863ff8ffd70f20e0ff6f872308ff7f9d868fffffceffff2f000000000000
