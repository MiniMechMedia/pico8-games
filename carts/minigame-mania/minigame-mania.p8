pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
--minigame mania                 v0.1.0
--caterpillar games



function parsePieces(cabinet, index)	
	local configs = {}
	local celxStart = (index - 1) * 16
	for i = 0, 16 do
		for j = 0, 12 do
			local spriteNumber = mget(celxStart + i, j)
			if fget(spriteNumber, 0) then
				add(configs, {
					x = celxStart + i,
					y = j,
					spriteNumber = spriteNumber
				})

				mset(celxStart + i, j, 0)
			end
		end
	end

	cabinet.solution = configs
end	

-- function getBaseSpriteNumber(spriteNumber)
-- 	return flr(4 * flr(spriteNumber / 4))
-- end

function rotateSprite(spriteNumber)
	local base = flr(4 * flr(spriteNumber / 4))
	local ret = spriteNumber + 1
	if ret > base + 3 then
		return base
	end
	return ret
end

function drawPong(self)
	-- cls(0)
	drawPongPaddle(self.player)
	drawPongPaddle(self.cpu)

	local loc = self.ball

	color(7)
	local lineY = 64 - 8
	print( self.cpu.score, 15, lineY - 5 - 4)
	print(self.player.score, 15, lineY + 5)
	fillp(▒)
	line(0, lineY, 128, lineY, 7)
	fillp()

	rectfill(loc.x - 2, loc.y - 2, loc.x + 2, loc.y +  2)

	-- if self.cpu.target.isRand then
	-- 	-- Red for random
	-- 	line(self.cpu.target.x, 0, self.cpu.target.x, 128, 8)
	-- else
	-- 	line(self.cpu.target.x, 0, self.cpu.target.x, 128, 9)
	-- end
end

function drawPongPaddle(loc)
	rectfill(loc.x - 10, loc.y - 2,
		loc.x + 10, loc.y + 2, 7)
end

function pongCollision(self)
	if abs(self.ball.x - self.player.x) < 10 and
		abs(self.ball.y - self.player.y) < 3 and
		self.ball.vy > 0
		then
			self.ball.vy *= -1
			-- print(self.ball.vy)
			-- assert(false)
	end

	if abs(self.ball.x - self.cpu.x) < 10 and
		abs(self.ball.y - self.cpu.y) < 3 and
		self.ball.vy < 0
		then
			self.ball.vy *= -1
	end
end

function resetPongBall(self, velSign)
	local vy = velSign * 30 / 1.5

	self.ball = {
		x = 64,
		y = 64,
		vx = abs(vy),
		vy = vy
	}
end

function updateScore(self)
	if self.ball.y < 10 then
		self.player.score += 1
		resetPongBall(self, 1)
	end

	if self.ball.y > 100 then
		self.cpu.score += 1
		resetPongBall(self, -1)
	end
end

function updatePong(self)

	self.ball.x += self.ball.vx * self.dt
	self.ball.y += self.ball.vy * self.dt

	if self.ball.x < globalBounds.minX then
		self.ball.x = globalBounds.minX
		self.ball.vx *= -1
	elseif self.ball.x > globalBounds.maxX then
		self.ball.x = globalBounds.maxX	
		self.ball.vx *= -1
	end

	pongCollision(self)

	updateScore(self)

	if btn(dirs.left) then
		-- TODO bounds checking
		self.player.x -= self.player.speed * self.dt
	elseif btn(dirs.right) then
		self.player.x += self.player.speed * self.dt
	elseif btnp(dirs.z) then
		gs:breakCabinet()
		return
	end

	updatePongCpu(self)
end

function smoothsgn(val)
	if val < -1 then
		return -1
	elseif val > 1 then
		return 1
	end
	return 0
end

function updatePongCpu(self)
	if abs(self.cpu.target.x - self.cpu.x) < 2 then
		rndTarget(self)
	end

	self.cpu.x += self.player.speed * self.dt * smoothsgn(self.cpu.target.x - self.cpu.x)
end

function initPong(self)
	self.dt = 1/20.0
	resetPongBall(self, 1)
	self.player = {
		score = 0,
		x = 10,
		y = 94,
		speed = 30
	}
	self.cpu = {
		score = 0,
		x = 64,
		y = 20
	}
	rndTarget(self)
end

function rndTarget(self)
	-- Gonna try to predict ball position
	-- Coming at me...
	if self.ball.vy < 0 then
		local predBall = {
			x = self.ball.x,
			y = self.ball.y,
			vx = self.ball.vx,
			vy = self.ball.vy
		}
		for i = 1, 400 do
			predBall.x += predBall.vx * 1/5.0
			predBall.y += predBall.vy * 1/5.0
			if predBall.x < globalBounds.minX then
				predBall.vx = abs(predBall.vx)
			elseif predBall.x > globalBounds.minX then
				predBall.vx = -abs(predBall.vx)
			end
			if predBall.y < 15 then
				if predBall.x < 0 or predBall.x > 128 then
					break
				end
				if abs(self.cpu.target.x - predBall.x) > 5 then
					self.cpu.target = {
						x = predBall.x,
						isRand = false
					}
				end
				return
			end
		end
	end


	self.cpu.target = {
		x = myrand(16, 128 - 16),
		isRand = true
	}
end

function getPongCabinet()
	return	{
		-- cabIndex = 1,
		isSolved = false,
		cabColor = 1,
		init = initPong,
		draw = drawPong,
		update = updatePong
	}
end

-- function selectFruit(self)

-- end

function initSnake(self)
	self.body = {
		{x = 8, y = 8},
		{x = 9, y = 8},
		{x = 10, y = 8}
	}
	self.dir = dirs.left
	self.qdir = dirs.left
	self.simSpeed = 10
	self.count = 0
	self.bounds = {
		minX = 1,
		maxX = 14,
		minY = 1,
		maxY = 12
	}
	checkSnakeFruit(self)
	-- TODO play a sound?
	self.die = initSnake
end

function drawSnake(self)
	if self.fruit then
		palt()
		spr(12, self.fruit.x * 8, self.fruit.y * 8)
	end
	for segment in all(self.body) do
		spr(11, segment.x * 8, segment.y * 8)
		-- if segment == self.body[1] then
		-- 	pset(segment.x*8, segment.y *)
		-- end
	end
end

function updateSnakePhys(self)

	local head = self.body[1]

	head = {
		x = head.x,
		y = head.y
	}

	-- Set direction. But careful about qdir
	if (self.dir == dirs.left and self.qdir == dirs.right)
		or 
		(self.qdir == dirs.left and self.dir == dirs.right)
		or
		(self.dir == dirs.up and self.qdir == dirs.down)
		or 
		(self.qdir == dirs.up and self.dir == dirs.down)
	then

	else
		self.dir = self.qdir
	end

	if self.dir == dirs.left then
		head.x -= 1
	elseif self.dir == dirs.right then
		head.x += 1
	elseif self.dir == dirs.up then
		head.y -= 1
	else
		head.y += 1
	end

	if head.x < self.bounds.minX then
		head.x = self.bounds.maxX
	elseif head.x > self.bounds.maxX then
		head.x = self.bounds.minX
	elseif head.y < self.bounds.minY then
		head.y = self.bounds.maxY
	elseif head.y > self.bounds.maxY then
		head.y = self.bounds.minY
	end

	checkSnakeFruit(self)

	add(self.body, head, 1)
	if self.ateFruit then
		self.ateFruit = false
	else
		self.body[#self.body] = nil
	end
end

function myrand(min, max)
	return min + rnd(max - min)
end

function checkSnakeFruit(self)
	if self.fruit != nil then
		local head = self.body[1]
		if head.x == self.fruit.x and
			head.y == self.fruit.y then
			self.ateFruit = true
			self.fruit = nil
		end
	end

	if self.fruit == nil then
		self.fruit = {
			x = flr(myrand(self.bounds.minX, self.bounds.maxX)),
			y = flr(myrand(self.bounds.minY, self.bounds.maxY))
		}
	end
end

function updateSnake(self)
	if btnp(dirs.left) then
		self.qdir = dirs.left
	elseif btnp(dirs.right) then
		self.qdir = dirs.right
	elseif btnp(dirs.up) then
		self.qdir = dirs.up
	elseif btnp(dirs.down) then
		self.qdir = dirs.down
	elseif btnp(dirs.z) then
		gs:breakCabinet()
		return
	end

	self.count += 1
	if self.count < self.simSpeed then
		return
	end

	-- Otherwise, reset the count
	self.count = 0

	updateSnakePhys(self)

	local head = self.body[1]
	for i = 2, #self.body do
		local segment = self.body[i]
		if segment.x == head.x and
			segment.y == head.y then
			self:die()
			return
		end
	end
end

	globalBounds = {
		minX = 1 * 8 + 4,
		maxX = 14 * 8 + 4,
		minY = 1 * 8,
		maxY = 12 * 8
	}

function getSnakeCabinet()
	return {
		isSolved = false,
		cabColor = 2,
		init = initSnake,
		draw = drawSnake,
		update = updateSnake
	}
end

function initSpace(self)
	self.swarm = {}
	-- self.swarmVX = -100
	-- self.swarmFireRate = 0.00
	self.swarmVX = -10
	self.swarmFireRate = 0.001
	self.swarmVY = 3
	self.dt = 1/30.0
	self.die = initSpace
	self.win = initSpace
	self.player = {
		x = 64,
		y = 90,
		speed = 30,
		fireRate = 15,
		cooldown = 0
	}
	self.playerShots = {}
	self.enemyShots = {}--{ {x=64, y = 80, vy = 5	} }
	self.bounds = {
		minX = 1 * 8,
		maxX = 14 * 8,
		minY = 1 * 8,
		maxY = 12 * 8
	}
	for i = 1, 8 do
		for j = 1, 5 do
			add(self.swarm, {
				x = i * 10,
				y = j * 8 + 2
			})
		end
	end

	self.getSwarmPos = function(self)
		local minX = 1000
		local maxX = -1000
		local minY = 1000
		local maxY = -1000
		for bug in all(self.swarm) do
			minX = min(bug.x, minX)
			minY = min(bug.y, minY)

			maxX = max(bug.x, maxX)
			maxY = max(bug.y, maxY)
		end
		return {
			minX = minX - 2,
			maxX = maxX + 1,
			minY = minY,
			maxY = maxY + 8
		}
	end

end


function drawSpace(self)
	for bug in all(self.swarm) do
		spr(27, bug.x, bug.y)
	end

	for shot in all(self.playerShots) do
		color(7)
		line(shot.x + 4, shot.y + 4, shot.x + 4, shot.y)
	end

	for shot in all(self.enemyShots) do
		color(11)
		line(shot.x + 4, shot.y + 4, shot.x + 4, shot.y)
	end

	spr(28, self.player.x, self.player.y)
end

function acceptSpace(self)
	if btn(dirs.left) then
		if self.player.x > self.bounds.minX then
				self.player.x -= self.player.speed * self.dt
		end
	end
	if btn(dirs.right) then
		if
			self.player.x < self.bounds.maxX then
				self.player.x += self.player.speed * self.dt
		end
	end
	if btn(dirs.x) and self.player.cooldown <= 0 then
		self.playerShots[#self.playerShots + 1] = makeShot(self.player)
		self.player.cooldown = self.player.fireRate
		-- print(#self.playerShots)
	end
	self.player.cooldown = max(self.player.cooldown-1, 0)

	if btnp(dirs.z) then
		gs:breakCabinet()
	end
end

function makeShot(player, isenemy)
	local vy = -100
	if isenemy then
		vy = 50
	end
	return {
		x = player.x,
		y = player.y,
		vy = vy
	}
end

-- function shotCollide(entity1, entity2)

-- end

function updateSpace(self)
	acceptSpace(self)

	local godown = false
	local pos = self:getSwarmPos()
	if (pos.minX) < self.bounds.minX then
		self.swarmVX = abs(self.swarmVX)
		godown = true
	elseif (pos.maxX) > self.bounds.maxX then
		self.swarmVX = -abs(self.swarmVX)
		godown = true
	end

	for bug in all(self.swarm) do
		bug.x += self.swarmVX * self.dt
		if godown then
			bug.y += self.swarmVY
			if bug.y > self.bounds.maxY then
				self:die()
				return
			end
		end
		if rnd() < self.swarmFireRate then
			add(self.enemyShots, makeShot(bug, true))
		end
	end

	if #self.swarm == 0 then
		self:win()
		return
	end

	self.deadBugs = {}
	local toRemove = {}

	for shot in all(self.playerShots) do
		shot.y += shot.vy * self.dt
		
		if shot.y < 0 then
			add(toRemove, shot)
		end

		for bug in all(self.swarm) do
			if abs(bug.x - shot.x) < 4 and
				abs(bug.y + 3 - shot.y) < 6 then
				-- bug.isDead = true
				add(self.deadBugs, bug)
				add(toRemove, shot)
				break
			end
		end
	end

	for shot in all(self.enemyShots) do
		shot.y += shot.vy * self.dt
		if shot.y > 128 then
			add(toRemove, shot)
		end
		if abs(self.player.x - shot.x) < 3 and
			abs(self.player.y + 7 - shot.y) < 6 then
			self:die()
			return
		end
	end


	for myshot in all(toRemove) do
		del(self.playerShots, myshot)
	end

	for bug in all(self.deadBugs) do
		del(self.swarm, bug)
	end

end

function getSpaceInvadersCabinet()
	return {
		isSolved = false,
		cabColor = 13,
		init = initSpace,
		draw = drawSpace,
		update = updateSpace
	}
end

function _init()
	gs = {
		breakCabinet = function(self)
			self.cabIndex += 1
			if self.cabIndex > #self.cabinets then
				self.isWin = true
			end
		end,
		getCursorMapIndex = function(self)
			return {
				x = 16 * (self.cabIndex - 1) + gs.cursor.x,
				y = gs.cursor.y
			}
		end,
		pickChip = function(self)
			local curLoc = self:getCursorMapIndex()
			self.selectedSpriteNumber = mget(curLoc.x, curLoc.y)
			mset(curLoc.x,
				curLoc.y,
				0)
		end,
		writeChip = function(self)
			-- local celx = 16 * (self.cabIndex - 1) + gs.cursor.x
			local curLoc = self:getCursorMapIndex()
			mset(
				curLoc.x,
				curLoc.y,
				gs.selectedSpriteNumber)
			gs.selectedSpriteNumber = nil
		end,
		cursor = {x = 8, y = 8},
		selectedSpriteNumber = nil,
		getFocusedSpriteNumber = function(self)
			local celx = (self.cabIndex - 1) * 16 + gs.cursor.x
			local ret = mget(celx, gs.cursor.y)
			if ret < 32 then
				return 0
			end
			return ret
		end,
		cabinets = {
			getPongCabinet(),
			getSnakeCabinet(),
			getSpaceInvadersCabinet()
		},
		cabIndex = 1,
		getCab = function(self)
			return self.cabinets[self.cabIndex]
		end
	}

	parsePieces(gs.cabinets[1], 1)
	parsePieces(gs.cabinets[2], 2)
	parsePieces(gs.cabinets[3], 3)

	for cab in all(gs.cabinets) do
		cab:init()
	end

	-- gs.cabinets[3].isSolved = true
	-- gs.cabIndex = 3
end

dirs = {
	left = 0,
	right = 1,
	up = 2,
	down = 3,
	z = 4,
	x = 5
}

function acceptCircuitInput()
	if btnp(dirs.left) then
		if gs.cursor.x > 1 then
			gs.cursor.x -= 1
		end
	elseif btnp(dirs.right) then
		if gs.cursor.x < 14 then
			gs.cursor.x += 1
		end
	elseif btnp(dirs.up) then
		if gs.cursor.y > 1 then
			gs.cursor.y -= 1
		end
	elseif btnp(dirs.down) then
		if gs.cursor.y < 14 then
			gs.cursor.y += 1
		end
	elseif btnp(dirs.x) then
		local spriteNumber = gs:getFocusedSpriteNumber()
		if spriteNumber == 0 and gs.selectedSpriteNumber != nil then
			gs:writeChip()
		elseif fget(spriteNumber, 0) and gs.selectedSpriteNumber == nil then
			gs:pickChip()
		end
	elseif btnp(dirs.z) then
		if gs.selectedSpriteNumber == nil then
			return
		end

		gs.selectedSpriteNumber = rotateSprite(gs.selectedSpriteNumber)
		-- local base = getBaseSpriteNumber(gs.selectedSpriteNumber)

	end
end

function _update()
	if gs.isWin then
		if btnp(dirs.x) then
			reload()
			_init()
		end
		return
	end
	local cab = gs:getCab()

	if cab.isSolved then
		cab:update()
	else
		-- Do stuff for solving the puzzle
		acceptCircuitInput()

		checkSolved()
	end
end

function checkSolved()
	local cab = gs:getCab()

	for cel in all(cab.solution) do
		if mget(cel.x, cel.y) != cel.spriteNumber then
			return
		end
	end

	cab.isSolved = true
end

function drawCircuits()

	palt(0, true)
	palt(3, true)
	palt(14, true)
	map((gs.cabIndex - 1) * 16, 0, 0, 0, 16, 16)
end

function drawCabinet()
	local cab = gs:getCab()

	-- Do stuff for solving the puzzle
	local celx = (gs.cabIndex - 1) * 16
	rectfill(0, 0, 128, 128, 3)
	rectfill(0, 104, 128, 128, cab.cabColor)
end

function drawCursor()
	local spriteNumber = gs:getFocusedSpriteNumber()
	
	-- color(0)
	-- print(spriteNumber)
	-- assert(false)

	local x = gs.cursor.x * 8
	local y = gs.cursor.y * 8
	local cursorColor = 8
	if spriteNumber == 0 then
		cursorColor = 7
	elseif fget(spriteNumber, 0) then
		if gs.selectedSpriteNumber == nil then
			cursorColor = 9
		else
			cursorColor = 8
		end	
	end

	if gs.selectedSpriteNumber != nil then
		spr(gs.selectedSpriteNumber, gs.cursor.x * 8, gs.cursor.y * 8)
	end

	rect(x-1, y-1, x+8, y+8, cursorColor)
end

function _draw()
	cls(0)
	if gs.isWin then
		color(7)
		print('\n you win!\n\n press ❎ to play again')
		return
	end

	local cab = gs:getCab()

	drawCabinet()
	drawCircuits()

	if cab.isSolved then
		rectfill(8, 8, 120-1, 128 - 24, 0)
		clip(8, 8, 128 - 16, 128 - 32)
		cab:draw()
	else

		drawCursor()
	end

	palt()
end

__gfx__
000000001111111122222222dddddddd333333330000000000000000000000000000000000000000000000003333333300440333000000000000000000000000
000000001111111122222222dddddddd333333330000000000000000000000000000000000000000000000003bbbbbb300044330000000000000000000000000
007007001111111122222222dddddddd333333330000000000000000000000000000000000000000000000003bbbbbb308884880000000000000000000000000
000770001111111122222222dddddddd333333330000000000000000000000000000000000000000000000003bbbbbb388888878000000000000000000000000
000770001111111122222222dddddddd333333330000000000000000000000000000000000000000000000003bbbbbb388888888000000000000000000000000
007007001111111122222222dddddddd333333330000000000000000000000000000000000000000000000003bbbbbb388888888000000000000000000000000
000000001111111122222222dddddddd333333330000000000000000000000000000000000000000000000003bbbbbb388888888000000000000000000000000
000000001111111122222222dddddddd333333330000000000000000000000000000000000000000000000003333333308800880000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b00b0000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbbbb000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0bbbb0b00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bb0bb0bb00005000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbb0000005000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bb00bb000055500000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0000b000555550000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000555550000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333363636333333333333333333333333333333333336363633363636333333333333363333333633333336063333333333333333333333333333333333
66666666363636333333333333333333666666333666666636363666663636333333333333555533333635563335553333333333333333333333333333333333
33333333363636333333333333333333333336333633333336363333333636333555555333555533333555503335553333333333333333333333333333333333
66666666363636333333333333333333666636333636666636366666666636336555555633555566655555566655553333333333333333333333333333333333
33333333363636333333333333333333333636333636333336333333333336333555555333555533055555503355553333333333333333333333333333333333
66666666363636333333333333333333663636333636366636666666666666333555555333555533655555563555553333333333333333333333333333333333
33333333363636333333333333333333363636333636363333333333333333333336333333555533333333333555553333333333333333333333333333333333
33333333363636333333333333333333363636333636363333333333333333333336333333363333333333333606063333333333333333333333333333333333
33333333333636333333333333333333333333333333333333363633333636333333333333333333333333333333333333333333333333333333333333333333
33333333333636333333333333333333333333333333333333363633333636333333333333333333333333333333333333333333333333333333333333333333
33333333333636333333333333333333333333333333333333363633333636333333333333333333333333333333333333333333333333333333333333333333
66666666333636333333333333333333666666333336666633363666666636333333333333333333333333333333333333333333333333333333333333333333
33333333333636333333333333333333333336333336333333363333333336333333333333333333333333333333333333333333333333333333333333333333
66666666333636333333333333333333666636333336366633366666666666333333333333333333333333333333333333333333333333333333333333333333
33333333333636333333333333333333333636333336363333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333636333333333333333333333636333336363333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333633333333333333333333333333333333333333363333333633333333333333333333333333333333333333333333333333333333333333333333
33333333333633333333333333333333333333333333333333363333333633333333333333333333333333333333333333333333333333333333333333333333
33333333333633333333333333333333333333333333333333363333333633333333333333333333333333333333333333333333333333333333333333333333
66666666333633333333333333333333666633333336666633366666666633333333333333333333333333333333333333333333333333333333333333333333
33333333333633333333333333333333333633333336333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333633333333333333333333333633333336333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333633333333333333333333333633333336333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333633333333333333333333333633333336333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
35555555555555535555555336363633e55555555555555e5555555ee6e6e6eeeee606eeeeeeeeeee6e6e6eeeee6eeee00000000000000000000000000000000
65555555555555535555555655555553655555555555555e555555565555555eeee555ee65555556e55555ee6556eeee00000000000000000000000000000000
35555555555555535555555355555553e55555555555555e5555555e5555555eeee555ee05555550e55555ee05555eee00000000000000000000000000000000
65555555555555535555555655555553655555555555555e555555565555555e665555ee65555556ee5555666555555600000000000000000000000000000000
35555555555555535555555355555553e55555555555555e5555555e5555555eee5555eeeee55550ee5555ee0555555000000000000000000000000000000000
65555555555555535555555655555553655555555555555e555555565555555ee55555eeeee6e556eee555ee6555555600000000000000000000000000000000
35555555555555535555555355555553e55555555555555e5555555e5555555ee55555eeeee6eeeeeee555eeeeeeeeee00000000000000000000000000000000
33333333363636333333333355555553eeeeeeeee6e6e6eeeeeeeeee5555555ee60606eeeee6eeeeeee6e6eeeeeeeeee00000000000000000000000000000000
3333333333ccccc33333333333363633eeeeeeeeeeccccceeeeeeeeeeee6e6ee36363633355555533636363336363633e6e6e6eeeeeeeeeee6e6e6eee6e6e6ee
3333333333ccccc33333333333ccccc3eeeeeeeeeeccccceeeeeeeeeeeccccce655555536555555655555566655555566555555e65555556e555555665555556
3c3ccccc33ccccc3ccccc3c3333ccc33ececcccceeccccceccccceceeeecccee35555553355555535555553335555553e555555ee555555ee555555ee555555e
6ccccccc33ccccc3ccccccc633ccccc36ccccccceeccccceccccccc6eeccccce655555536555555655555566655555566555555e65555556e555555665555556
3ccccccc33ccccc3ccccccc333ccccc3eccccccceeccccceccccccceeeccccce35555553355555535555553335555553e555555ee555555ee555555ee555555e
6ccccccc333ccc33ccccccc633ccccc36ccccccceeeccceeccccccc6eeccccce655555536555555655555566655555566555555e65555556e555555665555556
3c3ccccc33ccccc3ccccc3c333ccccc3ececcccceeccccceccccceceeeccccce35555553363636335555553335555553e555555ee555555ee555555ee555555e
33333333333636333333333333ccccc3eeeeeeeeeee6e6eeeeeeeeeeeeccccce36363633363636333636363333333333e6e6e6eee6e6e6eee6e6e6eeeeeeeeee
33363333363636333333333336363633eee6eeeee63636eeeeeeeeeee63636eeeee6e6eeeeeeeeeeeee6e6eeeee6e6eeeee6eeeeeee6e6eeeeeeeeeeeee6e6ee
6555555635555533655555563555553365555556e55555ee65555556e55555eee555555ee555555ee555555ee555555ee555555ee55555eee555555ee55555ee
35555553355555333555555335555533e555555ee55555eee555555ee55555eee555555ee555555ee555555ee555555ee555555ee55555eee555555ee55555ee
6555555665555533655555563555556665555556655555ee65555556e55555666555555e65555556e55555566555555665555556655555ee65555556e5555566
35555553355555333555555335555533e555555ee55555eee555555ee55555eee555555ee555555ee555555ee555555ee555555ee55555eee555555ee55555ee
6555555635555533655555563555553365555556e55555ee65555556e55555ee6555555e65555556e55555566555555665555556e55555ee65555556e55555ee
33333333355555333336333335555533eeeeeeeee55555eeeee6eeeee55555eee555555ee555555ee555555ee555555eeeeeeeeee55555eeeee6eeeee55555ee
33333333363636333336333336363633eeeeeeeee6e6e6eeeee6eeeee63636eeeee6e6eeeee6e6eeeee6e6eeeeeeeeeeeeeeeeeeeee6e6eeeee6eeeeeee6e6ee
33333333333333333636363336363633eeeeeeeeeeeeeeeee6363633363636eeeeeeeeeeeeeeeeeeeee6e6eeeee6e6ee00000000000000000000000000000000
655555533555555635555556655555536555555ee5555556e55555566555555ee555555ee555555ee555555ee555555e00000000000000000000000000000000
355555533555555335555553355555533555555ee555555ee55555533555555ee555555ee555555ee555555ee555555e00000000000000000000000000000000
655555533555555635555556655555536555555ee5555556e55555566555555e6555555ee5555556e55555566555555e00000000000000000000000000000000
355555533555555335555553355555533555555ee555555ee55555533555555ee555555ee555555ee555555ee555555e00000000000000000000000000000000
655555533555555635555556655555536555555ee5555556e55555566555555e6555555ee5555556e55555566555555e00000000000000000000000000000000
355555533555555335555553355555533555555ee555555ee555555ee555555ee555555ee555555ee555555ee555555e00000000000000000000000000000000
36363633363636333333333333333333363636eee63636eeeeeeeeeeeeeeeeeeeee6e6eeeee6e6eeeeeeeeeeeeeeeeee00000000000000000000000000000000
33333333333333333336363333363633eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000
33333333333333333336363333363633eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000
33333333333333333336363333363633eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000
66666633333666663336366666663633eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000
33333633333633333336333333333633eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000
66663633333636663336666666666633eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000
33363633333636333333333333333333eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000
33363633333636333333333333333333eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333355555566666666665555553333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333355555533333333335555553333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333355555566666666665555553333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333355555533333333335555553333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333355555566666666665555553333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333355555533333333335555553333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333363636333333333336363633333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333335555555333333333363636333333333336363633333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333335555555333333333363636333333333336363633333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333335555555333333333363636333333333336363633333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333335555555333333333363636333333333336363633333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333335555555333333333363636333333333336363633333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333335555555333333333363636333333333336363633333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333335555555333333333363636333333333336363633333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333636363333333333363636333333333336363633333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333636363333333333363636333333333336363633333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333555553333333333355555333333333335555533333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333555553333333333355555333333333335555533333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333555556666666666655555333333333335555566666666663333333333333333333333333333333322222222
22222222333333333333333333333333333333333555553333333333355555333333333335555533333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333555553333333333355555333333333335555533333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333555553333333333355555333333333335555533333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333636363333333333363636333333333336363633333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333636363333333333363636333333333336363633333333333636363333333333333333333333333322222222
22222222333333333333333333333333333333333636363333333333363636333333333336363633333333333636363333333333333333333333333322222222
22222222333333333333333333333333333333333636363333333333363636333333333336363633333333333636363333333333333333333333333322222222
22222222333333333333333333333333333333333636363333333333363636333333333336363633333333333636363333333333333333333333333322222222
22222222333333333333333333333333333333333636363333333333363636333333333336363633333333333636363333333333333333333333333322222222
22222222333333333333333333333333333333333636363333333333363636333333333336363633333333333636363333333333333333333333333322222222
22222222333333333333333333333333333333333636363333333333363636333333333336363633333333333636363333333333333333333333333322222222
22222222333333333333333333333333333333333636363333333333363636333333333336363633333333333636363333333333333333333333333322222222
22222222333333333333333333333333333333333636363333333333363636333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333636366666666666655555566666666633333333666666663333333333333333333333333333333322222222
22222222333333333333333333333333333333333636333333333333355555533333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333636666666666666655555566666666633333333666666663333333333333333333333333333333322222222
22222222333333333333333333333333333333333633333333333333355555533333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333666666666666666655555566666666633333333666666663333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333355555533333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333337777777777333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333337333333337333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333337333333337333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333337333333337333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333337333333337333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333337333333337333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333337333333337333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333337333333337333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333337333333337333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333337777777777333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222226262622222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222225555556222222226555555622222222655555562222222222222222222222222222222222222222
22222222222222222222222222222222ccccc2c22222222225555552222222222555555222222222255555522222222222222222222222222222222222222222
22222222222222222222222222222222ccccccc62222222225555556222222226555555622222222655555562222222222222222222222222222222222222222
22222222222222222222222222222222ccccccc22222222225555552222222222555555222222222222555522222222222222222222222222222222222222222
22222222222222222222222222222222ccccccc62222222225555556222222226555555622222222222625562222222222222222222222222222222222222222
22222222222222222222222222222222ccccc2c22222222225555552222222222555555222222222222622222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222626262222222222222622222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222

__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002020000000000000000000000000000020200000000000000000000000000000202000000000000000000000000000000000000000000000000000000000000
0000000001010101010101010000000000000000010101010000000001010101000000000101010101010101010101010000000001010101010101010000000000000000010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010102020202020202020202020202020202030303030303030303030303030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000102000000000000000000000000000002030000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000102000000000000000000000000000002030000000000000000000091000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000102000000000000000000000000000002030000b14099404400000051000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000095000000000102000000000000b140b0000000000002030000410041004100000051000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01000000000000000000510000000001020000000081004100410095000000020300008300b2448a6048604b000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010000000000810065608800000000010200000000a360a100a36088000000020300000000008aad00610041000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000004100610041000000000102000000004100410041004100000002030000000000baa8004960a1000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010000000000b240a040b70000000001020000000046409b409f40b700000002030000000000005100610041000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01000000000000000000000000000001020000000000000000000000000000020300000000000056504a409b408000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000102000000000000000000000000000002030000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000102000000000000000000000000000002030000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000102000000000000000000000000000002030000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010102020202020202020202020202020202030303030303030303030303030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010101010101b50196018b0101010101020202029602b6029d0289020202020203030389038903ae03bb03aa030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010102020202020202020202020202020202030303030303030303030303030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000


__meta:cart_info_start__
cart_type: game
game_name: Minigame mania
# Leave blank to use game-name
game_slug: 
jam_info:
  - jam_name: TriJam
    jam_number: 100
    jam_url: null
    jam_theme: Retro Games
tagline: Repair arcade cabinets and then play them!
develop_time: 4h 3m 21s
description: |
  Repair the arcade cabinets by placing the chips in the right position on the circuit board. When the board is fixed, you can play the game!
controls:
  - inputs: [ARROW_KEYS]
    desc:  move cursor / move chip
  - inputs: [X]
    desc:  pick up / place chip
  - inputs: [Z]
    desc:  rotate chip that is currently picked up
  - inputs: [ARROW_KEYS]
    desc:  move
  - inputs: [X]
    desc:  shoot (if applicable)
  - inputs: [Z]
    desc:  move onto next arcade cabinet
hints: ''
acknowledgements: ''
to_do: []
version: 0.1.0
img_alt: Circuit board with missing components

number_players: [1]
__meta:cart_info_end__
