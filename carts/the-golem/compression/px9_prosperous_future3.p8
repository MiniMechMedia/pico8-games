pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- px9 data compression v9
-- by zep & co.
--
-- changelog:
--
-- v9:
--  @pancelor
--  ★ redo bitstream order
--  234 tokens (but ~4% slower)
--
-- v8:
--  @pancelor
--  ★ smaller vlist initialization
--  241 tokens
--
-- v7:
--  smaller vlist_val by @felice
--  7b -> 254 tokens (fastest)
--  7a -> 247 tokens (smallest)
--
-- v6:
--  smaller vlist_val by @p01
--  -> 258 tokens
--
-- v5:
--  fixed bug found by @icegoat
--  262 tokens (the bug was caused by otherwise redundant code!)
--
-- v4:
--  @catatafish
--  ★ smaller decomp
--
--  @felice
--  ★ fix bit flush at end
--  ★ use 0.2.0 functionality
--  ★ even smaller decomp
--  ★ some code simpler/cleaner
--  ★ hey look, a changelog!
--
-- v3:
--  @felice
--  ★ smaller decomp
--
-- v2:
--  @zep
--  ★ original release
--
--[[

	features:
	★ 273 token decompress
	★ handles any bit size data
	★ no manual tuning required
	★ decent compression ratios


	██▒ how to use ▒██

	1. compress your data

		px9_comp(source_x, source_y,
			width, height,
			destination_memory_addr,
			read_function)
				
		e.g. to compress the whole
		spritesheet to the map:
		
		px9_comp(0,0,128,128,
			0x2000, sget)

	…………………………………
	2. decompress
	
		px9_decomp(dest_x, dest_y,
			source_memory_addr,
			read_function,
			write_function)

		e.g. to decompress from map
		memory space back to the
		screen:
		
		px9_decomp(0,0,0x2000,
			pget,pset)

		…………………………………

		(see example below)

		note: only the decompress
		code (tab 1) is needed in
		your release cart after
		storing compressed data.
		
]]

function _init()

	-- test: compress from
	-- spritesheet to map, and
	-- then decomp back to screen

	cls()
	print("compressing..",5)
	flip()

	w=128 h=128
	raw_size=(w*h+1)\2 -- bytes

	ctime=stat(1)

	-- compress spritesheet to map
	-- area (0x2000) and save cart

	clen = px9_comp(
		0,0,
		w,h,
		0x2000,
		sget)

	ctime=stat(1)-ctime

	--cstore() -- save to cart

	-- show compression stats
	print("                 "..(ctime/30).." seconds",0,0)
	print("")
	print("compressed spritesheet to map",6)
	ratio=tostr(clen/raw_size*100)
	print("bytes: "
		..clen.." / "..raw_size
		.." ("..sub(ratio,1,4).."%)"
		,12)
	print("")
	print("press ❎ to decompress",14)

	memcpy(0x7000,0x2000,0x1000)

	-- wait for user
	repeat until (btn(❎) or true)

	print("")
	print("decompressing..",5)
	flip()

	-- save stats screen
	local cx,cy=cursor()
	local sdata={}
	for a=0x6000,0x7ffc do
		sdata[a]=peek4(a)
	end

	dtime=stat(1)

	-- decompress data from map
	-- (0x2000) to screen

	px9_decomp(0,0,0x2000,pget,pset)

	dtime=stat(1)-dtime

	-- wait for user
	repeat until (btn(❎) or true)

	-- restore stats screen
	for a,v in pairs(sdata) do
		poke4(a,v)
	end

	-- add decompression stats
	print("                 "..(dtime/30).." seconds",cx,cy-6,5)
	print("")

end

-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 8 and
	-- 15 bits long with the next
	-- bits in these positions:
	--   0b0000.12345678...
	-- (1 is the next bit in the
	--   stream, 2 is the next bit
	--   after that, etc.
	--  0 is a literal zero)
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<8 then
			-- cache next 8 bits
			cache_bits+=8
			cache+=@src>>cache_bits
			src+=1
		end

		-- shift requested bits up
		-- into the integer slots
		cache<<=bits
		local val=cache&0xffff
		-- remove the integer bits
		cache^^=val
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)
		end
	end
end

-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function
	px9_comp(x0,y0,w,h,dest,vget)
	local mytable = {}
	local dest0=dest
	local bit=1
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	local cache,cache_bits=0,0
	function putbit(bval)
	 cache=cache<<1|bval
	 cache_bits+=1
		if cache_bits==8 then
			mytable[dest] = cache
			poke(dest,cache)
			dest+=1
			cache,cache_bits=0,0
		end
	end

	function putval(val, bits)
		for i=bits-1,0,-1 do
			putbit(val>>i&1)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if cache_bits>0 then
		-- flush
		mytable[dest] = cache<<8-cache_bits
		poke(dest,cache<<8-cache_bits)
		dest+=1
	end

	local str = ''
	for i = dest0, dest do
		-- str ..= (chr(mytable[i]))
		str ..= chr(peek(i))
	end
	str = escape_binary_str(str)
	print('' .. dest-dest0 .. ', ' .. #str) -- .. dest0 .. ', ' .. dest .. ', ' .. str)
	printh(str, 'output.bin')
	printh(str, '@clip')
	return dest-dest0
end

function byte_to_hex(byte)
	local hi = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte\16]
	local lo = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte%16]
	return '\\x' .. hi .. lo
end

function escape_binary_str(s)
 local out=""
 for i=1,#s do
  local c  = sub(s,i,i)
  local nc = ord(s,i+1)
  local pr = (nc and nc>=48 and nc<=57) and "00" or ""
  local v=c
  if(c=="\"") v="\\\""
  if(c=="\\") v="\\\\"
  if(ord(c)==0) v="\\"..pr.."0"
  if(ord(c)==10) v="\\n"
  if(ord(c)==13) v="\\r"
  if(ord(c)==9) v="\\t"
  	-- v = byte_to_hex(ord(c))
  out..= v
 end
 return out
end
-- 40% - 50%
-- 14 images per cart...
-- dw = 8 images per cart...

__gfx__
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777776777776777777777767777767777777777777777777767777777777777777777777777
77777777777777777777777777777777777777777777777777777777677777777777677767777777777777677767776777677777776777677777777777777777
77777777777777777777777777777777777777777777777777767777777777777777777777777777777777777777777777777777777777777776777677777777
77777777777777777777777777777777777777776776776776777777777777777777777777777777777777777777777777777777777777777777777777776777
77777777777777777777777777777776776776777777777777777767777777677777777777777767777777777777777777777777777777777777777777777777
77777777777777777777777777767777777777777777777777777777767767777777777777777777776777777777777777777677767777777777777777777777
77777777777777777777777776777777777777777677767767776777777777777677677777677777777777767777777677767777777777767777777777777777
77777777777777777777776777777767777777677777777777777777777777777777777677777777777777777776777777777777777777777777677776777777
77777777777777777776777777777777776777777777777777777777777777677777777777777777777776777777777777777777777777777777777777777777
77777777777777777677777777777777777777777777777777777777677767777767777777777776777677777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777776776776777777777777777777777777777777767777777777777777777
77777777777777677777777777777777777777777777777777777677777777777777777777777777777777777776777677777777767777777767777777777777
77777777777777777777777777777777777777777777677777677777777777777777777777777777677777777777777777776777777777777777777677767777
77777777777777777777777776777767777777777767777777777777777777777777677777777777777777777777777777777777777777777777777777777777
77777777777767777777777777777777777777677777777777777777777777777777777777776777777777777677777777777777777777777777777777777777
77777777777777776777777777777777777767777777777777777777777777677776777777777777776777777777776777677777677777776777777777777777
77777777777777777777777777777777777777777777777777777777776777777777777776777777777777777777777777777777777776777777767777777777
77777777777777777777767777777777777777777777777777777777777777677776777677777776777776777777777777777777777777777777777777777777
77777777777677776777777777777777767777777777777776777677777777777777677777777777777777777777777777777677777777777777777777677777
77777777777777776777777677777677777777777777777777777777777777677776677777777777777777777777677767777777777677777777777767777777
77777777777777776777777777777777777777777777777777777777777777677777677777777677777777777767777777777777767777777767776777777777
77777777777777777677777677777777777777777777776777777777767777677776677777777777776777777777777777777777777777777777777777777777
77777777777777776777777677777777777777777777677777777776777777677777677777777777777776777777777777767776777777776777777777777777
77777777777767776777777677777777777767777677777777767777777776777776677777767777777777777777777777777777777777777777777777777777
77777777777777776777777677777777776777777777777777777777777777677776f77777777777677777777777777767777777777777777777777777777777
77777777777777776777777677777776777777777777777777777777777776677776677777777777777777777767777777777777777776777777677777677777
77777777777777776777777667777777777777777777777777777776777777677776677777777767777777776777777777777777777677777767777767777777
77777777777777776777777677777777777777777777777767776777777767677776f67777677777777777677777776777776777677777777777777777777777
77777777777777776777777667777777777777777777777777777777777776677776677677776777777767777777777777777777777777776777677777777777
77777777777677776777777667777776777777677767777777777777776767677776f67677776677777777777777777777677777777777777777777777777777
77777777777777776bdad66a77777777777767777777777777777777776776f67776f6f677777677777777777777777777777777777777776777677777776777
777777777777776da55335b5d667777777777777777777677767777777676f6777766f75f7776f77777777777777767777777777677767777677767776777777
77777777777777db4b455555b4a67777777777777777777777777767776a6bf67776a6ba67777677777777777776777777777767777777776777677777777777
77777777777777a5a5b9b5595b477777767777777777777777777777776b444ad6da3a5477776f77777677776777777777677777777777777677767777777777
77777777777677b65a555535ada67777777777777767777777776777776a55b64b95d45a67776677777777777777777777777777777777767777677777777777
77777777777777d5b553555b4ad67777777777767777776776777777776b444adada6b43f7776777777777777777777777777777777767777677677777777777
76777777777777b4455555555bd67776777776777777777777777777776a5abd55a34a5967776f77777777677777777767777677776777666f776f6777776777
776777776777776b5b55555b45a66777776777777777777777777776776ba66a6add67db77776777777767777777767777777777777776aab9dabaab77777777
767777777777775a55b435555b56777777777777777767777777767777693f66d66a6fa57777a6777777777777767777777777777777766a5ab49b4a67777777
7f677767777777a3554b44b555bf7767776777777777777777677777776b46adb4b4bf5a6676d777777777777777777777777776777766aba54a5ada67777777
76776777777777b55b4ada55b44f777777777777777777776777776777dab4b44445ffb5abdabf77777777777777777777767767776776a4a5a3adab77777777
7f676777777777d554b555a555a6676777677777776777777777777777b45a5ab4b4a6ab54b44d77767777777677777777777776777776ba5b44ba5a67777777
76776777777677b4b45555b45b5f6767776777777777777777777767764b4b554593d634b49b4a6777777767777777777677777777776a4b94a54b9b77777777
6f67f677777777a555b4554b455a6f777777777767777767777677676b45454b9354ad549345ba77777777777777776777777767677776a5ab4a5a5a67777777
6adfa677777776b5b955b4554b4b4a6766f777777777777777777767a59b4b455a5b4ab46dfa5d7777777777777777777777776777676ab95a665ab977777777
55a355f777776b4a535545b4b4b9ba66a667777777777777777677676b454b455b955a55ab46ba6777777777777777777777777777776a4ab4ab95ab77777777
ad64a5677777d9b559b4b95555b4b4a65a67777777767776777677a6a5ab455b954a35ad59da5a7777677767777677777777776f6a6faba5ada5ab9a67777777
da6db9777777db4bb9b4554b4a5b9ba6adf7777677777777777777dab4b45b445a354a34b4b4b47767777777777777777776776a6aadaa5ab9b9d95a67777777
5da6ad6777776b95454b45a535b9b4bfda67777777777777777677bfa5a45934b4a5b4a59b95ad77777777777777777677777776ad6abaaba4adababa6777777
4b554df777774ad5b4b4555a55454baf66f6777777776777777677adab4a354b455a5a355a5b4a6776777777767777777777776a6f6aa5a4adada4a4a6777777
544b9b777777db4b45555ab55b4ba4a6f6a76777776777776776774664b4b9544ab455a5b4a5a377777777767777767777777776f6abaadada6a5abada777777
55955a677777da59b4b4344b95b4abda6a66f67777777777777677a6b95a5b9b5595ab4a59b4ba7777777777777777777776776a76aadaba6adab4ada6777777
4b45ab4a6777b9b554555b95b44b4ab4bfa6f777777777777776f65aa5b9b95959b459b45a5a5a667777767777777777777777a66fada5a5ab4a4a5aba777767
545b4a5ba677d555b9b459345b44b9ada5abf77777777767776a6a5ab95a54bab45a34a5a3a54bfaa6777777777777777677776aadabaa5a5a5a5baa4a7777a6
4b945bada677ab954b4b4b9544b44b4a5ada77777767777776a5a6badab4a5a54a559ba5a5aba96a6677777777777677777776abaaa6aba5ab9da45abf77776a
445b9da5b777d4b4b49544b9b44b9ba5aba6a67777777777776abfa6959db9b4b4b95a5abada5a6aa67777777767777777776a6a65ab94a5a4abaab94a7776a6
5a545aba4777ab9b95b9ba559b95a5abfadaba6777777777766ffadabab9da5aa4a5a5a5a5ada5a66f777777777777777777aaa6aaadaa5a5aa4a5adab77776a
55a5b4a5a677da54b95b4ab4b4baba5a5a5a6a777777677777a6a6adada5ab9ba5ab9bada5adabfaa677777777777777777666aadadaabaa6badaaba4f7777ad
a55a4a5ab777aba5aba9bada9a5a4abada6a5a6777777777766abadaabaaba4adaadada5abfabafa6f777777777777777776aa6a6aabfadaa4aabaadaa77776a
5aa3abada6776ab9b95a5a6babadadadaaba6a777777777777aa6aadaada4aba6abaa4aaba6afa6a6f777777767777776777a6a6abafaaabaa6aadaabf7777aa
a5adadada777a69da5aba6aa4aaba6aa6a6a6a6777777777766a6a6a6a6a6aadaadada6afa6a6a6fa6777777777777777776fa6a6afa6a6afa6a6aaaaf77776a
6a6a6a6a66776a6aa6afa66a66affa66a6fa6f7777777767776a66a66a6aa6a6a6a6a6a66a6f6a6ff7777777777777777777f6f6fffa6a6a66faa66a6677776a
f6a66f6ff77766a66a66ff6ff66f66f6f6f67677777777777767ff6ff6f666a66f6ff6ff6777f6777777777777777777777777f7767676f7ff666f6fff777777
7777f7f76777776767f6f67f6ff77f7f7777777777777777777777777f6fff6fffffffa6fff6f7777777777777777777777777777777777777777f7677777777
f6f6f6f7f777ffffa6fffff6ffffff6f6ff677777777777777776776f7ff6ff6f67f777776f777777777777777777777777777677f7fffff6f7ff6fff6777777
fafa6a6ff6776a6a6a6a6a6afa6a6a6ffa6fa67777777777776fffffff6faa6afa6f6f6a6fffff677777777777777777777767ff6ff6ffa6fffffffa6f77776f
adadaa6aa677a6babadabfa6aba6abaa6a6a6a777777777776fa6a6a6aa6aba6a6aaaaadaaa6aa6aff777777777777777776fa6afaaaa6aaaa6aaabaaf7777fa
aba5ba5abf77ba4a5ab94a6baabaaadabada6a677777777677a6a6aabada5a5abada3a5abadabafa6a777777777777677776a6aa6a6abada6aaba5a4aa6777af
a5a5a5a5a6f7a5b4b94ba5a45a54ba5adaa5a67667676766f66aaba6aabab4a5a5aa5abafabaadaaa67777767677777676777a6abadaaaababf9daabad6776a6
ba54abada66ab9495b954aba5ab9da5a4abfa6ffa6f6fabaaba6a6a4bada4b4a5a5aba4a5ad69a666a76766aaa6a666f6f76faaa69abada4aa4ab9595aa6f6a6
adb45a5aba5ada35955a34a5a34ab9bada6ada6a6a6fabab4aba6a6fa5a54a5b95a5a4da5aa5ba6a666a6fabababaa6ffffa6a6dadaadaba5a64a5a5aba6a6ad
5a4ab4ada5adab9b4b954ba5a5a5a6a66a66ad6666a66ab9b4b96666ab4b9b495ab9dab4abaa4ba6afa6aaaabaababafa66a6666fa666adaa6ab9daba4666ada
6a66f6666766a66a6abaada6a6bfa6dada66bfa6a666ada5ab96abfada4a59b4b4a5aa4ab4da5afda66a6bab9b49baabfada6a6fadaa6a6666a6a66ff6ff6a66
6b4bada666ad6dada66d6f666ada6abad66a6adb6abada6aba4ba6faba6b9daa6a6666ada6a6a6aada66aab9b9ba4ba6adabada6ba5dada6a6ada6abaa6adba6
64a54db455b9bada66aa6b9abada65a5abf65a5a4df665adadadfad4f6fa66ada6a666bf66d66666a6a66a6a5abaaadabaa6aabad4a666bf6adada5a66adf4da
64b4b94a6aaba6a6a66bad666dab465ad6fa56a5a66a6a36ba5a6da66f6dab5a34baa6faa5aba6ad6bada6a6ab9dbaaaaabaabaaa6aa6a4adab65a65fada666f
64ad46ababaababab6adada5a56ab4a66a6ba666dad6b44a46da6a6a6b9b44b4b9f65ad6666f665a5ada6ab76a6aaababaabaaa6ababaabadada6da666b64666
66666abababb9abaababf6ad6a65a5da6576df6adba6a5bda6a36dbf6ada6a594bf7666666f669badadadaf6a566abaaababababaab4ba64adada666a6a6a6ad
6666ababab9bab4bbab9d66a6badba5bda6ada6b44da5a465adada6f6da55a5baad6a66ada6ad4dad6a6a3aab9baaababab9baabaaabababf66adba6a6dad6da
fadaab9b4b9b5ba35baa6abdf66aada6fd666df4bad6ba5a3dbda55b95ba566fd5a55d55a36a6ad5a66b95a5ab9abaab5b4babababab9aaada66a5a56badaba6
6dabab9bb9b9b9b5b4badaadada6665ada6bfa6545a6add5ada46a5a55466f76ab66adadb96666ada6a46ad66fababb9b4bab9b9bababbaba6dab4ba4adadada
665aaab4b5b5b5b4b9bab6d666db4ab55bff6dab4bf66adadadb65ad6bf5f666a6465a3a4da666a666a6a66a6a6faab5b4b9b9b4b9ab9aba6f66fff666fabf4a
fabab6b4b4b4b45b4b9b934ba5ba554b9df6f6a5a5a6a66bfbfa6ba6776a6ab9db9bad54b46f66abf5ab776abdf6bab459b4b5b4bba4baa5aa6f6f7f7fadabad
66a6aa355b555b5b9bab9b49da4abaa6a6fa6665aba66a6faaa6aaba6a66bada6f5a56adaada6adf66a664b4a5aaba5bb9b9b9b4b9baa3a55baba5a6a6bfdada
66665a5ab4b5b4b4bab934b5aba6a6a66a666a666aabaaaabfabaaaa6a6a666bf6b46adada66ad6a66b95a4adabaab9b9b9b9b4b4b9ba5baa6adadbada6aada6
da35b4b9b95a5abab9bab95a6fab55bada6bf6bfabaababaabaabbabaa666a6a6a5ad666666666a6a69dab4abff6aabab9b4b4b9b9ba6adadf6ada666f666666
4d954fab4bf66a69ab955ba6a6a6aa55b669dfabaabaabababbaabaababab6badbabfa5a66666adb66a6a6a6a6a666aabab9ba4baaaa6766f6f776a6fa6a6a66
ab5ab66ab96a6a666a6abf66a6a6bada46ab46baababbabababbababaaa6b95ba6aa6db4abfadbfff6667666666a6a6aaab9baaa66666a6fff66766f66f666a6
da5559bf66a66666f66aa6766666fdabad6a66aaaabab4bab55b4b5babbaab4bfdba6adab46a6a6a67676776f6666a6666abaa666a6a66a66a6f6f6ff6a6a6a6
665b4b4466666a6f6adbf6ffa6abada5566abf6babab5bab5b9b4b9bbabaaba4a6ab66ba6a6da66a6aba6aba6a6766767abaa66f6666abfa6a6a66a677667666
6a54bfa35ababdba6baa6fa6ba54b4bfa66a6faababb93b9b4b9b5b4b4baababf6a6fa6a5a6a6ab6ada6ada66777777766f66777777677776777777777777777
76ada5a5ba55a4ab9b4bf6adadada7777767776abbab5b9ba5b5b4b5b4baa6a66767776a666666ff6a6bfa6a66676676f7677777777777777777777777777777
66676a66abab4badadb96f6aba5b4776677776abab9babb5bab9b5b9baba66a6f6f66a66a6a6a6f66a6f66666fff6f77777777777777776f6f6f6fa6a6a6a6a6
fff6f66a666f6ad6ba5ba7adadfff666a667676ab9b4bab9b5b5b9b5baa6a6a6a6aa66a6666676f6666f6767f77777776ff6a6a6aabaaabaaaababbabbabbbb5
76a6a6f6777777777ab9666aba7766ad6a66676ababb9b5b5b4b9b5ababababf6a66666f6f7777777777777776fffafaaaaabababbababababaababaababab93
fa6a677777776777776ba76ad666a6ba5b4a66abab4bab4b9b5bb9babaaa6fff6666ff6f677777777777ffafaaa6a6a6a66aaabb9b5b5b5b9bbabababaababa3
6bf66f6777776766a6af66adabffbad4adab46aabababab9b5ab9bababa66f667f6f7777777776fffaaaaa6a6a6aaaaa6aaabaa4b455b9b9baaaaaaaaa6aaaab
4abf6a6a666f6fabad6bab6ada6a6da6dadabf6aababab9b9bbaabaaa67767f6777777776fffafaaa6a6a6aaaaabababab5b453555b45b9aaf66666767fffa6a
666a66a67766bd55b535545a6ad6a6ada6bfa6abfaadaababaabaf666f77777777776ffaaaaa6ababababaababa5a3535555534b555345b9baaaa6f677777677
b935ba66db53513535354bada6a66adabfa6f66f676a6a7fa6ff66a6f777776fffafaaaba6abaaa5a5a5ab4b4b4b55553535b4555b45b553533b5baaaaa6f777
5b455b76b55555b4b5bba5a6bf6a66bffa6a6f6a766a66666a66f67777676afaaa6abaaaaaaab5b9b5b555555555353555555b5b45b545555454b4b3bbbaaa6f
4ab9b96a5b5aaaba5b95a5dafa66a6a6a6666766777676f6f67777776afaa6aa6baaa6a6abab9a5b455b5b5b5b55535535b4b454b455b4b9b4b49345454bbaba
da55a5b9355ab6adab5baba666a666f66a6f677f6776777777776faaa6a6aaabaaa6aaabaa5ab5b9bba9ab9b453535534b455b4b4b9b49345a5b4b9b5b4b4b9b
5bab5a5a3b4a6bba5babada6f666f6fa666f7777777777776faaaa6a6aaabaaaa6aaa6aaabab4ab99abaab935b55b55b5535b9554559b4b9b9b99b4b95a54b4b
5a54b46b4b5ab6ba5abada66fff6f666f7777777777776faaabababaaa6aaba6aa6a6aaaba5abaabaaabab9b4b4b4b4555b45b4b4b4b9495a9ab95a5b4bab993
5b5a5bfab4bfbabfbaba66a66f6f777f76777777776faa6a6abadababaabaaaabaaaab5b9bababaababa9b9b95b4b4b5b45b45b9b445b9bab9b9ab4b99349b4b
4a5ada6dbb9a6afadadbfa677777777777777776faaabababa5abb4b9bababa6afab5ab4b9aaaabab9aaaaaab99b9b94b4b4b4554ba94b94a59b4ab95b9b4b95
b4badbaa5b4abba6abf6666767777777777776faa6baaaab9bb4b4b4ab9b4aaaa6aab5b9baabab45ababaaaaaab9b9b9b4545b4b94ab94b9b4b9b94b9559b9b4
adada566babf6a666f6f677777777777767faaa6baadba3a345b4b9b4ab9bbababb5ab9afaa555bab4baab5baaab9a9b4b9b44b45b9559549b494b9b9b9b49ab
5abdabaababf666ff6f677777777776fffaa6abaaabaa35b4b4b45b4b9b4aaaab4ab54a6ab5b5b45599359b4baaa5b94b45b4b4544b9b5b554b555a5a5aaabaa
dadabad6abff66767677777777767ffa6a6aa6aabadb4b95b4b4b95b4b4bbaaab9b4abab4b45b4b9bb5b55559abaaab45b4554b4b954954b4b95baabaabaa4b9
abfa6bf66bff7777f777777776ffa6a6aaababadab95a5b45555535b4b4b4b5aabaab9b4b4b54b4a5454b55355aab95b45bab95b4b9b3aaaa4aaaa4ab99b9b9a
da6bafa66a6f777777777776ffa6aa6aabfaaadab45b55535b4b9b49b4b9b9aba4ab4b4b455b4ab5b4b45555b4b95b95b994b9b44b49abaabaa6aab95b54b955
aba6a66666f6777777776fffa6afa6a6aaab6ab95b95b55555b4b9b5b9aaaaaab9b55555b4b9b954555b55b49b9b94b95b5a5a5ab9b4b9b9aaa6aaa66cba44dc
6a666a66f6777777776fffa6aa6aabaabadaab9b95b955b4b45b959b4b4abaaab555b4b4b49b95b4b554b95b954b9b9b44b9b4b545a54b9aaaa6abafccbb9edc
__label__

ccccccccccccccccccccccccccc11111111111111ccccccccccccc111111111111111111ccccccccc1111111cccc111111111111111111111111111111111111
ccccccccccccccccccc11cccccccc1111111111111111c1111111111111c111cc11ccc111ccccccccc1111111cccc11111111111111111111111111111111111
ccccccccccccccccccc111cc11cccc11cccc1111111111111111111111ccc11cc111ccc11ccccccccccc1111111ccc1111111111111111111111111111111111
cccccccccccccccccccc11cc111ccccc11111ccc11111111111111111ccccccccc11cccccccccccc11cccc1111111cc111111111111111111111111111111111
cccccccccccccccccccccc1cc11cccccc1cccc111111111111111111cccccccccccc11cccccccccc111cc111111111cc11111111111111111111111111111111
cccccccccccccccccccccc11111ccccccccc111111111111111111cccccccccccccc111cccccccccc11c11111111111cc1111111111111111111111111111111
ccccccccccccccccccccccc11111111111111111ccccc11111ccccccccccccccccccc11cccccccccccc11cccc111111111111111111111111111111111111111
ccccccccccccccccccccc11cccccc111111111cc11cccccccccccccccccccccccccccccccccccccccc11cccccc11111111111111111111111111111111111111
cccccccccccccccccccc111cccc11ccccccccc11111cccccccccccccccccccccccccccccccccccccc111ccccccc1111111111111111111111111111111111111
cccccccccccccccccccc11cccc111cccccccc111c11cccccccccccccccccccccccccccccccccccccc11ccccccccc111111111111111111111111111111111111
cccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11ccccccccccc1111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc11cccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc1111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccc1111ccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccc111cc11c1111c111cccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc11cccc11cccc111ccccc11cccccccccc1111111111111111111111111111
ccccccccccccfffccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccccc11111ccc11111111ccccccccc111111111111111111111111111
ccccccccccffff77fccccccccccccccccccccccccccccccccccccccccccccccccc1cc11cccccc1cccc1111111111111111111111111111111111111111111111
cccccccccfff77777fcccccccccccccccccccccccccccccccccccccccccccccccc11111ccccccccc1111111cccc1111111111111111111111111111111111111
cccccccffff777777fccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111ccccccccc11111111111111111111111111111111111
ccccccffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111cc11ccccccccc111111111111111111111111111111111
cccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11111cccccccccc1111111111111111111111111111111
ccccffff7777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccc111cccccccc111c11ccccccccccccc1111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccc111111111111111111111111111
ccccffff77777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccfff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccfffffff77777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11111111111111111111111111
ccccccfffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccc11111111111111111111111111
77777cffffffff777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777fffffffffffff7777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c11111111111111111111111111
77777777ffffffff7fff77ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111111
77777777ffffff7777fffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c111111111111111111111111111
777777777777777777ffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111c111111111111111111111111111
777777777777777777fffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777777777777777fffcccf77777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
777777777777777777ffffff777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
7777777777777777777fffff7777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
77777777777777777777fffff77777777777fffffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
7777777777777777777777fffffff77777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
777777777777777777777777ffffff77777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffff77777777777777777777fffff77777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
ffffff7777777777777777777fffffff777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffffff777777777777777777fffffffffffffff7fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc191111111111111111111111111
ffffffff77777777777777777cccccfffcccccccccccccccccccccccccccccccccccccccccccccccccccc9ccccccccccccccc199111111111111111111111111
fffffffff7777777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9f9cccccccccccccc9ff911111111111111111111111
ffffffffff77777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccff99ccccccccccccc9ff911111111111111111111111
fffffffffff77777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc999999999999999999999911111111111111111111111
fffffffffffffffff7777cccccccccccccccccccffffccccccccccccccccccccccccccccccccccccccc999999999999999999999991111111111111111111111
fffffffffffffff7f77777cccccccccccccffff77777ffcccccccccccccccccccccccccccccccccccc9999999999999999999999991111111111111111111111
ffffffffffffffff77777777ccccccccccffff77777777fcccccccccccccccccccccccccccccccccc99999999999999999999999999111111111111111111111
fffffffffffffffff77777777cccccccfffffff777777777cccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
fffffffffffffffffffff7777ffffffffffffffff7777777fccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff999990099999999999009999999911111111111111111111
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9999990099999999999009999999911111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9999999999999999999999999999911111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999991111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc99999999999999999999999999999991111111111111111111
d6666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999999111111111111111111
df66666666666666666666666666666666666666dd66666666666666666666666666666666666999999999944444444449999999999999991111111111111111
ddff6666666666666666666666666666666666ddddf6666666666666666666666666666666666999999999999999999999999999999999999111111111111111
dddf666666666666666666666666666666666ddddddf666666666666666666666666666666669999999999999999999999999999999999999111111111111111
ddfff6666666666666ddd66666666666666ddddddddff66666666666666666666666666666699999999999999999999999999999999999999911111111111111
ddddfd66666666666ddddf666666666666ddddddddffff66666666666666666666666666669999999999ffffffffffffffffff99999999999911111111111111
dddddddd666666ddddddddf666666666dddddddddddffdd77777777777777777777777777799999999ffffffffffffffffffffff999999999911111111111111
dddddddddddddddddddddddfd66666ddddddddddddddddd6666666666666666666666666699999999ffffffffffffffffffffffff99999999991111111111111
dddddddfdddddddddddddddddddddddddddddddddddddddd77777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
dddddddffdddddddddddddddddddddddddddddddddddddddd7777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddd77dd7777777777777777777999999ffffffffffffffffffffffffff9999999911111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddd777777777777777777779999ffffffffffffffffffffffffff9999991111111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd7777717177777777779999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd717771777777777777999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddd9dddddddddddddddddd71717777777377777999fffffffffffffffffffffffff99999911111111111111111
dddddddddddddddddddddddddddddddddddddddd979ddddddddddddddd1dd1711771777377711999fffffffffffffffff5fffffff99999911111111111111111
ddddddddddddddddddddddddddddddddddedddddd9dddd1ddddddddddd1dd111117111773711199993fff3ffffffffff5fffffff999999111111111111111111
ddddddddddddddddddddddddddddddddde7edddddd3dddd1dddd1dddd1d3d131111111173111109993fff3ffffff5555fffffff9993999111111333111133311
ddddddddddddddddddddddddddddddddddeddddddd3d33d11dddd1d111d3313131111111313300999939933f3fff67ddfff3f999993333333313333333333331
dddddddddddddddddddddddddddddddddd3bdddddd333dddd1d3d1dd11113331311313111337700999393333333367dd39933933333333333311333333333333
ddddddddddddddddddddddddddddddddddbdddbddd3dddddd113301d11313331333333138877773333333333333367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbdbdddddd33dddd33010330333313333113333888777777888888888883367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbbbddddbd33ddddd30133b3333311333133333887733337788888998888867dd23333333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbdbddb33b33333d33bb333333333333338888877333377888893a9888867dd22888333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbbbbbb33b33bbbd33bb3333333333333888888873333722889999a9888555528838333333333333333333333333333
dddddddddddddddddddddbdddbdddbbbbdbbbbbbbbb33bbbbbbbbbb3333333333888888888888888888999999888888888883333333333333333333333333333
ddddddddaddddddddddddbbddbbdbbbbbbbbbbbbbbb3bbbbbbbbbbb3333333383888888888888888888899992288888888833333333333333333333333333333
ddddddda7addddddddddddbdbbbdbbbbebbbbbbbbbbbbbbbbbbbbbbbb333388888888888888888888888899228888888388333333333333333333333b3333333
ddddddddaddddddddddbbdbbbbbbbbbe7ebbbbbbbbbbbbbbbbbbbbbbbbb3888888888888888888888888888888888883883333333333333333333333b3333333
dddbdddd3ddddddbd333bdbbbbbbbbbbe3bbbbbbbbbbbbbbbbbbbbbbbbb888bb88888888888888888888888888888883833b3333333b3333b3333333b3333333
dddbdddbbbddddbbd3bbbdbbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbb88888b8888888b88888888888888b888888b83333b33bb333b3333b3333333bbb3b333
dddbbdbbbddddbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb8888888888888bb8888b8bbb3b3b33bb333b33333b33b333bbbb3333
dddbbddb3bdbdbddbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb888bbb8bbb888b88888b88bbbbbbbbbb333bbb333b33b33bbbbb3333
bbdbbbdb3bdbb33dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbb88888b8bbbbbbbbbbb3b3bbbbbbb33bb3bbbbb3333
bbbbbbbb3b3bbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbbbbbbbbbbbbbbbbbbbbbb3bbbb3b333b3333
bbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbb3bbb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b3b3bb3bb3333bb333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b3b3bb3bb333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333b3333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3b3bbb3333bbb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb33333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3b3333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33333333333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333333b333bb3333333
bbbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333b33b333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b33b333333333
bbbbabbbbbb3bbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bb3b33b333333333
bbba7abbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33333bb33
bbbba3bbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33b33bbb3
b3333333333bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b3bbbb
b3bb3bb3bb3bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbb
b33b3bb3bb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3b33b33b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbb
b3bb3bb3b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

__gff__
0081030301811303030301010000010003030101010103030101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
fffffff0ffff0ffd89e32fc19aa67c51f47fc01ffcc05f7c3c8cff11bf818b9b851f420042b8c21112fee70148c0f8f821e008c20b0a84ff733842c042f8295c940f8c62f83f23e01906fe092f3811f00dff6fc641c03fe046f8427887ff73183f50caf8851bc3f87ff12338f818ffb342f9df13065ec2ff8a7084ff3fc0022e
12f03fe3e37fce013ef0bfe6ff2ff0ff57f8ffd360e003ff7f3a20bce1ff1f87833ff8ffc760fcc1ffbf0eff7f1f08c0cdff82ffbf03168484ff7f0bce4258085ff8ff8f0148180290e10bff3309ffd3702402168431aef07f927593ff2732788681ff215f0207ff5719070165fc9f780438c2ff344c7e201cfcdf643ce07fca
c107c1c7ff4ac617fec782977081ff8f8c13fc6f255c24e024fc2fc3ff990ffcc5ffdfe4ff007ee7ff8f12fe1789ffff6f08c0ffff178430feff7ea83c82ffffcd8df0ffafc31fe0ffdf08fe47899ff8ff3f89ff83952b9c99ff3f13fe47f2519af8ff3730e17f22e40a02feffd2f03b7f3090c4ffff41f89d4b4e59e2ffff10
fe9784ffff44f81f72642be4ff6f70f0ff4b207cfcff6ffe08ffffc4fe871c5c25f9ffd3e18fc2ffdf90ff6558f82095ffbf4c180f1bfeff3168380bff7f8df25bf82bfcffbdf02ff8ffafe1672efeff43ea7f127e92121ef93fa6fe59f8972bc98ffcaf63f883f12b5ff843feffc3f0bf4df2caff5f88fe0f79e59025fe92f1
ff17c2ff6963a91f648941fe47f6bfe497851a3933e1e37f633f871ff9273c591e3bc233c9ffc4fea7fcc498fd012ef9ff83e1e27fc0ffc881173ce1ff8fcae1f8ffd9ff5f73fcff3cffffc9fe17e137fbffff865cf9ffc7e1afede8ffca85ff8fe3f49dfc007eca35f2bfb125f9ff2be12ffbdf4827f99fd8ffba8fe4070b7f
8027c9ffc2fe57e11fccf2b22cb75c24c9ffc04efb8bbf198c1c5c593e7901d7ff07fcc7ff843f6a567ef2fcedb8c2af7ce1bff00b3fdbff24fcccff22fcbf72f5ffbff1bf03c05f791cfc6f1cff7f83f29790ff91fcff1bd03e38f9ffcf8d90c299f8fff07fcffc744402474eff173b12fff3087ed90c32421c83849ff2faff
17b9355f9bf885091c5442963709e7c66187fd7f930b5d5ed9350bc391385dc3f26c9c520e494e1f6184ff4f729f40220d04b2c44190cbd67110b2efb93a721096b8c3ff66d70f1eb19a6382a06982157ce8210924d22542867be2e5ff931f2493e8f1894d481cf4e08f3f8ec439f99ff0bfdc18310cdd6e2091c58365e569ea
95f1ff3f2258788e438207cd6152c006ea43f4c82ff97f87030788d0c31124f9411f4ef80707f63591ff2faf9c96f0931cfb83ee975f58f201d9fbc70f512bbff363c242001e0b0d07a75d76f2f9e30abf73e51f3f2432fc232fd7c25ff9c5f6cf7cf27fe049863790d09c4ef983097e4c62e109f831f1479e7f5e802b825f11
f9594e0cff0712e678466d9cfbe1cadf810fff0f88c41316fe4c6018fe083fe70fe34afc118e400ef0138667482a18c6ff499e05841fc0020c7f6c08214308f922c0c2ff949384302b022e063eca41c27158e2ffca4f213cdc618c845b2e09ffff28fc4a00c20f24fcff557280f00fff7f120ce0ffbf0f06e00affff39fc42f9
ffc724349cfcffe9d0808bff3f5c1046f8ffeb0316feff3f8087ffbfcecbff3f0f77f82b8fff3f1bfe8c0fff7f34fc9c7fbeffbf19be081e967f1c9e66feff6148f82909ca92e0ff7f7281ee49cec4ffdf0d0bece408ffff7430044110f0ff7f2938863ff8ffd70f20e0ff6f872308ff7f9d868fffffceffff2f000000000000
