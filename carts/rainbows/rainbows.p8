pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
--r.a.i.n.b.o.w.s.               v0.1.0
--caterpillar games



gs = nil

dirs = {
	left = 0,
	right = 1,
	up = 2,
	down = 3,
	z = 4,
	x = 5
}

red = 8
yellow = 10
blue = 12

redBf = 1
yellowBf = 2
blueBf = 4

greenBf = yellowBf + blueBf
orangeBf = yellowBf + redBf
purpleBf = redBf + blueBf

whiteBf = redBf + yellowBf + blueBf

spriteMap = {}
spriteMap[redBf] = 4
spriteMap[yellowBf] = 5
spriteMap[blueBf] = 6
spriteMap[orangeBf] = 7
spriteMap[greenBf] = 8
spriteMap[purpleBf] = 9
spriteMap[whiteBf] = 10

allColors = {
	redBf,
	yellowBf,
	blueBf,
	greenBf,
	orangeBf,
	purpleBf,
	whiteBf
}

function translateToPico8Color(bitField)
	if bitField == 0 then
		return 0
	elseif bitField == redBf then
		return 8
	elseif bitField == yellowBf then
		return 10
	elseif bitField == blueBf then 
		return 12

	elseif bitField == greenBf then
		return 11
	elseif bitField == orangeBf then
		return 9
	elseif bitField == purpleBf then
		return 2

	elseif bitField == whiteBf then
		return 7
	end
end

colors = {
	redBf,
	blueBf,
	yellowBf
}

function _init()
	gs = {
		isGameOver = false,
		gameOverResult = nil,
		dt = 1/30.0,
		startTime = t(),
		endTime = nil,
		currentAnimation = nil,
		playerMissiles = {},
		opponentMissiles = {},
		waveNumber = 1,
		newWave = newWave,
		player = {
			health = 10,
			pos = vec2(64, 110),
			angle = 0.25,
			omega = 0.3,
			length = 15,
			missileSpeed = 80,
			colorIndex = 1,
			shootCooldown = 6,
			shootCountdown = 0,
			cycleColor = function(self, direction)
				self.colorIndex += direction
				if self.colorIndex < 1 then
					self.colorIndex = #colors
				elseif self.colorIndex > #colors then
					self.colorIndex = 1
				end
			end,
			getPico8Color = function(self)
				return translateToPico8Color(self:getColor())
			end,
			getColor = function(self)
				return colors[self.colorIndex]
			end,
			getBarrelEnd = function(self)
				return self.pos + self.length * vec2(cos(self.angle), sin(self.angle))
			end
		}
	}

	gs:newWave()
	-- gs:newWave()
	-- gs:newWave()
	-- gs:newWave()
	-- for i = 1, 10 do
	-- 	add(gs.opponentMissiles, makeOppMissile())
	-- end
end

function getColorByWave(waveNumber)
	if waveNumber == 1 then
		return redBf
	elseif waveNumber == 2 then
		return choose({blueBf, yellowBf})
	elseif waveNumber == 3 then
		return choose({orangeBf, purpleBf, greenBf})
	elseif waveNumber == 4 then
		return whiteBf
	end
end

function newWave(self)
	if self.waveNumber <= 4 then
		local col = getColorByWave(self.waveNumber)
		for i = 1, 12 do
			add(gs.opponentMissiles, makeOppMissile(col, self.waveNumber))
		end
	elseif self.waveNumber == 5 then
		for i = 1, 6 do
			add(gs.opponentMissiles, makeOppMissile(redBf, self.waveNumber))
		end
		for i = 1, 6 do
			add(gs.opponentMissiles, makeOppMissile(blueBf, self.waveNumber))
		end
	elseif self.waveNumber == 6 then
		for i = 1, 4 do
			add(gs.opponentMissiles, makeOppMissile(yellowBf, self.waveNumber))
		end
		for i = 1, 4 do
			add(gs.opponentMissiles, makeOppMissile(redBf, self.waveNumber))
		end
		for i = 1, 4 do
			add(gs.opponentMissiles, makeOppMissile(blueBf, self.waveNumber))
		end
	-- elseif self.waveNumber == 8 then
	-- 	for i = 1, 4 do
	-- 		add(gs.opponentMissiles, makeOppMissile(purpleBf, self.waveNumber))
	-- 	end
	-- 	for i = 1, 4 do
	-- 		add(gs.opponentMissiles, makeOppMissile(greenBf, self.waveNumber))
	-- 	end
	-- 	for i = 1, 4 do
	-- 		add(gs.opponentMissiles, makeOppMissile(orangeBf, self.waveNumber))
	-- 	end
	elseif self.waveNumber == 8 then
		local first = choose({redBf, blueBf, yellowBf})
		for i = 1, 6 do
			add(gs.opponentMissiles, makeOppMissile(first, self.waveNumber))
		end
		local other = choose({greenBf, orangeBf, purpleBf})
		for i = 1, 6 do
			add(gs.opponentMissiles, makeOppMissile(other, self.waveNumber))
		end
	elseif self.waveNumber == 9 then
		local first = whiteBf
		for i = 1, 4 do
			add(gs.opponentMissiles, makeOppMissile(first, self.waveNumber))
		end
		local other = choose({greenBf, orangeBf, purpleBf})
		for i = 1, 4 do
			add(gs.opponentMissiles, makeOppMissile(other, self.waveNumber))
		end
		local other = choose({blueBf, redBf, yellowBf})
		for i = 1, 4 do
			add(gs.opponentMissiles, makeOppMissile(other, self.waveNumber))
		end
	elseif self.waveNumber == 10 then
		local colorIndex = #allColors
		for i = 1, 14 do
			add(gs.opponentMissiles, makeOppMissile(allColors[colorIndex], self.waveNumber))
			colorIndex -= 1
			if colorIndex < 1 then
				colorIndex = #allColors
			end
		end
	end

	self.waveNumber += 1
end

metaTable = {
	__add = function(v1, v2)
		return vec2(v1.x + v2.x, v1.y + v2.y)
	end,
	__sub = function(v1, v2)
		return vec2(v1.x - v2.x, v1.y - v2.y)
	end,
	__mul = function(s, v)
		if type(s) == 'table' then
			s,v = v,s
		end

		return vec2(s * v.x, s * v.y)
	end,
	__div = function(v, s)
		return vec2(v.x / s, v.y / s)
	end
}

function vec2(x, y)
	local ret = {
		x = x,
		y = y,
		squareDist = function(self, other)
			return 
				abs(self.x - other.x) + 
				abs(self.y - other.y)
		end
	}

	setmetatable(ret, metaTable)

	return ret
end

-- Returns a unit vector
vec2fromAngle = function(angle)
	return vec2(cos(angle), sin(angle))
end


function hasAnimation()
	return gs.currentAnimation != nil and costatus(gs.currentAnimation) != 'dead'
end

function acceptInput()
	gs.player.shootCountdown -= 1

	if btn(dirs.left) then
		gs.player.angle += gs.dt * gs.player.omega
	elseif btn(dirs.right) then
		gs.player.angle -= gs.dt * gs.player.omega
	end

	if btnp(dirs.z) then
		gs.player:cycleColor(-1)
	elseif btnp(dirs.x) then
		gs.player:cycleColor(1)
	end

	if btn(dirs.up) and gs.player.shootCountdown <= 0 then
		shoot()
	end
end

function rndRange(min, max)
	return min + (max - min) * rnd()
end

function choose(tbl)
	return tbl[flr(rnd(#tbl)) + 1]
end

function makeOppMissile(color, waveNumber)
	-- Spawn it randomly off screen
	local startPos = vec2(rnd(128), rndRange(-10, -30))

	local targetEnd = vec2(rnd(128), 120)

	-- local angle = atan2(targetEnd.x - startPos.x, targetEnd.y - startPos.y)
	-- local speed = rndRange(10, 20)
	local speedDenominator = rndRange(20, 40)
	-- speedDenominator = 3
	local vel = (targetEnd - startPos) / speedDenominator

	-- local angle = rndRange(0.125, 0.375)
	-- TODO filter out if it would go offscreen
	return {
		pos = startPos,
		vel = vel,
		col = color,
		isDead = false,
		owner = 'cpu',
		getPico8Color = getPico8Color,
		waveNumber = waveNumber
	}
end

function getPico8Color(missile)
	return translateToPico8Color(missile.col)
end

function makeAntiMissile(pos, vel, col)
	return {
		pos = pos,
		vel = vel,
		col = col,
		isDead = false,
		owner = 'player',
		getPico8Color = getPico8Color
	}
end

function shoot()
	local pos = gs.player:getBarrelEnd()

	local missile = makeAntiMissile(
		pos, gs.player.missileSpeed * vec2fromAngle(gs.player.angle),
		gs.player:getColor())

	add(gs.playerMissiles, missile)

	gs.player.shootCountdown = gs.player.shootCooldown

end

function _update()
	if gs.isGameOver then
		if gs.endTime == nil then
			gs.endTime = t()
		end
		if btnp(dirs.x) then
			_init()
		end
		return
	end

	if hasAnimation() then
		local active, exception = coresume(gs.currentAnimation)
		if exception then
			stop(trace(gs.currentAnimation, exception))
		end

		return
	end

	acceptInput()

	updateMissiles()

	checkEnemyMissiles()

	clearDead()

	maybeSpawnWave()

	checkWinLose()
end

function checkWinLose()
	if gs.player.health <= 0 then
		gs.isGameOver = true
		gs.gameOverResult = 'lose'
	elseif gs.waveNumber == 11
		and #gs.opponentMissiles == 0 then
			gs.isGameOver = true
			gs.gameOverResult = 'win'
	end
end

function maybeSpawnWave()
	if gs.waveNumber == 11 then
		return
	end

	local mostRecentWave = gs.waveNumber - 1
	local doSpawnWave = true
	for m in all(gs.opponentMissiles) do
		if m.waveNumber == mostRecentWave then
			doSpawnWave = false
		end
	end

	if doSpawnWave then
		gs:newWave()
	end
end

function clearDead()
	for m in all(gs.opponentMissiles) do
		if m.isDead or m.pos.y < -50 then
			del(gs.opponentMissiles, m)
		end
	end

	for m in all(gs.playerMissiles) do 
		if m.isDead or m.pos.x < -100 or m.pos.x > 200
			or m.pos.y < -100 or m.pos.y > 200
		 then
			del(gs.playerMissiles, m)
		end
	end
end

function getMissileWeight(missile)
	if missile.col == whiteBf then
		return 3
	elseif missile.col == orangeBf or
		missile.col == greenBf or
		missile.col == purpleBf then
			return 2
	else
		return 1
	end
end

hitThreshold = 110

function checkEnemyMissiles()
	for m in all(gs.opponentMissiles) do
		if not m.isDead and m.pos.y > hitThreshold then
			gs.player.health -= getMissileWeight(m)
			m.isDead = true
		end
	end
end

function drawTurret()
	local startPos = gs.player.pos
	local endPos = gs.player.pos + gs.player.length * vec2(cos(gs.player.angle), sin(gs.player.angle))
	line(startPos.x, startPos.y, endPos.x, endPos.y, gs.player:getPico8Color())
end

function allMissiles()
	local ret = {}
	for m in all(gs.playerMissiles) do
		add(ret, m)
	end
	for m in all(gs.opponentMissiles) do
		add(ret, m)
	end
	return all(ret)
end

function drawMissiles()
	for m in allMissiles() do
		-- circfill(m.pos.x, m.pos.y, 2, m:getPico8Color())
		spr(spriteMap[m.col], m.pos.x - 3, m.pos.y)
	end
	-- for m in all(gs.playerMissiles) do
	-- 	-- print(m.pos.x)
	-- 	-- print(m.pos.y)
	-- 	pset(m.pos.x, m.pos.y, m:getPico8Color())
	-- end

	-- for m in all(gs.opponentMissiles) do

	-- 	pset(m.pos.x, m.pos.y, m:getPico8Color())
	-- end
end

function isOnScreen(vec)
	return -20 < vec.x and vec.x < 150 and
		-20 < vec.y and vec.y < 150
end

function didCollide(playerMissile, oppMissile)
	-- if abs(playerMissile.)
	return playerMissile.pos:squareDist(oppMissile.pos) < 6
end

function handleCollision(playerMissile)
	for m in all(gs.opponentMissiles) do
		if not m.isDead and didCollide(playerMissile, m) then

			if m.col & playerMissile.col > 0 then
				playerMissile.isDead = true

				m.col &= ~playerMissile.col

				if m.col == 0 then
					m.isDead = true
				end
			end


			-- TODO animate explosion
			return
		end
	end
end

function updateMissiles()

	for m in all(gs.opponentMissiles) do
		m.pos += m.vel * gs.dt
	end

	for m in all(gs.playerMissiles) do
		m.pos += m.vel * gs.dt
		handleCollision(m)
	end



	-- local newMissiles = {}
	-- for m in all(gs.playerMissile)

	-- gs.playerMissiles = newMissiles

end

function drawHealth()
	local xStart = 10
	local y = 118
	for i = 1, gs.player.health do
		spr(2, xStart, y)
		if i % 2 == 0 then
			spr(1, xStart, y)
			xStart += 9
		end
	end
end

function _draw()
	cls(0)
	if gs.isGameOver then
		if gs.gameOverResult == 'lose' then
			print('\n game over!\n\n survived '.. (gs.waveNumber-1) ..' waves\n\n press ❎ to play again', 7)
			return
		else
			print('\n you survived all the waves!\n\n press ❎ to play again', 7)
		end
		return
	end

	drawTurret()

	drawMissiles()

	drawHealth()
	-- Draw
end

__gfx__
00000000000000000000000000000000088880000aaaa0000cccc0000aa880000ccaa000088cc0000acc80000000000000000000000000000000000000000000
000000000880aa00088000000000000088888800aaaaaa00cccccc00aaa88800cccaaa00888ccc00aacc88000000000000000000000000000000000000000000
00700700888aacc0888a00000000000088888800aaaaaa00cccccc00aaa88800cccaaa00888ccc00aacc88000000000000000000000000000000000000000000
0007700088aacc8088aa00000000000088888800aaaaaa00cccccc0099999900bbbbbb0022222200777777000000000000000000000000000000000000000000
000770008aacc8808aac00000000000088888800aaaaaa00cccccc0099999900bbbbbb0022222200777777000000000000000000000000000000000000000000
007007000acc88000acc000000000000088880000aaaa0000cccc000099990000bbbb00002222000077770000000000000000000000000000000000000000000
0000000000c8800000c8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000800000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000088aa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000008aac00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000acc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000c800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000acc800000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000aacc880000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000aacc880000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000007777770000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000007777770000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000777700000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000008888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000088888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000088888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000088888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000088888aa8800000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000888aaa8880000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000aaa8880000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000099999900cccc0000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000009999990cccccc000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000999900cccccc000000000000000000000008888000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000cccccc0000000000000000000000888888000000000cccc0000000000000000000000000000000000000
00000000000000000000000000000000000000000000cccccc000000000000000000000088888800000000cccccc000000000000000000000000000000000000
000000000000000000000000000000000000000000000cccc0000000000000000000000088888800000000cccccc000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000088888800000000cccccc000000000000000000000000000000000000
000000000000000000000acc8000000000000000000000000088cc00000000000000000008888000000000cccccc000000000000000000000000000000000000
00000000000000000000aacc8800000000000000000000000888ccc00000000000000000000000000000000cccc0000000000000000000000000000000000000
00000000000000000000aacc8800000000000000000000000888ccc0000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000777777000000000000000000000002222220000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000777777000000000000000000000002222220000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000077770000000000000000000000000222200000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000ccaa00000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000cccaaa0000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000cccaaa0000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000aaaa00000000000000000000bbbbbb0000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000aaaaaa0000000000000000000bbbbbb0000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000aaaaaa00000000000000000000bbbb00000000000000000000000000000000000000000000000000000000000000000000000
0cccc0000000000000000000000aaaaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccc000000000000000000000aaaaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccc0000000000000000000000aaaa00000000000000000000000000ccaa000000000000000000000000000000000000000000000000000000000000000000
cccccc000000000000000000000000000000000000000000000000000cccaaa00000000000000000000000000000000000000000000000000000000000000000
cccccc000000000000000000000000000000000000000000000000000cccaaa00000000000000000000000000000000000000000000000000000000000000000
0cccc0000000000000000000000000000000000000000000000000000bbbbbb00000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000bbbbbb00000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000bbbb000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aaaa000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aaaaaac0000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aaaaaacc000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aaaaaacc000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aaaaaa22000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aaaa222000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022220000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000aa8800000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000aaa8880000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000aaa888000000000000000000000000000aaaa000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000099999900000000000000000000000000aaaaaa00000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000099999900000000000000000000000000aaaaaa00000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000009999000000000000000000000000000aaaaaa00000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aaaaaa00000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aaaa000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000880aa0000880aa0000880aa0000880aa0000880aa0000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000888aacc00888aacc00888aacc00888aacc00888aacc000000000000000000000000000000000000000000000000000000000000000000000000000
000000000088aacc80088aacc80088aacc80088aacc80088aacc8000000000000000000000000000000000000000000000000000000000000000000000000000
00000000008aacc88008aacc88008aacc88008aacc88008aacc88000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000acc880000acc880000acc880000acc880000acc880000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000c88000000c88000000c88000000c88000000c8800000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000008000000008000000008000000008000000008000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__gff__
0000000001020403060507000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__meta:cart_info_start__
cart_type: game
game_name: R.A.I.N.B.O.W.S.
# Leave blank to use game-name
game_slug: rainbows
jam_info:
  - jam_name: TriJam
    jam_number: 113
    jam_url: null
    jam_theme: Rainbow
tagline: Defend yourself using the Radial Anti-Inbound Non-Ballistic Offensive Weapon System
time_left: '0:22:15'
develop_time: ''
description: |
  Enemy missiles are inbound. Defend yourself using the Radial Anti-Inbound Non-Ballistic 
  Offensive Weapon System.

  Shoot down the missiles with a missile of the same color. Hybrid-colored missiles need 
  to be shot down with missiles of each primary color (e.g. a green missile must be shot 
  with both a blue and yellow missile). Hybrid-colored missiles do more damage if they hit you.

  Survive 10 waves to win!
controls:
  - inputs: [LEFT_ARROW_KEY,RIGHT_ARROW_KEY]
    desc:  aim turret
  - inputs: [UP_ARROW_KEY]
    desc:  fire turret
  - inputs: [X,Z]
    desc:  cycle through colors of turret
hints: ''
acknowledgements: ''
to_do: []
version: 0.1.0
img_alt: Missiles of different colors falling down on a gun turret
about_extra: ''

__meta:cart_info_end__
