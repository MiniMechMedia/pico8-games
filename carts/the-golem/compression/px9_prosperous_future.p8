pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- px9 data compression v9
-- by zep & co.
--
-- changelog:
--
-- v9:
--  @pancelor
--  ★ redo bitstream order
--  234 tokens (but ~4% slower)
--
-- v8:
--  @pancelor
--  ★ smaller vlist initialization
--  241 tokens
--
-- v7:
--  smaller vlist_val by @felice
--  7b -> 254 tokens (fastest)
--  7a -> 247 tokens (smallest)
--
-- v6:
--  smaller vlist_val by @p01
--  -> 258 tokens
--
-- v5:
--  fixed bug found by @icegoat
--  262 tokens (the bug was caused by otherwise redundant code!)
--
-- v4:
--  @catatafish
--  ★ smaller decomp
--
--  @felice
--  ★ fix bit flush at end
--  ★ use 0.2.0 functionality
--  ★ even smaller decomp
--  ★ some code simpler/cleaner
--  ★ hey look, a changelog!
--
-- v3:
--  @felice
--  ★ smaller decomp
--
-- v2:
--  @zep
--  ★ original release
--
--[[

	features:
	★ 273 token decompress
	★ handles any bit size data
	★ no manual tuning required
	★ decent compression ratios


	██▒ how to use ▒██

	1. compress your data

		px9_comp(source_x, source_y,
			width, height,
			destination_memory_addr,
			read_function)
				
		e.g. to compress the whole
		spritesheet to the map:
		
		px9_comp(0,0,128,128,
			0x2000, sget)

	…………………………………
	2. decompress
	
		px9_decomp(dest_x, dest_y,
			source_memory_addr,
			read_function,
			write_function)

		e.g. to decompress from map
		memory space back to the
		screen:
		
		px9_decomp(0,0,0x2000,
			pget,pset)

		…………………………………

		(see example below)

		note: only the decompress
		code (tab 1) is needed in
		your release cart after
		storing compressed data.
		
]]

function _init()

	-- test: compress from
	-- spritesheet to map, and
	-- then decomp back to screen

	cls()
	print("compressing..",5)
	flip()

	w=128 h=128
	raw_size=(w*h+1)\2 -- bytes

	ctime=stat(1)

	-- compress spritesheet to map
	-- area (0x2000) and save cart

	clen = px9_comp(
		0,0,
		w,h,
		0x2000,
		sget)

	ctime=stat(1)-ctime

	--cstore() -- save to cart

	-- show compression stats
	print("                 "..(ctime/30).." seconds",0,0)
	print("")
	print("compressed spritesheet to map",6)
	ratio=tostr(clen/raw_size*100)
	print("bytes: "
		..clen.." / "..raw_size
		.." ("..sub(ratio,1,4).."%)"
		,12)
	print("")
	print("press ❎ to decompress",14)

	memcpy(0x7000,0x2000,0x1000)

	-- wait for user
	repeat until (btn(❎) or true)

	print("")
	print("decompressing..",5)
	flip()

	-- save stats screen
	local cx,cy=cursor()
	local sdata={}
	for a=0x6000,0x7ffc do
		sdata[a]=peek4(a)
	end

	dtime=stat(1)

	-- decompress data from map
	-- (0x2000) to screen

	px9_decomp(0,0,0x2000,pget,pset)

	dtime=stat(1)-dtime

	-- wait for user
	repeat until (btn(❎) or true)

	-- restore stats screen
	for a,v in pairs(sdata) do
		poke4(a,v)
	end

	-- add decompression stats
	print("                 "..(dtime/30).." seconds",cx,cy-6,5)
	print("")

end

-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 8 and
	-- 15 bits long with the next
	-- bits in these positions:
	--   0b0000.12345678...
	-- (1 is the next bit in the
	--   stream, 2 is the next bit
	--   after that, etc.
	--  0 is a literal zero)
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<8 then
			-- cache next 8 bits
			cache_bits+=8
			cache+=@src>>cache_bits
			src+=1
		end

		-- shift requested bits up
		-- into the integer slots
		cache<<=bits
		local val=cache&0xffff
		-- remove the integer bits
		cache^^=val
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)
		end
	end
end

-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function
	px9_comp(x0,y0,w,h,dest,vget)
	local mytable = {}
	local dest0=dest
	local bit=1
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	local cache,cache_bits=0,0
	function putbit(bval)
	 cache=cache<<1|bval
	 cache_bits+=1
		if cache_bits==8 then
			mytable[dest] = cache
			poke(dest,cache)
			dest+=1
			cache,cache_bits=0,0
		end
	end

	function putval(val, bits)
		for i=bits-1,0,-1 do
			putbit(val>>i&1)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if cache_bits>0 then
		-- flush
		mytable[dest] = cache<<8-cache_bits
		poke(dest,cache<<8-cache_bits)
		dest+=1
	end

	local str = ''
	for i = dest0, dest do
		-- str ..= (chr(mytable[i]))
		str ..= chr(peek(i))
	end
	printh('compressed to ' .. #str .. ', ' .. #str/8192)
	str = escape_binary_str(str)
	print('' .. dest-dest0 .. ', ' .. #str) -- .. dest0 .. ', ' .. dest .. ', ' .. str)
	printh(str, 'output.bin')
	printh(str, '@clip')
	return dest-dest0
end

function byte_to_hex(byte)
	local hi = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte\16]
	local lo = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte%16]
	return '\\x' .. hi .. lo
end

function escape_binary_str(s)
 local out=""
 for i=1,#s do
  local c  = sub(s,i,i)
  local nc = ord(s,i+1)
  local pr = (nc and nc>=48 and nc<=57) and "00" or ""
  local v=c
  if(c=="\"") v="\\\""
  if(c=="\\") v="\\\\"
  if(ord(c)==0) v="\\"..pr.."0"
  if(ord(c)==10) v="\\n"
  if(ord(c)==13) v="\\r"
  if(ord(c)==9) v="\\t"
  	-- v = byte_to_hex(ord(c))
  out..= v
 end
 return out
end
-- 40% - 50%
-- 14 images per cart...
-- dw = 8 images per cart...

__gfx__
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777776777767777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777767777777777777677767776777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777767777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777776777777767777767777777777777777777677777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777677777776777777777777777777777777767777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777677777677777777777777777677777777777777777777777777777777777777777777777777777777777777777777777777777
77777677677777677777777777777767777767777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777767777767777767777777777777776777777777777777777777777777777777777777777777777777777766777777777777777777777777777777
77777777777777777777776777777777777777777777777777777777677776777767777777777777777777777777777776777777777777777777777777777777
77776776776777776777777777776777777777777777767777777777777777777777777677767776777677767777677776777777677767776777677767777777
77777777777777777777677777777777776777777777777776777677777777777777777777777777777777777777777776677777777777777777777777777777
77777777777776777777777777677777677777677776777777777777777777777777777777777777777777777777777776777777777777777777777777777777
77776776776777776777777677777777777777777777777777777777777777777777777777777777777777777777777766677777777777777777777777777777
77777777777777777776777777777767777777777777777777777777777777777777777777777777777777777777777767677777777777777777777777777777
77776777677767767777777777776777777777777677777777777777777777777777777777777777777777777777777766777777777777777777777777777777
77777777777777777777767767777777777767777777777777777777777777777777777777777777777777777777777776677777777777777777777777777777
777776777767777776777777777777777777777777777776777677777777777777777777777777777777777777777666d6777777777777777777777777777777
7776777767777677777767777776777776777777777776777776677777767776777767777777777777777777766dd6dd36677777777777777777777777777777
77777777777777776777777767777776777777767777777777767777777777777777777776777677776777766d6d66d666667777777677776777767777677777
777777677776777777777777777777777777777777777777777677777777777777777777777777777777776d667676d666766777777777777777777777777777
777767777677776777767767777777777777777777777777777677777777777777777777777777777777763d776676d66677d777777777777777777777777777
77777777777777777777777777767777777767777776777777767777777777777777777777777777777776a6777676dd66776777777777777777777777777777
7777777777777777677777777677777677777777777777777776677777777777777777777777777777777656766676d66677d777777777777777777777777777
77776776776776777777777677777777777777777677777777767777777777777777777777777777777776ba76d676d666776677777766777777777777777777
777777777777777777776677777777777777777677777777777666777777677777777777777777777777774676d676dd6677db777776bd777777777777777777
777777777777777777673367777777666777777777777777776ddd66667777777777777777777776677776ba6d66776d6677da6677b335777777777677777777
777767767767776777775b5b6777763b677777777777777776d6da7666d6677777767777776666d6d6777746767776d66677da337d355a777777777777777777
77777777777777777777535357776b5577777777777777777d66d5666666d677777777766dd6d666667777bf667666dd66776633d33356777777777777777777
77777777777777777777a335357630ba77777777777777777666a5777777577777777763666666666677774a666666d66677676550535f777777777777776777
77777677776777677776b4333366334f77777777777777777d66d5777776d6777777776676667777667777db76776ddb667767dd5035f7777777777777777777
77777777677777777777635030650ba777777777677777777666ad777766d7777777776666777767667777da677666d66677d760005777777777777777777777
7777777777777777767774b030665d7777777777777777677666da777766a677777777666dd66d6d6dd677da66677ddd6776d66dd55677777777777677777777
77776777777777777777775300d5577777777777777777777d666d777766d67777777766d56667d6653566dac6776ddd667bf77777d167777777777777777777
7777777777777767777777650050567777777777777777777666a6777666a67777777766666677676a5ab4346677666bf665a666777d57777777777777777777
77777777677767777777777765001d7777777777777777777666d6777666d677777777666766766763a59b95667766dd6763ddb6667717777777777777777777
77777777777777777777777d6d55d66777777777777777777d66ad767667d7776777776666766d6765b95a5ad676d6dd666555f766a656777777777777777777
77777777777777777777761067777766667777777777777776666d776666d6776777776666776d77695b67676d66d65d66634d67766766777777777777777777
777777677777777777777d0577777676bf777777776767777d66a67766775677777777666d7766776b946777766666d566a1f677777766777777777777677777
77777777777777777777715777766676fa6777767666d67776666a6766764677767777666d77776664b96677666d676d666ba667777766777777777767777777
7777777777767777776763676666667db57666d666d666777d66d6766676b66d6d6666666d67766664ab66676d66776d66655667776d67777777777777777777
7777777777777777777765d6666666765566d66d7776666776666a666776455d5dddad666d6767776b44666666d6676d66abf77766d666777777777777777777
77777777777777777777666f6767666635d66666667666777d67d67667664bf766f63d666d66667764ba666766dd676566655677d5d767777777777777777777
777777777677777777776f67777777765b66666667766d777667da6677664f766667646665d766776a5bf6666666676d66a333ddd67767777777777777777777
7777777777777777777766777777766db4df6667d67666777667d6667766bf76d6676566756666666b946766666d676d66d50356677767777777777777777777
777777777777777777776777777777764bd76d66667766777d67da6776f646666a666a666d67666764b96777666667dd67a30567777767777777777777777777
77777777667777777677676677777776a5df66d6767666777667dd6776675a6666666566f6d7766765a367777666676dd6d333f7777777777777777777777777
7777777776777777777767d35777777659d666667766667776666a676676b66766d765666ad777d66b95f666666d67d6d7a33567777767777777777777777777
77777777667777777777666d33677777b5666666666666777d66d66766769d67666665666637766664b967666666676dd7d55677777767777777777777777777
777777777677777777776777d5d5d6d354d666d6677666777dd7da7766765a67666765b56656537764ab6677766d676dd7a3f677776767777777777777677777
77777777677777777777677777635300356666d6767666777da66676676d5b676677655b5653b4776b44dd77666d77dd66dbf77776d766777777777777777777
7777777776777777777767777777663034d666d6767766777bd6a67667669577667664db4535d66664b96bd63666676dd7a5667775d767677777777777777777
777777776677777777776777777776035bdf66dd766766777da6d6667766b46766666a66b415766769b4676d6f7677d6d6d533675d7767777777777777777777
777766666677777777776777777776d35466d666bf6666677dd66a7676664a67666665665115766765abf776b776676567a33355677767676776677777777777
777777777667777777776677777777d334d6666f4b6666b666a6d66666f6b66766666b4d0165b9676b956777766677d6d6d533567777677db667777777777777
777767677667777777776776777777505b6f6d666455b5556d666a766f774577667665b466f651d664b966777766676dd755b3f77777666bd666777777767777
7777777766677777777766767777776349d666566a3555a66bf6dd776676ad676667d93f76677dad695b5356776677d6d7d534777777677dd667777776777777
7777676776677777777767d677777777b566767666355666ad66ad67667756666666db566f7db66a6b9530306676776dd7a33f776666666db666777777777677
777777777667777777776666667777774b6676667653d566bd66da6776665a666766645666f6f66d64b530335d6667dd66d55677d77766355dd6777677677777
777767676677777777776776dd67777659d676566dd55bf9466666676767db6666765ab76667666a6b953330d666766366ab4777d77766db55b7777777776777
777777777667777777776676336d77d3346676b56fdda1dbadda5f677766ad677676d5a7767766dbf4b43033f76d6d7dd7d5d777d667666dad66777676777677
77767776766d7777777767776f6663305bd76fd46676d354bfd6a666776655f776666b4777676a6464a53546776d667dd7ab5567666766a66666667677767777
7776677776666777776766777736650355d6765ba76675595666d6667666ab777d76d9d67776dd666b9b4b77776d777d66d55b77767766b6b6b66bdd66777677
7776766677667777767767777777763055666fa6776676b4b6665f667766d47766766ba7777635ad69b46d677766777dd7a34777777766d6676fdbad66767777
7776766d676d77776777677777777d03356666b67666764a4666a6766776a376677654d77777535adb95d6666666777dd7d5d777777666bdd667d566666db366
77767dd67676677677676677d777773355a66fa6677766b4bd66d6776776d4667676db43d66355ab64ab4bd5dd667666d7db53677733bf46b5a7dbdd63335356
77767d6d6766776777776777d77777d55bd7665667776d9bad66ad6766775a66766669303d65355adb9555ad6f77777dd745b53b663556335b56b4db535b5b33
777676b6667d6777676766766677777749666a35777766b94d665f677677db666676db46667777b9d9b435db6667777d67db5353453b53535bd6335535b53553
776766d6666676767777677d3677777635667d3577777f4bad66a66776764a6666764a567777774b649b53f66d66777dd7a5b53b55b535b5b53535b555534b53
77767dbd6666676776766776d66677615b666a30676d35b45da656677676b4676677dbf677776da4db95557776667776d7d53535b535b535353353535a35b435
7766667667666677677766776667776354676d353663359bad66df76776659666676d96f777610bad9b9db7777d5677dd7db5b5b5b5b55b5b4355535b5adf6f6
77667db6667d767776776677d66677635b666a5f767fdab95d66a66677665b66f6766ba6777d369569b467776666667dd7d4b5355b45b559355b4b96f666da5a
76d6666d667d66d676766776d667776354666a677777764bad6db676676659d76666d966777df6badb957777667666bb35a535b5b4b55b5b4b96ff664a5ab9ba
d6667666667d6dd66777667667677763556665d677777da5a366a667676a396666666bf67ddd774ad9b4666766767635b35b5b4b4b45b95a6f665dababab9a5a
6676663d6766666d67676f767767776355666a35777776b9bdf65677677d5b666666d9d676d677b965abf7766db565b55b55b4b455b4a6666dabab94b94ab9b9
77667dbd767d66666776667777776765b9666a366777764b9d66ad7776765ad766765a667777774b65a55b666b5b35335b5b455b4af666dab9b99baa9bab9b95
767666656766667667676f77776db5b054666bf6677776b94d66d6677676b46766765ba6777777a46b5b533535b5335b5b45b59a6676dab94a4b99b4b9445ad6
7766666d667d667666666677763b5b535bf6696763677a5abd66a667767645676665b4d7777776bad9335b55b535b4b4b4b44a66765ab9b9bab9ba9b9bda666f
76d6763bd67d67766d6d6f776b05b535b9666bf765d77db94df656f67666b9d76db533a67777774adb5b535b535b5b55544667665bab99b9ab9a9b456f666f66
6d666666767d667d66666f77635b53b55566f96777777a4bad66a666776f4b6765b55b535b6777bad5b535b5b5b4b4b9ba6676dba9b9b9ab94b4b46f6f6a66b4
66767677767dd6666666a6776b5355b5b5666bf777777dab9d66d667776659d7653b535b533d774adb55b5b55b4345456776dba9b9a4ab94ba5a66f6a66db99b
5d666dddb66db5766676666b55b5b535b566f967777776b95d66a6676766b467db55b535b5b567ba55b5b55b55b9b967766b9ab9ab9b94ba54666f666db9ab9b
33b65b353563336333666ab5b5b5b5b5b5bf6b7777db5a5abd66d667676f54b765b535b535b5bf5b4b5b4b55b44be6676da9b99b4ab9ba45f66a66adba9b9556
3555b535b535353535666635b4b55b4b5b4669676b5b33b94d66a666b66db96765b53535b55b5b5b5b435b5b4ba677765ab9b9b9b99b9566f6f66db9ab99b6f7
3335b53535353b5333f6ab5b4b5b4b55b4bba57735b5535b9d6666a353bf456765535b5b5b55b555b4b5b4595f77666bab9a5a4a9b95dfa66a66b9ab99bd6777
55b5535b535b555b43a364b4b55b55b55b555a67b535b5b5b466adb5b55b4ad666b535b55b5b4b5b4b555b9667676da4a4b9bab9b93f6666a6b4ab94b5677777
b4b5b9b4b9b4b5b4b4b5b4b5b4b4b5b4b4b5b3b4b5b5b55b9db335b53b5b5d67765b5b4b5b4b55b4b55b966676765ababa9b99b95df6a6a6db9b99b9d7777777
dadad6da6d64a6ada34b4b4b4b4b4b4b4b4b4b4b55b43b5b5b55b55b4355ba6676b4b535b4b4b5b54b9df6767669ba4b9b9ab9aba6a6666b94aab95677777777
767676f66f6666666765b4b4b4b4b4b4b4b4b4b4b55b45b435b5b5b5b5b554677664b4b4b55b4b45a57f67676dba9ba9a5ab9b4d6666a65abab95b777777766d
4bab9bababababab9ab45b4b4b4b4b4b4b4b4b4b4b5b5b4b4b4b4b4b4b4bba6765b5b4b55b4345ab676767f6a9ab9b9b9b94a56ff6a6dba5a5ab47777777d777
a9b9a4a4a4a4a4a9b953555555555b4b4b4b4b4b55b9b4b4b4b4b4b4b4b45a776db4b5b4b4b4abf77f67f66b4b9b99b9b9ba3f6a666da4baba56777777666677
b9ab9b9b5b9b5b4b9b959b9b9b9b954554555555b45b4b4b4b4b4b4b4b4b5566db43555544a667767676669ab9a4b9a5a9b46a666a3aba9b95a7777777666766
435555555d5daddd5d55555554b4abaabab9b9b4555555b4355535555534b5b5b4b4b9a6666767676766ab4b9b9ba5ab9b4f666a65ab9b9a5677777776666767
6ada6f6ffff66fa6ff6f6f6f6ad5555b99ab9a4ab4b466a6adada5ab4a5a5adada6ff666f67676f676dab9a9a5a9bab95a66f6f6b9b99b936777777776667667
66f66f66a66f666f6f66f6f666f6f6a55b4ab9b9ab9ab4d6666676676666676676766767676f6767dab94b9b9bab999bdf6a6a65ab9ba4bf777777777d667766
f6f6f6a666f6a6f66f6f6f6f6f6f666766554bab99b99b9b4d6666f6f6f76f676f6f7676f6767665ab9ba9b9b94ab9bef66666b9b9a4b977777777777d667667
6f6a6666f6a6666f66a666f6f6f6ff6f6ff66459b9b9ba4abab9bd666676f676f6766f67676665ab99b9b9ab9ab9b46a6a6fb4ab95ab47777777777776676677
f6666f6a6666f6a6f666f6a66f6666f6f66f6f655a4ab9ba9b94a9b9b4d6666f676767666dab9ba9ba4a9b94b9b9466666664ab9ab9577777777777766667677
6a6f6a666f6f6666f6f6f666f6f6a66f6f6f66f66b5b9a4b9abab9b9abab9badad5adba5ab94a9b9b9b9b9baa9b46a6a66ab9b9b94b7777777777777767d77d7
66f6666f6f6a6ff6a66a66f6f66f66f66f66a66ffff65b9ab94ab9ab94a4a4b9baba9ab9b9bab9b9a5ab9a4b9b4f666665b9b9a4ba777777777777777d766766
f6f6a6666a66666666666f6f6a66f6f6f6a666f666f6f6559bab9b95ababab9ab99b5a5a9b99b9ab9b9ab9b95f6f6a66ab9a4b9b477777777777777776676676
da3db4b4b5b4b9b4b4b4b656666f6f6f6666f6f6f66f6f66b44a4abab95ab9b99b9ab9bab9ba4b94ab9b9a5a66a6666b4a5ab9a5777777777777777777d76667
5aba9a9baa9ba4abaa9a9bab4b556666f6f6f66f6f6f6f6ff6b5b99b9ab99b9b9b9b9ab99a4ba9bab9a4b4b6f666a65ab9b9ab57777777777777777777667666
ab99b5a9b9b9ab9ab4bb99b9a9bab4b4bf6f6f6f6f66f66f6fff65b9b99ba4a9b9a5ab9b4ba9b9ab9b9b4fff6a666b99b9ab957777777777777777777776676d
94ba9bab9b9b9b9b9a99b9ab4b9a4aab95bd66f66f6a66a666f6f6f54b9b9bab95ab94a9bab9ab995956f66a666b94ba9b94b777777777777777777777776dda
ba9b9b94a9a5a9b9b9ba5b99ba4bab99ba9b9b56a6666f66f6f66f6f66545a5abab9bab9a4ab95b4b6f6fa66665aba9b9ab4777777777777777777777776db95
9b9b9abab5bab94a5ab9a9ba9ba9b9b9ab99b9ab5566f6f6f66f6f66ff6f6b4595a4ab9b9b95b9dfff6a666fb9b99b95ab477777777777777777777776da9566
a4a9b94a4a9b9baba5ab4b9b99b9a5ab95ab9b99bab4b66f6f6f66a66f66ff666b4b445a5dda66f666666f65a5ab94bab47777777777777777777776dab4b777
b9b9bab9bab9a4a5ab9ab9a5ba4b9b95ab94a4b9a5aa4b4b66f6a666f6a66f6a6f7f66666f66f6a6a6a6f6355ab9ba9b47777777777777777776665ab9d77777
9b9a5a5ab94b9bab9ab99b9a9ba9b9bab9baba9b9b9b9a95935666f6f66f6a666f6f6ff6a6f6a6666666539b959a4b94936677777777777766ddab9566777777
a4b9bab99ba9b9b9b95b9abb9b9b9a9b9a4ab9b9b9ab9babaab93d6a66f6666f6f66a66666a666f6f655b9a4ba35aa35aab9d667676666d5abab9d6777777777
ba9b99b9b9b9a5a9b9aab94a4ab9b9b9b9b99b9a4b99b9b9b99ba9b5566a6f6f6a6666a6f666f66ad34aab9ba4563df7d59ba9b9b4ab9baa5466777777777777
__label__

ccccccccccccccccccccccccccc11111111111111ccccccccccccc111111111111111111ccccccccc1111111cccc111111111111111111111111111111111111
ccccccccccccccccccc11cccccccc1111111111111111c1111111111111c111cc11ccc111ccccccccc1111111cccc11111111111111111111111111111111111
ccccccccccccccccccc111cc11cccc11cccc1111111111111111111111ccc11cc111ccc11ccccccccccc1111111ccc1111111111111111111111111111111111
cccccccccccccccccccc11cc111ccccc11111ccc11111111111111111ccccccccc11cccccccccccc11cccc1111111cc111111111111111111111111111111111
cccccccccccccccccccccc1cc11cccccc1cccc111111111111111111cccccccccccc11cccccccccc111cc111111111cc11111111111111111111111111111111
cccccccccccccccccccccc11111ccccccccc111111111111111111cccccccccccccc111cccccccccc11c11111111111cc1111111111111111111111111111111
ccccccccccccccccccccccc11111111111111111ccccc11111ccccccccccccccccccc11cccccccccccc11cccc111111111111111111111111111111111111111
ccccccccccccccccccccc11cccccc111111111cc11cccccccccccccccccccccccccccccccccccccccc11cccccc11111111111111111111111111111111111111
cccccccccccccccccccc111cccc11ccccccccc11111cccccccccccccccccccccccccccccccccccccc111ccccccc1111111111111111111111111111111111111
cccccccccccccccccccc11cccc111cccccccc111c11cccccccccccccccccccccccccccccccccccccc11ccccccccc111111111111111111111111111111111111
cccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11ccccccccccc1111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc11cccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc1111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccc1111ccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccc111cc11c1111c111cccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc11cccc11cccc111ccccc11cccccccccc1111111111111111111111111111
ccccccccccccfffccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccccc11111ccc11111111ccccccccc111111111111111111111111111
ccccccccccffff77fccccccccccccccccccccccccccccccccccccccccccccccccc1cc11cccccc1cccc1111111111111111111111111111111111111111111111
cccccccccfff77777fcccccccccccccccccccccccccccccccccccccccccccccccc11111ccccccccc1111111cccc1111111111111111111111111111111111111
cccccccffff777777fccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111ccccccccc11111111111111111111111111111111111
ccccccffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111cc11ccccccccc111111111111111111111111111111111
cccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11111cccccccccc1111111111111111111111111111111
ccccffff7777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccc111cccccccc111c11ccccccccccccc1111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccc111111111111111111111111111
ccccffff77777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccfff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccfffffff77777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11111111111111111111111111
ccccccfffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccc11111111111111111111111111
77777cffffffff777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777fffffffffffff7777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c11111111111111111111111111
77777777ffffffff7fff77ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111111
77777777ffffff7777fffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c111111111111111111111111111
777777777777777777ffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111c111111111111111111111111111
777777777777777777fffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777777777777777fffcccf77777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
777777777777777777ffffff777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
7777777777777777777fffff7777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
77777777777777777777fffff77777777777fffffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
7777777777777777777777fffffff77777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
777777777777777777777777ffffff77777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffff77777777777777777777fffff77777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
ffffff7777777777777777777fffffff777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffffff777777777777777777fffffffffffffff7fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc191111111111111111111111111
ffffffff77777777777777777cccccfffcccccccccccccccccccccccccccccccccccccccccccccccccccc9ccccccccccccccc199111111111111111111111111
fffffffff7777777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9f9cccccccccccccc9ff911111111111111111111111
ffffffffff77777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccff99ccccccccccccc9ff911111111111111111111111
fffffffffff77777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc999999999999999999999911111111111111111111111
fffffffffffffffff7777cccccccccccccccccccffffccccccccccccccccccccccccccccccccccccccc999999999999999999999991111111111111111111111
fffffffffffffff7f77777cccccccccccccffff77777ffcccccccccccccccccccccccccccccccccccc9999999999999999999999991111111111111111111111
ffffffffffffffff77777777ccccccccccffff77777777fcccccccccccccccccccccccccccccccccc99999999999999999999999999111111111111111111111
fffffffffffffffff77777777cccccccfffffff777777777cccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
fffffffffffffffffffff7777ffffffffffffffff7777777fccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff999990099999999999009999999911111111111111111111
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9999990099999999999009999999911111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9999999999999999999999999999911111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999991111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc99999999999999999999999999999991111111111111111111
d6666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999999111111111111111111
df66666666666666666666666666666666666666dd66666666666666666666666666666666666999999999944444444449999999999999991111111111111111
ddff6666666666666666666666666666666666ddddf6666666666666666666666666666666666999999999999999999999999999999999999111111111111111
dddf666666666666666666666666666666666ddddddf666666666666666666666666666666669999999999999999999999999999999999999111111111111111
ddfff6666666666666ddd66666666666666ddddddddff66666666666666666666666666666699999999999999999999999999999999999999911111111111111
ddddfd66666666666ddddf666666666666ddddddddffff66666666666666666666666666669999999999ffffffffffffffffff99999999999911111111111111
dddddddd666666ddddddddf666666666dddddddddddffdd77777777777777777777777777799999999ffffffffffffffffffffff999999999911111111111111
dddddddddddddddddddddddfd66666ddddddddddddddddd6666666666666666666666666699999999ffffffffffffffffffffffff99999999991111111111111
dddddddfdddddddddddddddddddddddddddddddddddddddd77777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
dddddddffdddddddddddddddddddddddddddddddddddddddd7777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddd77dd7777777777777777777999999ffffffffffffffffffffffffff9999999911111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddd777777777777777777779999ffffffffffffffffffffffffff9999991111111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd7777717177777777779999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd717771777777777777999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddd9dddddddddddddddddd71717777777377777999fffffffffffffffffffffffff99999911111111111111111
dddddddddddddddddddddddddddddddddddddddd979ddddddddddddddd1dd1711771777377711999fffffffffffffffff5fffffff99999911111111111111111
ddddddddddddddddddddddddddddddddddedddddd9dddd1ddddddddddd1dd111117111773711199993fff3ffffffffff5fffffff999999111111111111111111
ddddddddddddddddddddddddddddddddde7edddddd3dddd1dddd1dddd1d3d131111111173111109993fff3ffffff5555fffffff9993999111111333111133311
ddddddddddddddddddddddddddddddddddeddddddd3d33d11dddd1d111d3313131111111313300999939933f3fff67ddfff3f999993333333313333333333331
dddddddddddddddddddddddddddddddddd3bdddddd333dddd1d3d1dd11113331311313111337700999393333333367dd39933933333333333311333333333333
ddddddddddddddddddddddddddddddddddbdddbddd3dddddd113301d11313331333333138877773333333333333367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbdbdddddd33dddd33010330333313333113333888777777888888888883367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbbbddddbd33ddddd30133b3333311333133333887733337788888998888867dd23333333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbdbddb33b33333d33bb333333333333338888877333377888893a9888867dd22888333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbbbbbb33b33bbbd33bb3333333333333888888873333722889999a9888555528838333333333333333333333333333
dddddddddddddddddddddbdddbdddbbbbdbbbbbbbbb33bbbbbbbbbb3333333333888888888888888888999999888888888883333333333333333333333333333
ddddddddaddddddddddddbbddbbdbbbbbbbbbbbbbbb3bbbbbbbbbbb3333333383888888888888888888899992288888888833333333333333333333333333333
ddddddda7addddddddddddbdbbbdbbbbebbbbbbbbbbbbbbbbbbbbbbbb333388888888888888888888888899228888888388333333333333333333333b3333333
ddddddddaddddddddddbbdbbbbbbbbbe7ebbbbbbbbbbbbbbbbbbbbbbbbb3888888888888888888888888888888888883883333333333333333333333b3333333
dddbdddd3ddddddbd333bdbbbbbbbbbbe3bbbbbbbbbbbbbbbbbbbbbbbbb888bb88888888888888888888888888888883833b3333333b3333b3333333b3333333
dddbdddbbbddddbbd3bbbdbbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbb88888b8888888b88888888888888b888888b83333b33bb333b3333b3333333bbb3b333
dddbbdbbbddddbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb8888888888888bb8888b8bbb3b3b33bb333b33333b33b333bbbb3333
dddbbddb3bdbdbddbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb888bbb8bbb888b88888b88bbbbbbbbbb333bbb333b33b33bbbbb3333
bbdbbbdb3bdbb33dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbb88888b8bbbbbbbbbbb3b3bbbbbbb33bb3bbbbb3333
bbbbbbbb3b3bbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbbbbbbbbbbbbbbbbbbbbbb3bbbb3b333b3333
bbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbb3bbb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b3b3bb3bb3333bb333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b3b3bb3bb333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333b3333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3b3bbb3333bbb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb33333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3b3333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33333333333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333333b333bb3333333
bbbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333b33b333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b33b333333333
bbbbabbbbbb3bbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bb3b33b333333333
bbba7abbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33333bb33
bbbba3bbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33b33bbb3
b3333333333bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b3bbbb
b3bb3bb3bb3bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbb
b33b3bb3bb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3b33b33b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbb
b3bb3bb3b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

__gff__
0081030301811303030301010000010003030101010103030101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
fffffff0ffff0ffd89e32fc19aa67c51f47fc01ffcc05f7c3c8cff11bf818b9b851f420042b8c21112fee70148c0f8f821e008c20b0a84ff733842c042f8295c940f8c62f83f23e01906fe092f3811f00dff6fc641c03fe046f8427887ff73183f50caf8851bc3f87ff12338f818ffb342f9df13065ec2ff8a7084ff3fc0022e
12f03fe3e37fce013ef0bfe6ff2ff0ff57f8ffd360e003ff7f3a20bce1ff1f87833ff8ffc760fcc1ffbf0eff7f1f08c0cdff82ffbf03168484ff7f0bce4258085ff8ff8f0148180290e10bff3309ffd3702402168431aef07f927593ff2732788681ff215f0207ff5719070165fc9f780438c2ff344c7e201cfcdf643ce07fca
c107c1c7ff4ac617fec782977081ff8f8c13fc6f255c24e024fc2fc3ff990ffcc5ffdfe4ff007ee7ff8f12fe1789ffff6f08c0ffff178430feff7ea83c82ffffcd8df0ffafc31fe0ffdf08fe47899ff8ff3f89ff83952b9c99ff3f13fe47f2519af8ff3730e17f22e40a02feffd2f03b7f3090c4ffff41f89d4b4e59e2ffff10
fe9784ffff44f81f72642be4ff6f70f0ff4b207cfcff6ffe08ffffc4fe871c5c25f9ffd3e18fc2ffdf90ff6558f82095ffbf4c180f1bfeff3168380bff7f8df25bf82bfcffbdf02ff8ffafe1672efeff43ea7f127e92121ef93fa6fe59f8972bc98ffcaf63f883f12b5ff843feffc3f0bf4df2caff5f88fe0f79e59025fe92f1
ff17c2ff6963a91f648941fe47f6bfe497851a3933e1e37f633f871ff9273c591e3bc233c9ffc4fea7fcc498fd012ef9ff83e1e27fc0ffc881173ce1ff8fcae1f8ffd9ff5f73fcff3cffffc9fe17e137fbffff865cf9ffc7e1afede8ffca85ff8fe3f49dfc007eca35f2bfb125f9ff2be12ffbdf4827f99fd8ffba8fe4070b7f
8027c9ffc2fe57e11fccf2b22cb75c24c9ffc04efb8bbf198c1c5c593e7901d7ff07fcc7ff843f6a567ef2fcedb8c2af7ce1bff00b3fdbff24fcccff22fcbf72f5ffbff1bf03c05f791cfc6f1cff7f83f29790ff91fcff1bd03e38f9ffcf8d90c299f8fff07fcffc744402474eff173b12fff3087ed90c32421c83849ff2faff
17b9355f9bf885091c5442963709e7c66187fd7f930b5d5ed9350bc391385dc3f26c9c520e494e1f6184ff4f729f40220d04b2c44190cbd67110b2efb93a721096b8c3ff66d70f1eb19a6382a06982157ce8210924d22542867be2e5ff931f2493e8f1894d481cf4e08f3f8ec439f99ff0bfdc18310cdd6e2091c58365e569ea
95f1ff3f2258788e438207cd6152c006ea43f4c82ff97f87030788d0c31124f9411f4ef80707f63591ff2faf9c96f0931cfb83ee975f58f201d9fbc70f512bbff363c242001e0b0d07a75d76f2f9e30abf73e51f3f2432fc232fd7c25ff9c5f6cf7cf27fe049863790d09c4ef983097e4c62e109f831f1479e7f5e802b825f11
f9594e0cff0712e678466d9cfbe1cadf810fff0f88c41316fe4c6018fe083fe70fe34afc118e400ef0138667482a18c6ff499e05841fc0020c7f6c08214308f922c0c2ff949384302b022e063eca41c27158e2ffca4f213cdc618c845b2e09ffff28fc4a00c20f24fcff557280f00fff7f120ce0ffbf0f06e00affff39fc42f9
ffc724349cfcffe9d0808bff3f5c1046f8ffeb0316feff3f8087ffbfcecbff3f0f77f82b8fff3f1bfe8c0fff7f34fc9c7fbeffbf19be081e967f1c9e66feff6148f82909ca92e0ff7f7281ee49cec4ffdf0d0bece408ffff7430044110f0ff7f2938863ff8ffd70f20e0ff6f872308ff7f9d868fffffceffff2f000000000000
