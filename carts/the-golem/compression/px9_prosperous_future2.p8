pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- px9 data compression v9
-- by zep & co.
--
-- changelog:
--
-- v9:
--  @pancelor
--  ★ redo bitstream order
--  234 tokens (but ~4% slower)
--
-- v8:
--  @pancelor
--  ★ smaller vlist initialization
--  241 tokens
--
-- v7:
--  smaller vlist_val by @felice
--  7b -> 254 tokens (fastest)
--  7a -> 247 tokens (smallest)
--
-- v6:
--  smaller vlist_val by @p01
--  -> 258 tokens
--
-- v5:
--  fixed bug found by @icegoat
--  262 tokens (the bug was caused by otherwise redundant code!)
--
-- v4:
--  @catatafish
--  ★ smaller decomp
--
--  @felice
--  ★ fix bit flush at end
--  ★ use 0.2.0 functionality
--  ★ even smaller decomp
--  ★ some code simpler/cleaner
--  ★ hey look, a changelog!
--
-- v3:
--  @felice
--  ★ smaller decomp
--
-- v2:
--  @zep
--  ★ original release
--
--[[

	features:
	★ 273 token decompress
	★ handles any bit size data
	★ no manual tuning required
	★ decent compression ratios


	██▒ how to use ▒██

	1. compress your data

		px9_comp(source_x, source_y,
			width, height,
			destination_memory_addr,
			read_function)
				
		e.g. to compress the whole
		spritesheet to the map:
		
		px9_comp(0,0,128,128,
			0x2000, sget)

	…………………………………
	2. decompress
	
		px9_decomp(dest_x, dest_y,
			source_memory_addr,
			read_function,
			write_function)

		e.g. to decompress from map
		memory space back to the
		screen:
		
		px9_decomp(0,0,0x2000,
			pget,pset)

		…………………………………

		(see example below)

		note: only the decompress
		code (tab 1) is needed in
		your release cart after
		storing compressed data.
		
]]

function _init()

	-- test: compress from
	-- spritesheet to map, and
	-- then decomp back to screen

	cls()
	print("compressing..",5)
	flip()

	w=128 h=128
	raw_size=(w*h+1)\2 -- bytes

	ctime=stat(1)

	-- compress spritesheet to map
	-- area (0x2000) and save cart

	clen = px9_comp(
		0,0,
		w,h,
		0x2000,
		sget)

	ctime=stat(1)-ctime

	--cstore() -- save to cart

	-- show compression stats
	print("                 "..(ctime/30).." seconds",0,0)
	print("")
	print("compressed spritesheet to map",6)
	ratio=tostr(clen/raw_size*100)
	print("bytes: "
		..clen.." / "..raw_size
		.." ("..sub(ratio,1,4).."%)"
		,12)
	print("")
	print("press ❎ to decompress",14)

	memcpy(0x7000,0x2000,0x1000)

	-- wait for user
	repeat until (btn(❎) or true)

	print("")
	print("decompressing..",5)
	flip()

	-- save stats screen
	local cx,cy=cursor()
	local sdata={}
	for a=0x6000,0x7ffc do
		sdata[a]=peek4(a)
	end

	dtime=stat(1)

	-- decompress data from map
	-- (0x2000) to screen

	px9_decomp(0,0,0x2000,pget,pset)

	dtime=stat(1)-dtime

	-- wait for user
	repeat until (btn(❎) or true)

	-- restore stats screen
	for a,v in pairs(sdata) do
		poke4(a,v)
	end

	-- add decompression stats
	print("                 "..(dtime/30).." seconds",cx,cy-6,5)
	print("")

end

-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 8 and
	-- 15 bits long with the next
	-- bits in these positions:
	--   0b0000.12345678...
	-- (1 is the next bit in the
	--   stream, 2 is the next bit
	--   after that, etc.
	--  0 is a literal zero)
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<8 then
			-- cache next 8 bits
			cache_bits+=8
			cache+=@src>>cache_bits
			src+=1
		end

		-- shift requested bits up
		-- into the integer slots
		cache<<=bits
		local val=cache&0xffff
		-- remove the integer bits
		cache^^=val
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)
		end
	end
end

-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function
	px9_comp(x0,y0,w,h,dest,vget)
	local mytable = {}
	local dest0=dest
	local bit=1
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	local cache,cache_bits=0,0
	function putbit(bval)
	 cache=cache<<1|bval
	 cache_bits+=1
		if cache_bits==8 then
			mytable[dest] = cache
			poke(dest,cache)
			dest+=1
			cache,cache_bits=0,0
		end
	end

	function putval(val, bits)
		for i=bits-1,0,-1 do
			putbit(val>>i&1)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if cache_bits>0 then
		-- flush
		mytable[dest] = cache<<8-cache_bits
		poke(dest,cache<<8-cache_bits)
		dest+=1
	end

	local str = ''
	for i = dest0, dest do
		-- str ..= (chr(mytable[i]))
		str ..= chr(peek(i))
	end
	str = escape_binary_str(str)
	print('' .. dest-dest0 .. ', ' .. #str) -- .. dest0 .. ', ' .. dest .. ', ' .. str)
	printh(str, 'output.bin')
	printh(str, '@clip')
	return dest-dest0
end

function byte_to_hex(byte)
	local hi = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte\16]
	local lo = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte%16]
	return '\\x' .. hi .. lo
end

function escape_binary_str(s)
 local out=""
 for i=1,#s do
  local c  = sub(s,i,i)
  local nc = ord(s,i+1)
  local pr = (nc and nc>=48 and nc<=57) and "00" or ""
  local v=c
  if(c=="\"") v="\\\""
  if(c=="\\") v="\\\\"
  if(ord(c)==0) v="\\"..pr.."0"
  if(ord(c)==10) v="\\n"
  if(ord(c)==13) v="\\r"
  if(ord(c)==9) v="\\t"
  	-- v = byte_to_hex(ord(c))
  out..= v
 end
 return out
end
-- 40% - 50%
-- 14 images per cart...
-- dw = 8 images per cart...

__gfx__
00000000010010101010110111113131353d3d3d3d3dddddd666666666666767777777777777777777777676666666666dddcddc3d3d3d3d3515111111111111
01001010101010010101011103131313d3d3d3dd3ddc3dcb6c666c6c6666677777777777777777777777776766666c666c6b63ddcdc3cd3dd353535353153103
00010001001001101111303031113133d31c1d3dcd3ddd6d6d66666666667667677777777777777777776766666666666b6cdc6bdbdd3dc53d35351515311311
0100101010101013010011011113131c1c35c3d3d3dcbdcb66b66c6666666777777777777777777777777676766c666666d6bdcdcdcbcd3dd3d1d31353151131
0010010010103010130301311315353535d3dd3ddcdddd6dc666666c6666667677777777777777777777776766666c66b6cdc6bdbdcd3ddbd53d353d13531303
100100101030110501111111153153d3d3c53dcd3dbdbcdb66666666666676777777777777777777777767766666666666c6bdcdcdbdcbdd3d3d3d1313131311
0101103010105053150530535053153d3d3dc53dcdddd6d6d6b66c66c666677677777777777777777777767676666666c6b6cd6bdcdbddc3d3d3131d35131531
10505050110513050311531153513d3c13d3d3d3dbdcbdcb66666666666676777777777777777777777777676666c66666c6dbcdcbdcd3dd3d3d5d3131353113
105115050350505151511515315353d3dc5cddcdddbd6d6dc66666c66666767677767777777777777776767666666666c6b6c6d636c3dcbd3d13313d3d131313
1505305150513513151351351535d3d3d3d3ddbdb6dcdbc66b666666666667677777777777777777777777666666666666cd6b6cdbdcbdd3d3d3d3d131313531
0510551305305115115155153553d3d3dd3dc36dcdddc6db6666666c7666767767777777777777777767676766666666c6b6cdcbcdcddbcd3d3d1313d3d31313
115305055115151535353535535d3d3c3cd3ddcddbcdbd6c6c66666666666767777777777777777777776766666666666c6d6b6dcdbcdc5d3d33d3c1313d31d3
105051311151313515151551553d1d3dd3dcdbdb6dd6dc6d6d66666666666676767767777777777677677676666666c66b6c6cdcb6cbdbd3d3dd3d3d3d31c131
151315153153555535355353d3d3d3d3dc3ddcddcdbc6b6b6c666666c766767677777777767776777776766766666666c66b6c6b6cdcdcdcdd3c5c53d3c13535
13151515553553555553d55d3d1d3dcd3d6b6b6db6d6d6c666c6666676666676767677777777777776776766666666666c6c6b6cdb6b6dbd3dd3d3dd3d3d3d35
515553535155553d3d5d3d3d5dddd3ddcdbcddc6dc6b6c6dc666666666666676767777677777777677676676666666c6c666c6c6c6cdcd6ddcdddd3cd3d3d3d3
55351555553d3dd5d3d3d5d3d3d3ddcdb6d6c6db6d6c6d66b66c6666666676676767677767767677676767666676666666c66b66b6d6b6cb6bdbcdd3dd3c53d3
535553d3dd5dd5d3ddddd3ddddddcdb6dc636b66c66d66b666666667667667667677776777777776776766676667666c666b66c6c6c66d6dd6dddb6dc3dddc3d
55d3dd5d5dbddbdddbddddddb6dd6d6d6d66c66c66c6b666c6c6666676666676767676777676767767676766767666666c66c66c666b6c6dc6c6d6cdb6dbddd3
d5dd5dddbdddddddd6db6db66dc6b6d6b6c666666b6666c666666c76677676776767677677777767676767676766666c66666c666c6666b66b6dcdb6d6cdcdbd
dd3ddbdd6d6d6b66b6d6d66dc6d6666c6666b6c66666666666666766766767667776767767676767777676767666666766c6666c666c666666666666cd6d6d6d
ddd6d6d6d6b6d6d6d6d6d6c6666b666666c66666666c66666666666667767677667777677676777767676776767666666676666666666c66c66b66c666b66b6d
d6b6d6d6b6666d666666c6666b66666666666666c6676666666666676677776777676776777776767677767767666666666666666c666666666666666666666d
d6d6d6b666d6666b66c666666666666666666666766666666666677676766776767776766767777777676767676767666666666667666666666666666c66c666
66666666666666666666666666766666666666666676767676767667676776777776777777777677677777767676767676766667667666666666666666666666
666666666666666666666666666767666676676767667676676767767676777776776666c6666777777676776767676767677676766767676676666666666666
66666666666666666767676777767677767676767677676776776767777767677777ccc6cc6c6777677777677776776776767676776767676766766666666666
666666666766767676767676767677667767776776767776776777767677777767776666b66cc777777677776767767767776777677677676767676767676667
66666667667676767677677676776777677676767767767767776777776776777777cbcbccc6c777767777677777777777677676767767767767676767667676
66666766767667667667676767676767767767776776776777677676777777777777ccbc6bcbc777777777777677676767767777776776767676767676676667
66666666666766766767667676767676767677677677677676777777767677677677cbccccc66777777677677776777776777676677676767676766667666767
66666666766676676766767676767767676767676767767777676767777767777766ccbcb6bcc776767777776777767677767767767676767676676766676666
6666666666666666666666666667666676676767676667666767676667676766c6cbcbcc6ccb6676767676767676776776767676767676766766666667666666
6d6d66666666666666666666666666666666666666766667666666666666666c66c6bcbcb3cbc667667676767676667676666766666766666666666666666666
d666666b6c66c666c66666666666666666666666666666666cbc6c7766666666cbc6cbc6b6b66666666666667666666666676666666666666c66666666c66666
dbd6bd666d6d66666666666666666666666666666666b6666b6d666666666c76cbcb6766cbc6c7666666666666666666b666c66666666c66c66c66c666666c66
5ddd66d63db56db6db6c6c66c66c6c66c66666c66cfbd36b6c3bcb66666c6666bcb6c666bccbc6666666666c666c766ccb6b766666c666666bd6d6666c6d66b6
5566dd63d55b6666666d6d6b66666666666c666666d3db66cdc3dc666c666cbcdcdbcbb66b6cb66c6c666c66666c66cbd3d66666c666666c36db6b6db6d6b6d6
d3d6b6d6d35f5d6dd6d6b666d66b66b6c6666c6666bdcdd6633db66c6666c6dbcbc3dc3c6cbcdc666666666c66c666c3d363c6c6666c6c6d6d666dd6666d6d6d
dddd6dd6bddd66bd6bdd66dd6b66d66d66b6b66666cb5bdb63c3d666c6666bc3dbdcbcbcb6cbb66cc66c6c66666666bc3d36b6dc6c6b7dbdbd6db6db6db6d6bd
55bd5dbdd5ddbdd56d6d6b66d63ddd66b6d6666b6c533d66333d3c666bcccb6c6cbdbddbd636cb66666766c6c6c6c6d3bdd36b6bd66d66dd6db66dddd6ddb6dd
5dddd65555d6dddd66db6d6dbd6db6b666b6d6bb6bdbd36dcd3cbdb66c66bd6b6d6bcdc6c6c66d66766666666b6bb3cd3cdb6dbbbdb66b63ddddddbddbd6d6d3
53ddbdd35db65d6b5dadddddd6d66d666d6c6bd33d33d3db63dd33666bdb6c6cb6cdbcd6bdb6bcb76cb666c666c6c3bdbdbd6c53d36d6dd6db6b666d6ddbdd3d
d5dd4d56d65ddb6d566666b6db6d6dd66db66b333bdddb6db6bd366c6bcdcdbd3cbd33bc666c6d366d6bc6b66bb7633d3c3363d3d66bd66bd6d6dbdbdddddddd
5d35dd6bd635d6d5adad66ddd656b6dd6db6bd3d5333bdb6bb6c33dbbabbd3c3d3dc3cdbc3333c3c6bc6b36cb66666bc35dd6bd3d36bbbd6ddbd666d3db6dbd5
ddd56bdddd5566ad3ddbd566b6ddd5db6d63cd333dddddcbbddd3c6db66abddbdc3dc66dbdcd633bc363bcb6b36d6bddbdbd66bd3dbd66dbdddbdd63d3dd3d5d
d5db5dddbddb6dddd65ddb666dd6dbdddbdbdb5d3d3333d33b66dbdbddd6c33c333bbbbc6dbcbd3dbddcb6bf5b3abdbdd36bb63db36b33dd66dd36dd6dbdd535
5d5dd5dad555d566b6d6dd55ddb6d666663335333ddddbdddc6bd63d3666bd333c3c366b6bd3d3c3db6b63d6bddbad3c3ddbfab353d3333b5bdd3dbdbdddddd5
53ddbdddd35ddbd6ddb635bdbd6d6d6b6d355b5333b353db3b6ddcd33bbdbd3c3333cd666bc333d33d3db636333d36bd3daa6b933553353ddd3d3ddddd53dbd5
d55dd5535535d555d5565ddd5d6da66dddb3535355333333d3ddd6dbd3b6b3333d33bbab63d3cdb3c6cbdc36333333d3dbd366633dd335d5d3d563d65bd55d5d
d5db6dd6ddd5dd66bd5d656d6daddd66d65333533d353d333336bd633b6b3c3dd3d3dd366bdb6dbbdbdd3d6d3c3d333db3d3333533353356d63d66db6dddddbd
d5dd5dbf66f6b5dd5533d66addd6bdbdbd33531335333d3dd3dddbddc3d6cb6d66c33c336dbd636bd33cb3dbd33333cdbdb33335535353dbdbddbdd6d6d6bd55
5dbdad5d5bd655dbd6ddd6dd6bd6dbdbdd35313353553533dd36333d33cb6ddbdcfdb3c33c3cdb3dbc3dd3b63333d35dd3d335db333533b55d65d5ddda3565d5
65655355555d66d65d5d6b5bdd3d3d5db5b53353353d333533353db3333533bd6aba63d33d3d33cddbdbb3bd3d3313ddb33b3dbd333b35b5dddbd3db5d355dbd
ddd6d535355d6da66db6f5d55d6d5b535b5d353535313533d33db353d3d3d33bbbaab3d33c3d33dbdb3b3d3dcbd333d63dd535633534b5b55bdd5d56d35dd65d
53556555d53dad3dbadabfdbd3dd5d3566d6dd5dd3313133313353333d3c3333ddc76c3333dbbbf633d333cbadb13336333333d5303313053ddddd635d5db6d5
555d6653555336d6dbab9b43da6335b5b4bdd6d6653131315355dd333333313ddd66bdd3c33d3db63d33d33db6bdd3ddbd5355633313313bd6babb4ddbdddd5d
53d566dd5355d5355b4b53aabdab535355d4b3b5333353131313dc313d3533333b3bdbd33533dddd33dd3335dbf66d3dd33533b533533355ab93556bdd6da3dd
5135db55dd535553055553b9bdb93b50335b503553553531333533353d5313d3d3d3dbd333133336336d333bfdbd3633b5bb5b9b03353533a5ab5dbdd4d65ddd
555564d35d5ddd35031055dab56666d65d6535335533535ddddddb5b5b33313d3333bdbd3133133dd333dd3d666b535db553535533553535dab5d5556b5355dd
5103d6d535355d553513053155355d5d355b1305353153133335d3335531335333333dd3331c333dd33333db665b5bbadb53353355355d65bd355356dd55d35d
550555d66dd5353d5535301535555355535b53335353313111333d33353313ddd31dddbd31313d33d3dd3335bab535533335315d3553665da55355d6dbd53dd3
11315346566a35d56d5555350533535355530335b50313133355353133113133d3d3dd6333d3dd3bd3d3d3b35b5353333531353553dd5b435355d35bd4656d55
550306dbdbdd6ddbd53566d53d503003135353035315353515d6dd313533335d33d3db6533d3d3dd3533d3d53d33355355353155b535355555353d5d5d5dbd55
dd5556add66b55d4d6556666553555553535303555313d6666d66d313313533353535d353353533dbd333333bdd5356db5335b4d5353553135555ddd535d5db5
6d6366db4ba4b5babfb6666656531330305303503131555dd6bd633131313133333133d331333135d3135b535bb533d553555ba3535035555d35dbfddb5bda55
56dddb4b5b4b9b9aba9ab6bf6b5535155ab45d3151533333355353131131313531335b353313131333135b5bb4a555a335db4bfdb5355335b5d3566da6afabad
535550535055551395b5ab9bad5359bab5a6f7d3530555535b3b4331313131353535b4a33131353d3135355313d35335335d6a3b5ab55355abadb4bab5b4bd55
1553551051550303355359b9baba5b9bad6665535035333535555d5331313313535b53d3331333bd331533135dd3513153555db93aab455b4aaab5ab9b9b55b5
5551665500305050553033533aadba6f666dbd5535535053553553303b5b5313533535dd333535bd3333131313d53133513335dd5335abaabab5535535555551
555355555050530503555554ab5a6667ddb455b4bab53503130331035330353131311353133b5ddb5331313135353555b5535335dd331d5b9b55b55551503050
115d5d5d350305535505555daac6765db455dab5b95303130515531351535353131355353355aba533153353135d5bab539b53533555655b4a55550305050515
033bda365301303503035dbad67653555513b9b5baadd30503035535331310303513135355bdabba6b5b43313535fbaab5ba5355353555b4bdb5b50551535555
10515515530001000155b5d66d355553135555b4ad7661303035555b5130355313033135dbabaa5a6ab4a3135353673b4aaba3b4355135554b535555354d5535
0011550d501000030055bbfd3555531053abd64aba7635030310dbdadb5b55310311313d65ababbbaaab531135535675bb9baab930535035b535bad3515635dd
555b4d3d653555551534505355553050b4d55d6baddb53013013dfbdba55b513130313156db4b955b35ba3350330156665b4b5ab53105350535353d555b55555
baabaabab4aba5b55530303010305011ab53b5be763d45301535666f666ddd3103313135b6ddbaba5ba3adb5351313556b435b5a65b13053005035553145b5b5
535ba7765bff6ff6add555050300030dfa355546d35d53030355666666f66d303111513155ddb5baba3ba6b535305135b43535bd6f63010535305ba5aba5aaa3
5355d7dab466f6ab5aa6555530350b66555555bd55d5305050566f66f66766303513551313d6ab4b5b4badab511305305553555abd643303553455aba9bab351
5555ddb55ddbdd55533535300500346bbb3555555d530103035665d6d66fd53103033305353d6b4b56adabaa31305365155b4353da3f503030535b59b54b4455
5355b55550550531515550010010155b5534d353da103030535db6a3d5ad655303301330553556b5babaa6ba13050355330535535dbd6330530545b555553535
15055055050555555d5555d55303035050535555503001050357f66f666ab65030535050315356a396ab6ab45530303150335305bb5ba5535153555553555350
5510556ddddadaddad6d6da355051055035030503001030315a666766f665d35030135030353356b5ab4bdabb43010133505053553b315530555530535535530
d5666a67f76776663535030110103050505503010010003005666667666bad5310305031010553d6ababbb4a5350303001303130515055355f666f5355355555
dbdab9bf667666b51050305030300503050505003003010535666666766dd630135035303031305365b455b3b43030533015305303053055566666a555555566
54b4b4b4b55b5b4b5b030515155550300503030300101030535335bdd65da5135035350503015351dfb535346533030001001030505050303d6d6db33b5b5556
b4b935b545b4b435b455510300db65010300003001003001555534553b4d630035505350303031533df514ba355030103030305303053055d5b4655533335355
5b4b4b4bd4dad5545510000015b9ab5030103001001003035d65b5b55adbd5303053530301030535036d3b5b46300101010135555555ada66553535555503050
3055a66fddb55503005035555aaba9b5003001003003000055bb5b5badda1030533505301030105053053333b453030300305003b5bababa3b45350551555530
55dddd55050100150104b5baabaa5b43030101001000013354535335ddb5300100503350301030353503503055010101301010355a554b5b9ab9b93b55035555
553503053050505055ba5aaaa9b4b403505030300355d3055330303535d501030b555503010355b5055030353530303000303005b43b9b99ba335ba4b9b00505
1000305050050555a59baab9b5b501301003050556666f6d553535005553001054b5b4ba1035353053555505503556d6d50001555545ab5ba9b5b5ba5b930010
05050500051555abab99b9b9b9d53505010000366666676f35505555553030033aa3baa6b1030301030505530556f6f66a3510305ddb4ab4b9b993aa33b40550
00000015055ab4ba9bab9b95ad6d51000303555baba66f665533035030303305abb4b46b9300303015305305115666dba366d30303553555ab93b4a335b55b05
000100505a6b9aba9b9b45d6bd5500100055d6ffa6abf66653053050053046539b4b9baadb50105300555a3150b66a5b9df6fd505050535b4b959b4b5304aa51
00000556bab9b49b4b94b5bd4530105035d6f6766655d66d5050050130356f6b9ab9abab5a1303003135bd65355dbd66666666630103055555335b95a9b56ba1
000155da5a5a5bab44bddf45100130305f66777776776a65500103000305665b4b4bda5b5630303000555ab65115d55666db5a6fd30505013535553b9bab435d
01555db55b9b9b44b4da551005350535a6666766767666d3530300130355d6fab5b5bb9baaad0305535556ab5035555566f5b5dda51050005555335534a5b5b5
1555d555a55b45ba55531013055555d6d3dd666766677d30505015050306f66d5b5305b9ba6d301350153dfa31003553555655030155db5000555535303435a5
055b55555559b455553050055b45d5f66da55d666666d55030030030305d66aba5b5b4b99663500010030566a35053d5035d56ddd55366b51503005535353359
0555bb5355ddd53510500353455da6ddf6666d6666fdb435010010135056bd6a395aaaaba667530350303037a33105555555ba6f76555d6a3050150553554335
0053033554b553001005034b465d666666656da6666d453030103005035df56abdaba3aa66f7d300353031566a3503055305556766d35553ab5505030055a553
00000005505005050555556f6dd666666f665d66665b555100300353015556ba5aaaba3b5bf66050053003536553050355503566aaad5555d96dd50050103350
0001000000005000555ddadd6fdb5566f66666666555153503001030055dabf5bab4b9b9b9666353030503556ab0103055535555dbb535d653d6ad5515010011
01005000105505051555555d66664db535da66765b50d530301030503566dd6faab5b55b96a6f30015315536ab950501315503555d5bb5b5555555d550050500
010505050505051515355355f66666d4d66666655555f503053503105f666a66ab5353b4bb66fd300053556b49a35030053d5535d55b5b553453503005001010
15555555555550000005056667f6f766f66d6653505663055035530355665d6b5b5034b559baab5053050dab5bda130530055305055533555b41101050105050
55d555555d553000030013ddd6667767666b45555056d5050355355556666b6da30b5b4bb5abdf0305035bd44adb55300500355005055555504a501001000000
d55dd5553000001300005dfdb45666676664d350000d653000555155f7766566b4b9b535535a6d35010515d5baffd35000300153053555b33334a00000305500
5555d3500000010000005666f66665666653550355dda30b5355305d66676d664b5b535333566a55350305d5da66650101010505550555555bdbd50300000030
66d3000001010000001156ad6766666d55550505566665b535030505666663adb5333333535f6635530053ff63535503050500303535515aa9a9bd0000010001
550000010000000105056666dd6666db4355000155566d5005051553005553dd4335345535b666d50051505351dd665053503005005155535a333c3010003000
0001010000030300300566b5b466d545150105005355d535153555d6dd555346d55b4baba9bf6f305105dd5ddf6f665550500010500003013131333100100000
5100000003000000000565b55345b535011000300005550501530df6666d55566b95a5a9baa66655d5da6666ad66553050305050035300103131133010500100
00001015001010101013505555305501503030000100305053505d66a6665355a5bababa9b476df67f66ddd53535505000010355100055010103153100001001
5101010000000000000001003005505003000103003550500005530535d6530d6aa4a4ab5ad6fdd56d5353555500500301053000553000350000015000000000
00000001010000000005050305000503005030000005000355050505555350356d66666666f6d6b5535505030015305000300503055510035051501000000100
0010010000000000000050000150305050010501015003000000055105050505556d6d6dd555b45005001300050050301005030500df50000500500000000000
00000000000000000000050500305503030500000300105050301553001050103130333333355555505030550000005550000503053dd5305000000000000000
00000000000000000000005555465300005000103000530301050d500000003000103003005555550130050030000055b4350005035055450010500000000000
00000000000000000000055da66f505050001030000005050500555000000050550303030355500550050350550000015643503005500355d530000000000000
00000000000000010000555666651030001030000101030000305d30000001013005000005500003d53050103030000003650005005550155641000000000000
00000000000001000005556d6d603001003003000001000500306500000005000500310500550000da300501005100000005d3010003010035f6550000000000
00000000000000000055b55d53050000105010001005050001555d0000005030003050555000000056a510305013000000005350500000100d66555500000000
00000000000000000555ad5500001050503000000305313000356500010030050105050505030001366d50505050530001000050301010010555565550000000
0000000000000000555351500050501030000001000050010505a30000051000000000000000000055d555053050050500000000050305000000555355500000
0000000000000000d56500000050110300000000101050500003d555000305050505015010000005134665550101011000000000001050100153555655500000
00000000000100015550501010000300000001050005000303055d6500155100001000030000000155bf6653500100500000000000000005005534b4ddd30000
__label__

ccccccccccccccccccccccccccc11111111111111ccccccccccccc111111111111111111ccccccccc1111111cccc111111111111111111111111111111111111
ccccccccccccccccccc11cccccccc1111111111111111c1111111111111c111cc11ccc111ccccccccc1111111cccc11111111111111111111111111111111111
ccccccccccccccccccc111cc11cccc11cccc1111111111111111111111ccc11cc111ccc11ccccccccccc1111111ccc1111111111111111111111111111111111
cccccccccccccccccccc11cc111ccccc11111ccc11111111111111111ccccccccc11cccccccccccc11cccc1111111cc111111111111111111111111111111111
cccccccccccccccccccccc1cc11cccccc1cccc111111111111111111cccccccccccc11cccccccccc111cc111111111cc11111111111111111111111111111111
cccccccccccccccccccccc11111ccccccccc111111111111111111cccccccccccccc111cccccccccc11c11111111111cc1111111111111111111111111111111
ccccccccccccccccccccccc11111111111111111ccccc11111ccccccccccccccccccc11cccccccccccc11cccc111111111111111111111111111111111111111
ccccccccccccccccccccc11cccccc111111111cc11cccccccccccccccccccccccccccccccccccccccc11cccccc11111111111111111111111111111111111111
cccccccccccccccccccc111cccc11ccccccccc11111cccccccccccccccccccccccccccccccccccccc111ccccccc1111111111111111111111111111111111111
cccccccccccccccccccc11cccc111cccccccc111c11cccccccccccccccccccccccccccccccccccccc11ccccccccc111111111111111111111111111111111111
cccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11ccccccccccc1111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc11cccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc1111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccc1111ccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccc111cc11c1111c111cccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc11cccc11cccc111ccccc11cccccccccc1111111111111111111111111111
ccccccccccccfffccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccccc11111ccc11111111ccccccccc111111111111111111111111111
ccccccccccffff77fccccccccccccccccccccccccccccccccccccccccccccccccc1cc11cccccc1cccc1111111111111111111111111111111111111111111111
cccccccccfff77777fcccccccccccccccccccccccccccccccccccccccccccccccc11111ccccccccc1111111cccc1111111111111111111111111111111111111
cccccccffff777777fccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111ccccccccc11111111111111111111111111111111111
ccccccffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111cc11ccccccccc111111111111111111111111111111111
cccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11111cccccccccc1111111111111111111111111111111
ccccffff7777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccc111cccccccc111c11ccccccccccccc1111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccc111111111111111111111111111
ccccffff77777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccfff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccfffffff77777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11111111111111111111111111
ccccccfffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccc11111111111111111111111111
77777cffffffff777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777fffffffffffff7777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c11111111111111111111111111
77777777ffffffff7fff77ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111111
77777777ffffff7777fffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c111111111111111111111111111
777777777777777777ffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111c111111111111111111111111111
777777777777777777fffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777777777777777fffcccf77777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
777777777777777777ffffff777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
7777777777777777777fffff7777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
77777777777777777777fffff77777777777fffffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
7777777777777777777777fffffff77777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
777777777777777777777777ffffff77777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffff77777777777777777777fffff77777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
ffffff7777777777777777777fffffff777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffffff777777777777777777fffffffffffffff7fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc191111111111111111111111111
ffffffff77777777777777777cccccfffcccccccccccccccccccccccccccccccccccccccccccccccccccc9ccccccccccccccc199111111111111111111111111
fffffffff7777777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9f9cccccccccccccc9ff911111111111111111111111
ffffffffff77777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccff99ccccccccccccc9ff911111111111111111111111
fffffffffff77777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc999999999999999999999911111111111111111111111
fffffffffffffffff7777cccccccccccccccccccffffccccccccccccccccccccccccccccccccccccccc999999999999999999999991111111111111111111111
fffffffffffffff7f77777cccccccccccccffff77777ffcccccccccccccccccccccccccccccccccccc9999999999999999999999991111111111111111111111
ffffffffffffffff77777777ccccccccccffff77777777fcccccccccccccccccccccccccccccccccc99999999999999999999999999111111111111111111111
fffffffffffffffff77777777cccccccfffffff777777777cccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
fffffffffffffffffffff7777ffffffffffffffff7777777fccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff999990099999999999009999999911111111111111111111
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9999990099999999999009999999911111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9999999999999999999999999999911111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999991111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc99999999999999999999999999999991111111111111111111
d6666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999999111111111111111111
df66666666666666666666666666666666666666dd66666666666666666666666666666666666999999999944444444449999999999999991111111111111111
ddff6666666666666666666666666666666666ddddf6666666666666666666666666666666666999999999999999999999999999999999999111111111111111
dddf666666666666666666666666666666666ddddddf666666666666666666666666666666669999999999999999999999999999999999999111111111111111
ddfff6666666666666ddd66666666666666ddddddddff66666666666666666666666666666699999999999999999999999999999999999999911111111111111
ddddfd66666666666ddddf666666666666ddddddddffff66666666666666666666666666669999999999ffffffffffffffffff99999999999911111111111111
dddddddd666666ddddddddf666666666dddddddddddffdd77777777777777777777777777799999999ffffffffffffffffffffff999999999911111111111111
dddddddddddddddddddddddfd66666ddddddddddddddddd6666666666666666666666666699999999ffffffffffffffffffffffff99999999991111111111111
dddddddfdddddddddddddddddddddddddddddddddddddddd77777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
dddddddffdddddddddddddddddddddddddddddddddddddddd7777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddd77dd7777777777777777777999999ffffffffffffffffffffffffff9999999911111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddd777777777777777777779999ffffffffffffffffffffffffff9999991111111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd7777717177777777779999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd717771777777777777999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddd9dddddddddddddddddd71717777777377777999fffffffffffffffffffffffff99999911111111111111111
dddddddddddddddddddddddddddddddddddddddd979ddddddddddddddd1dd1711771777377711999fffffffffffffffff5fffffff99999911111111111111111
ddddddddddddddddddddddddddddddddddedddddd9dddd1ddddddddddd1dd111117111773711199993fff3ffffffffff5fffffff999999111111111111111111
ddddddddddddddddddddddddddddddddde7edddddd3dddd1dddd1dddd1d3d131111111173111109993fff3ffffff5555fffffff9993999111111333111133311
ddddddddddddddddddddddddddddddddddeddddddd3d33d11dddd1d111d3313131111111313300999939933f3fff67ddfff3f999993333333313333333333331
dddddddddddddddddddddddddddddddddd3bdddddd333dddd1d3d1dd11113331311313111337700999393333333367dd39933933333333333311333333333333
ddddddddddddddddddddddddddddddddddbdddbddd3dddddd113301d11313331333333138877773333333333333367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbdbdddddd33dddd33010330333313333113333888777777888888888883367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbbbddddbd33ddddd30133b3333311333133333887733337788888998888867dd23333333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbdbddb33b33333d33bb333333333333338888877333377888893a9888867dd22888333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbbbbbb33b33bbbd33bb3333333333333888888873333722889999a9888555528838333333333333333333333333333
dddddddddddddddddddddbdddbdddbbbbdbbbbbbbbb33bbbbbbbbbb3333333333888888888888888888999999888888888883333333333333333333333333333
ddddddddaddddddddddddbbddbbdbbbbbbbbbbbbbbb3bbbbbbbbbbb3333333383888888888888888888899992288888888833333333333333333333333333333
ddddddda7addddddddddddbdbbbdbbbbebbbbbbbbbbbbbbbbbbbbbbbb333388888888888888888888888899228888888388333333333333333333333b3333333
ddddddddaddddddddddbbdbbbbbbbbbe7ebbbbbbbbbbbbbbbbbbbbbbbbb3888888888888888888888888888888888883883333333333333333333333b3333333
dddbdddd3ddddddbd333bdbbbbbbbbbbe3bbbbbbbbbbbbbbbbbbbbbbbbb888bb88888888888888888888888888888883833b3333333b3333b3333333b3333333
dddbdddbbbddddbbd3bbbdbbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbb88888b8888888b88888888888888b888888b83333b33bb333b3333b3333333bbb3b333
dddbbdbbbddddbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb8888888888888bb8888b8bbb3b3b33bb333b33333b33b333bbbb3333
dddbbddb3bdbdbddbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb888bbb8bbb888b88888b88bbbbbbbbbb333bbb333b33b33bbbbb3333
bbdbbbdb3bdbb33dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbb88888b8bbbbbbbbbbb3b3bbbbbbb33bb3bbbbb3333
bbbbbbbb3b3bbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbbbbbbbbbbbbbbbbbbbbbb3bbbb3b333b3333
bbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbb3bbb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b3b3bb3bb3333bb333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b3b3bb3bb333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333b3333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3b3bbb3333bbb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb33333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3b3333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33333333333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333333b333bb3333333
bbbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333b33b333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b33b333333333
bbbbabbbbbb3bbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bb3b33b333333333
bbba7abbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33333bb33
bbbba3bbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33b33bbb3
b3333333333bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b3bbbb
b3bb3bb3bb3bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbb
b33b3bb3bb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3b33b33b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbb
b3bb3bb3b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

__gff__
0081030301811303030301010000010003030101010103030101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
fffffff0ffff0ffd89e32fc19aa67c51f47fc01ffcc05f7c3c8cff11bf818b9b851f420042b8c21112fee70148c0f8f821e008c20b0a84ff733842c042f8295c940f8c62f83f23e01906fe092f3811f00dff6fc641c03fe046f8427887ff73183f50caf8851bc3f87ff12338f818ffb342f9df13065ec2ff8a7084ff3fc0022e
12f03fe3e37fce013ef0bfe6ff2ff0ff57f8ffd360e003ff7f3a20bce1ff1f87833ff8ffc760fcc1ffbf0eff7f1f08c0cdff82ffbf03168484ff7f0bce4258085ff8ff8f0148180290e10bff3309ffd3702402168431aef07f927593ff2732788681ff215f0207ff5719070165fc9f780438c2ff344c7e201cfcdf643ce07fca
c107c1c7ff4ac617fec782977081ff8f8c13fc6f255c24e024fc2fc3ff990ffcc5ffdfe4ff007ee7ff8f12fe1789ffff6f08c0ffff178430feff7ea83c82ffffcd8df0ffafc31fe0ffdf08fe47899ff8ff3f89ff83952b9c99ff3f13fe47f2519af8ff3730e17f22e40a02feffd2f03b7f3090c4ffff41f89d4b4e59e2ffff10
fe9784ffff44f81f72642be4ff6f70f0ff4b207cfcff6ffe08ffffc4fe871c5c25f9ffd3e18fc2ffdf90ff6558f82095ffbf4c180f1bfeff3168380bff7f8df25bf82bfcffbdf02ff8ffafe1672efeff43ea7f127e92121ef93fa6fe59f8972bc98ffcaf63f883f12b5ff843feffc3f0bf4df2caff5f88fe0f79e59025fe92f1
ff17c2ff6963a91f648941fe47f6bfe497851a3933e1e37f633f871ff9273c591e3bc233c9ffc4fea7fcc498fd012ef9ff83e1e27fc0ffc881173ce1ff8fcae1f8ffd9ff5f73fcff3cffffc9fe17e137fbffff865cf9ffc7e1afede8ffca85ff8fe3f49dfc007eca35f2bfb125f9ff2be12ffbdf4827f99fd8ffba8fe4070b7f
8027c9ffc2fe57e11fccf2b22cb75c24c9ffc04efb8bbf198c1c5c593e7901d7ff07fcc7ff843f6a567ef2fcedb8c2af7ce1bff00b3fdbff24fcccff22fcbf72f5ffbff1bf03c05f791cfc6f1cff7f83f29790ff91fcff1bd03e38f9ffcf8d90c299f8fff07fcffc744402474eff173b12fff3087ed90c32421c83849ff2faff
17b9355f9bf885091c5442963709e7c66187fd7f930b5d5ed9350bc391385dc3f26c9c520e494e1f6184ff4f729f40220d04b2c44190cbd67110b2efb93a721096b8c3ff66d70f1eb19a6382a06982157ce8210924d22542867be2e5ff931f2493e8f1894d481cf4e08f3f8ec439f99ff0bfdc18310cdd6e2091c58365e569ea
95f1ff3f2258788e438207cd6152c006ea43f4c82ff97f87030788d0c31124f9411f4ef80707f63591ff2faf9c96f0931cfb83ee975f58f201d9fbc70f512bbff363c242001e0b0d07a75d76f2f9e30abf73e51f3f2432fc232fd7c25ff9c5f6cf7cf27fe049863790d09c4ef983097e4c62e109f831f1479e7f5e802b825f11
f9594e0cff0712e678466d9cfbe1cadf810fff0f88c41316fe4c6018fe083fe70fe34afc118e400ef0138667482a18c6ff499e05841fc0020c7f6c08214308f922c0c2ff949384302b022e063eca41c27158e2ffca4f213cdc618c845b2e09ffff28fc4a00c20f24fcff557280f00fff7f120ce0ffbf0f06e00affff39fc42f9
ffc724349cfcffe9d0808bff3f5c1046f8ffeb0316feff3f8087ffbfcecbff3f0f77f82b8fff3f1bfe8c0fff7f34fc9c7fbeffbf19be081e967f1c9e66feff6148f82909ca92e0ff7f7281ee49cec4ffdf0d0bece408ffff7430044110f0ff7f2938863ff8ffd70f20e0ff6f872308ff7f9d868fffffceffff2f000000000000
