pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- px9 data compression v9
-- by zep & co.
--
-- changelog:
--
-- v9:
--  @pancelor
--  ★ redo bitstream order
--  234 tokens (but ~4% slower)
--
-- v8:
--  @pancelor
--  ★ smaller vlist initialization
--  241 tokens
--
-- v7:
--  smaller vlist_val by @felice
--  7b -> 254 tokens (fastest)
--  7a -> 247 tokens (smallest)
--
-- v6:
--  smaller vlist_val by @p01
--  -> 258 tokens
--
-- v5:
--  fixed bug found by @icegoat
--  262 tokens (the bug was caused by otherwise redundant code!)
--
-- v4:
--  @catatafish
--  ★ smaller decomp
--
--  @felice
--  ★ fix bit flush at end
--  ★ use 0.2.0 functionality
--  ★ even smaller decomp
--  ★ some code simpler/cleaner
--  ★ hey look, a changelog!
--
-- v3:
--  @felice
--  ★ smaller decomp
--
-- v2:
--  @zep
--  ★ original release
--
--[[

	features:
	★ 273 token decompress
	★ handles any bit size data
	★ no manual tuning required
	★ decent compression ratios


	██▒ how to use ▒██

	1. compress your data

		px9_comp(source_x, source_y,
			width, height,
			destination_memory_addr,
			read_function)
				
		e.g. to compress the whole
		spritesheet to the map:
		
		px9_comp(0,0,128,128,
			0x2000, sget)

	…………………………………
	2. decompress
	
		px9_decomp(dest_x, dest_y,
			source_memory_addr,
			read_function,
			write_function)

		e.g. to decompress from map
		memory space back to the
		screen:
		
		px9_decomp(0,0,0x2000,
			pget,pset)

		…………………………………

		(see example below)

		note: only the decompress
		code (tab 1) is needed in
		your release cart after
		storing compressed data.
		
]]

function _init()

	-- test: compress from
	-- spritesheet to map, and
	-- then decomp back to screen

	cls()
	print("compressing..",5)
	flip()

	w=128 h=128
	raw_size=(w*h+1)\2 -- bytes

	ctime=stat(1)

	-- compress spritesheet to map
	-- area (0x2000) and save cart

	clen = px9_comp(
		0,0,
		w,h,
		0x2000,
		sget)

	ctime=stat(1)-ctime

	--cstore() -- save to cart

	-- show compression stats
	print("                 "..(ctime/30).." seconds",0,0)
	print("")
	print("compressed spritesheet to map",6)
	ratio=tostr(clen/raw_size*100)
	print("bytes: "
		..clen.." / "..raw_size
		.." ("..sub(ratio,1,4).."%)"
		,12)
	print("")
	print("press ❎ to decompress",14)

	memcpy(0x7000,0x2000,0x1000)

	-- wait for user
	repeat until (btn(❎) or true)

	print("")
	print("decompressing..",5)
	flip()

	-- save stats screen
	local cx,cy=cursor()
	local sdata={}
	for a=0x6000,0x7ffc do
		sdata[a]=peek4(a)
	end

	dtime=stat(1)

	-- decompress data from map
	-- (0x2000) to screen

	px9_decomp(0,0,0x2000,pget,pset)

	dtime=stat(1)-dtime

	-- wait for user
	repeat until (btn(❎) or true)

	-- restore stats screen
	for a,v in pairs(sdata) do
		poke4(a,v)
	end

	-- add decompression stats
	print("                 "..(dtime/30).." seconds",cx,cy-6,5)
	print("")

end

-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 8 and
	-- 15 bits long with the next
	-- bits in these positions:
	--   0b0000.12345678...
	-- (1 is the next bit in the
	--   stream, 2 is the next bit
	--   after that, etc.
	--  0 is a literal zero)
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<8 then
			-- cache next 8 bits
			cache_bits+=8
			cache+=@src>>cache_bits
			src+=1
		end

		-- shift requested bits up
		-- into the integer slots
		cache<<=bits
		local val=cache&0xffff
		-- remove the integer bits
		cache^^=val
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)
		end
	end
end

-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function
	px9_comp(x0,y0,w,h,dest,vget)
	local mytable = {}
	local dest0=dest
	local bit=1
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	local cache,cache_bits=0,0
	function putbit(bval)
	 cache=cache<<1|bval
	 cache_bits+=1
		if cache_bits==8 then
			mytable[dest] = cache
			poke(dest,cache)
			dest+=1
			cache,cache_bits=0,0
		end
	end

	function putval(val, bits)
		for i=bits-1,0,-1 do
			putbit(val>>i&1)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a] or {unpack(el)}
			pr[a]=l

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if cache_bits>0 then
		-- flush
		mytable[dest] = cache<<8-cache_bits
		poke(dest,cache<<8-cache_bits)
		dest+=1
	end

	local str = ''
	for i = dest0, dest do
		-- str ..= (chr(mytable[i]))
		str ..= chr(peek(i))
	end
	str = escape_binary_str(str)
	print('' .. dest-dest0 .. ', ' .. #str) -- .. dest0 .. ', ' .. dest .. ', ' .. str)
	printh(str, 'output.bin')
	printh(str, '@clip')
	return dest-dest0
end

function byte_to_hex(byte)
	local hi = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte\16]
	local lo = ({
		[0]='0',
		[1]='1',
		[2]='2',
		[3]='3',
		[4]='4',
		[5]='5',
		[6]='6',
		[7]='7',
		[8]='8',
		[9]='9',
		[10]='a',
		[11]='b',
		[12]='c',
		[13]='d',
		[14]='e',
		[15]='f'
	})[byte%16]
	return '\\x' .. hi .. lo
end

function escape_binary_str(s)
 local out=""
 for i=1,#s do
  local c  = sub(s,i,i)
  local nc = ord(s,i+1)
  local pr = (nc and nc>=48 and nc<=57) and "00" or ""
  local v=c
  if(c=="\"") v="\\\""
  if(c=="\\") v="\\\\"
  if(ord(c)==0) v="\\"..pr.."0"
  if(ord(c)==10) v="\\n"
  if(ord(c)==13) v="\\r"
  if(ord(c)==9) v="\\t"
  	-- v = byte_to_hex(ord(c))
  out..= v
 end
 return out
end
-- 40% - 50%
-- 14 images per cart...
-- dw = 8 images per cart...

__gfx__
d36cdcddcddcdcddcd3dc53dc53d3dcdd7c3d3d353d3d3d3dcd66cdc666677777777676777777777777777777677777677777777777777777777777777735b77
3cd6bdcbdcb6c6bcdbcd3cd3dcd3c3d33663d3d3dc1d3d3c3d6666c6c6c6666777777677777776767677777766777766777677777777777777777777777db677
d33c66cdbdcdbdcdbdc3d3dc33cd3d3d336cdc3c3d3c3cddc6c66666b66c6667776767667776777777777677667777667766777777777777777777777773bd77
dcd3c6dcdcbdcd3dcd3dd3d3dd3d3d3c5cd6cdcd3d3dd3cd666667666c6666676777767776777677777766776c777766777677777777777777777777777dbb77
3d3d3c66cdcdbdc3d3d3c3d3c3d3d3d3d33d6cb6c3d3cddc6c6666767666667677777777776777777777667776777766776677777777777777777766776bd677
dc3cd3cb6b6cdcbdc3cd3cd3d3d3c3d3c5c366cd6c3d3c6b66666676666667677777767767767777777766776c77776677667777777777776b6777db777dbb77
3cddbddc66c6bdcd3d3dcd3c5c3d3dc53d3d366cd66c6dc6c6c6c6667767667677677777767776776777667766777766776c7777777777773377776b7773b677
6c6c6cbdc6676cdbcdcbd3d3d3d3d3d3cd3cdc66bc6666666c666c6c6676766767777677776777777777c677667777667766777777777777db6777d6777dbd77
cdb6c66c6667776cdbdcdc3dc3dcdc3cd3cd33c6cd6c666666cb6c66667666767676777677767777777766776c6d66cb6666777776777777b37777b6776b5b77
dcdcbcdcbc677766c6cdbdc3dc3dcbdcdc6c6cb66cb66666766c6c6c666666666767777776777677767766d36333d66dd666777777777777db67776b777db677
cbdcddb6c6c6677766c6cdb63dcb6cd6c6bcbddc66cc666666c6c6b6c66c666c76776767777677767777c3353d5b666bdb6c677777777777db6777d6776bdb77
dcbdcbc66cbcc676666c6cdccbdcdcbc6b6cdcbdc66bc66c666666c6bc66c6666676777676767777776d3553d535d665d6b6b777777677773b7777b6777dbd77
cdc6b6c3c6666c7777766cb6cdcdbdcdbcdcb6cdb666c6c66cc6c66c6c666c6c666766777677677777c353553553ddbdbdd6d77777777777db67776b776bb666
dbcdccd6bccbc667777766c6bcbcdcb6cdcdcdbcdc66cb6c66c6b6c6c66c6666666677676767767777d3553555dbdfd36b66b777777777773b7777d6777dbb6d
c6cb6bcc6cd6cc6c7777776c6c6dc6cdbcb6bcdcbcc67c6cbcb6c6c6b666c6c6c767677676767776763535535355d663ddd6667777777777db67776b7773db75
c6c6c6cbcbc6b6c6677777666cbcbcbc6cdcdc6b6dbc76c666c6cb666c66c6c66667667667666767763553535d33666ba36b667777777777db7777b6777bdb7d
6bc6cb6c66ccc6bcc6777777666c66cdcb6cb6ccc6c6c66c6cb6c6cc66c66c66c76676776666677776353555d355b665dbf6b677777777773b677ddd776dbd6d
c66c6c66c6c6bc6c6c66777666c6cb6c6c6c6cb6bc6bc66666c6cb6cb6c6c6c6666666666666767676355313dd35666b5d66667777777777dbd673b6777bdbfd
6c66c66c6c666c6c6cc7677766666c6c6b6cb66c6c6c6b76cc666c66c66c666c6c6666766676767776353553db53d665bd66b67777777777b5b77d5d776dbd6d
66c666c666c6c666c66c77777777776666c66c66c6bc6cc766c66cc6c6c66c66c666c7667667676666355355d555bf635d6b667777777777dbd763db777bbbfd
6666c766c6666c6c66c666677766c76666766c6c6666c666666c666c66c6c66c66c666666666666676353513d5356665b5f6b77777777777b53773d6777ddb75
c6c66c6c6c6c6666666c6c66777766c666666766c6c66c6c6666c666c6666c666666c66c7666666666355535db53d66b5d66d67777777777dbd773db776bbd6d
66c6c66666c66c66c666666c67776666c66666676676c66c6c6c6c6c66c6c666c666666666c76666763535156555b7655bf6b67777777777b3d673d6777dbd65
6c766c6c6c7c66c76c6c66c76c7777c666676c666667766666666666c66666c7666666666676666666353553d353666b5d66667777777777db5775367763bb6d
66c666666666666c66cd6666666677766666666c66c6c66c7666c6c666c6c6666c66c6666666667676355353d55556653d6b667777777777b5b763dd7765ddd5
66666c66c66c6c7666cb66c66666777666666666666666666c7676666666676c7666766666666766763535555353d6b55bfdb67777777777d3d773db7765bbd5
666666666666666c66dd3c666666676776c6676666c7c6c66666666666666677666666666676766766351535d355b665bd66667777777777b3d673d677d5bdd5
766666666666666766cbdb666666777677766666c76676666c66666666667666666666667666676776353513d535d6bd556b667777777777dbd7653555d5bb53
766767666666666666dd6b6c766677766676c76776666c6667666666666666767676676667677677763553553553565db566b67777777777b3ddb51355d3d531
766676666666666666cbd6b676677776666776676766666666666677666676676767667767676767763535155355b65d5556d67777777777d335110553d5b530
7777677767666666666b6b6c7677777666777667676666c66666666676676767667676676767677776351313553556b5bdb6b77777777777b550351515551350
777777677777777776cdbdb67766777676667767777766666666767767676767676767767777776766355515535356d5bdfd667777777777d351503551d35305
77767777776777676b6b6d6c77c667776767677666766c66c666776777767776777677777676776666531353d555d6db5d6b6677777777773030305055d55301
77677677677777776cbdbdb6776b667676767676776766666c666677767776777677767677777766c6355515db53bd655bfdb677777777775355050315530510
7776776776766767cd6ddd6b776cdc7767676767677666c666c6677777777777777777777777776666535353d535d6b55d666677777777763510305155551350
76776776776776776bb6bdb677cb6b66776776777676c666b66b7676777677777777777777777766663535155553da65bd6bd677777776763535050505d31030
77777777677767776ddbdd6c776d6cb66777777677766666c666667777777767776777777777776666355535db55d6d35df6bf77777776765105031355d53505
7776776777677767cb6d3db6776b6d636677767777766c66b6c6667776776777777777777777776667353535d535b6db5b6d667777777676335030515d355030
77777777777777776dbddb6b776c66d6c6777777777c66b666b66677777777776777776777777766c7535513db55d6655dfb6677777776763053050555553050
7777777767777777cb63d6b6776db6b6667777777776666c66c666777777777777776c67777777666635153565536b635b7d667777777666bd55d56ddd351305
77777777777777776dd5bd6b77666d6b667777777766c6666b6b767777777777777666677777776c67535535d353d6d53dfb66777776c6bdddbd667776510530
7777777777777777bdbddb66776bcb6dc7777777776c6b6c66c666777777777777c6b6677777776666353535535555b5556db77777d353553553d6777d315011
7777777777777777d65db6bd676666d6b77777777766666b6b6b766c67777777766c6c677777776b7653553b6535b6d5bd66d67777353513035567777d503503
7777667777777776cbd5db6b776cd6b6d7777777776c6b66c6b66c666667777776b66b777777776666353555d535d6a35d6b66777d311505105367777d350350
7776667677777777dd3db6dc776db6dd667777777666c6c66b6c66b666667777766666677777776c663515335355b5d35b65667763515030535567776d150530
6766676677777776b65db6b66766666bc677777776c6b66b6b6b6b66c666777776cb6c677777776666353535553555b555db66777d303505003567776d535350
6676667677777777d3db636b776b6b66d67777776c666b6cb6d6c6666666777776666b777777776b76535533d355ddd53d6db77765350530355377776d350301
6666667677777776c5ddb6b6676cd6db66777776666b6c6b6b6b6b6b6666767676c6b676777777666d35353555b5b6bd5bfd667765150305015567776d553501
6c66667667777766b5bddb6b77666d66d6676776c6c66b6ddb6bdd66c666676766b666666777766bdd353535b555d5b55d6bdf7763530515031577776d350530
6666666677676766d5db6db6676db6b6b666667666b66b6b6db6bdb6b666666676666b7666777666dd554b55d535bd653d6db77765105030505377776d535030
db66c67666c666663db6b6db776666dd66666766c666b6d6b6bddb6b66c6667666b66666dd6cd666d36dfd33d355ff65356b667663530530315d677763553051
666b666666666c663ddbdb6d666bdc6b6c6666666b6b6bdbdddd6db6cbf66666666c6b76336d3d666d666b55b55d66b55bfddf6765153050503577677d503530
db6666666c66b66d5bddddbb76666b6dd6b6666c666c6ddd35dbddbd66666666666b666d3dd6bd3b7676355dd55b66b55d6b667763505035035d677763535050
666666666666666bddb6b6d6666b66d6b6666666b6b66666d35dddb6b66b766666666b6d533d5515f76dbd6b5b5d66635bfdd66765030501503577776d505301
db66b6b66b666b6d5dbdbdbb6b6dddb6d6b66666b6ddb6666b5dda366666666666b66773555535356763d555d55b6b635d6b66f763513503055d677765353050
66d6dd66666b7663dbd6b6db666d66ddb666666c6353dd66bd6dddbbdb66666663d667653355355367635b5bdb55b6b55bfdb67665305030503d67776d535305
ddb6dbd6b66666bdddbddb6b6db6bdb6d66b666bd53d563dbd776bdddbdb6666dbd366c5153d503567635555555b66635d63dddd350503503153777763511531
666666666c666665bddbdb6db66d66ddb6d66666b5535d5bd5775dbdddb66666d53d66b513553503f665355db55dbb653565d5bd55315050505d777765135301
db6b766b6bdb6b66d6b6b6b666bddb6d6d6b66663535dbd5bd77355b55db6666bd35b6651535535b77635d355b536b55356b5555351313050353777763053051
d3d666b6ddb6b66b6b6666db6b66dddbd6b766663553dd555d77d35d35db6666d55dddd350553515676355535d53bab55bf5553d53150503053d776765105350
ddb666d66db66b6d365d66b6d66b6d6db666d66635353653bd77355bd3db66d6b535b6b55355535367635b555b5dbdd355635d5555030350505d677763035030
3ddd66b6bd6b6bddbdbd666b6bd6db6ddd6b666d3555d5b55d77d35555b6da66535ddd650535350567635555b5555b55356515d3d31505031353777765153505
dbd666d6ddb6d66ddddb66bddddb6dab6a3ddbf63535365535773553d55b6366353535d3535553536763535555335535356353d551105305015d777761030530
5dbd66b66db66666bbdd66ddbdd6dddd366d6ddb5513dd535d775355b5dbddd3555d53d53153513566635515355353515563555d35130503503d777763053501
d5d666d6bddb666d6ddb66b6dbdbdbdddd35bd6d53553d553d775535535a3d5d353535d35155350567655513535305350565553d53150310155d677765053031
3dbd6b66ddb6666bd6bd665bddd646db6d55d3dd3d355db535773515d35b6535535d535515355353676353505135305353d535d155035050303d777763053550
dbdd66d6bdbd66656dd366b6dbd6f6f7f635353d5d53dd553d77d3535bddbd53553555d35355355566665535155553556f65553d35105305055d6777d5035030
5ddb76b66ddbda6bd6bd6dddd5b6f66666d5d555b635bd5355773555553d55515353535505553535d666b511355dd53556fd35d5535105035036677763003530
dbdd66d6bdbadd63ddd366bdbddd6bd3535353d5dd355db53d77d353535bd5355155555353551153533dd31556b6bdddd6bdd5d3d5130350315d777761505050
5dd666b6dddbdd65bdbd6ddb65db5d53d555553d35555d5555773515b5dbd551353d31d515353505555351113ddd66666b6d666761051505053d677763035301
db6d66d6dbdb6dbdddd366bd5dbdd6355353d3d55353dd353d775535555a35551555515315551053531515055353d3d6d6ddc667d313030301566777d5105031
dddb76d6bdda366553db6ddddad66bd5555d5d5353553d5535773553533bd53513135355315353555511313010511533d3dd666763050515035d777763053503
777776b6ddbdd66dddbd66bdbd66665d35353d3555355db55d77535555dbdd51555551d30555015351551505110535111533db66d5150305053d7767d5030050
767666d6d5abdddb66656d6d6dbdb353d515d55135135d533d7735535355353531353555135353555315115015051510501551dd350305030156677763053530
d3dbdb66bddb6d666b5b35b533d355d3d3535d3515355d555b77535535135d6d5555515351551b51dd35130503053511050511d653150305035d7777d5105010
ddb6ddd6ddb666abdd555353553535b5d3553515315536353d77353511515577d335355351535505dd35051355110503050351dd5530515050366777d3531350
b6d5b6b6bdd6a6ddd3353535355355353d666d6151355d555d76511153035df6d5555dd531550313dd53105015553515011510d3510503030556677761053050
d5b6dd65d6a6666355353553535535355bd677d315055db535663153055135f7d53d666315305050dbd15105010355355105355535130505135d7777d3505301
56d66a665f66f6dbd53553d5d53d53553535d6d353535d55356d3105303555ddd353dbd501513053dd51035030511105355d51555305030501367777d5035031
66666767f77665d656d6d6d6b6d6d6dddddd3d3510535db5156d3515150513db65baba3515305105dd3510501015505051353dddd530505035566777d3535350
766b66b6bdbbbbbbbbab633dd3d33d3ddd3dddd353555d53156d30530530555535b5b505030503535d35150305053011010511535051303050367767d5503050
d6bdbabdba5d4da5ab666d53d5d5d3d3d3d3d35115035d30536d350530535313535b431350515005db51503050151505105350d55305050503566777d3535030
5ddadddaddbdb5535567d3d51353155d35d535d305535555156d513051151553535b5050513013535d51305051051010501503555113530351567777d5305350
db5bdbdb5bd5a3d5bd6f7dd355515535513d53555355dd355ddbd515535353535355350315050505dd35111555351305030511553500305003567777d3503050
b5b5bab5babbbbbababd6bd53d3535353d515551553df655335533530535353505305035035030535d51050135d35510505510d55135050515367767d1555311
dbab5b5b4b5a54bb5b5bbabbabd5d5d66db535353d5666b553530505350555053515355150515105db51503050155355311353553105035030d67777d3530530
db5b4b4bb4b3bb4ba3b4b5b5b5bdddd6d6b6b5b55353353530353535535355355135155305303530dd531505011115555555155d5530503053567777d0535053
56b4b4b4b4b4a3a35b4b4b4babab66babab5ab5353553553555555535155151515155115105101053d35015051505135535d3566d305050505567677d3053503
556bab5bab6b5bab5bababdab666ba3bdb5b5b4b5353535353535351505151115050350353153535dd51503153515553555d5d67d053031313d67777d5531301
535ddba3dbadadbda3dbda6666bb5b4b5b4b5b5b4b530535353555551515351503551551050501053d313050555353dd53536676d305050505367777d3053550
555d6b65a6dbdbdb6ba66b66b55b4b5b4b5b4b4bb4b535035053535d3553555355351513503153515d51501151535553d5dd66673513050305d6777751305303
dbdb5db6bdbababababba66babb4b4b4b5b4b5b4b5b55353535355d555dd5d3551551350535050355d351505051153555353dc675115035053567777d0530530
bababab5bab5bdb5b55bbad53dab5b4b5b4b5b4b4b9bbab53555d3531113551511535151150535053d5035035311051355d5dd66d303501305d67767d3005050
5b53b5ba3b5b4b4b4babdbbdb5bdabb9ba35ab5babbabad555b53535151111115155515305310535dd3511505551501111353d66351050505356777751053303
35b4b5b5b4b4bbabbab6a6b4b4b5b5b5b5bbdba6d6666d66b55353535151555153153555151511535d51503111151105151155665530313015d67777d3030501
b4b5b9b4b4bababab666bb4bab5b4b4b4b4b4b5bbab6babb53505350351505315551551355135151535031050503555011515366350505053537777731505030
5bb9b3b4babba667776b5b5b5b5b5b5b5b5b4b5b4b5b5b5b435351355353515555d315515355515050511505015010535011555d5130503015d67777d0135051
b4b5ada666f6777766b5b9b535b4b55b55b4b5b4b5b4bb4bbb5353503555555d355511535d1515351515051051050511550315111505035053d7777753053130
7777777776777767d5dab5b5b4b53b55b5b5b5b5b4bb9bb9bab53053553dddd3d51d511555115515153115050511101053515153153050503557776751503050
776666666676676753ddddada3db95b5b5535b5b4b4bb4bbabba355d5555353511111511115115151515053113505305155153505153030503d7777753035030
6d66666667667676d13d66666666666f66adda5babb9baba6ff7d53511155d5551531355353535353530515551510510511535115305150355d6777751053550
66766767677767665553353d6dddd6d66d66666666f67777777635153535353353535531553553553053135510151050530511505150305035d7777735305031
7777777777767677d35155dddb55353535353dddd66777766db535b5b5bb5b5b5b503050305030505305050351505305150151051305053053d7776750533050
777777776767776d5555dd666d5d55555555535355dbdbdbbb5bb4bb5b4b5b5b5b535035030350303053035015030510111515105531305053d7777751055031
6666b666677765115155d66a6655d5d55dd3d535bbb5b5b4b4b9b5b4b5b5b4b5b535b50355150535050505030305105153051350130505035566777735033503
bbbbabbba66d355d5553556666dbd55db5b5b5b4b4b4b4bb4bb5b5b5b4b5b5b55b5b5b53553030503530305150505101050515051505035035d7777751153510
5b4b5b9bbba35d765b553535bfddd5b5b5b9b5bb4b5b5b4bb4b5b5b4b5b5b5b5b5b5535b5b535530505053030350305505115150535030515367777730135030
b4b9b5bb9bbfd7655d535135556fbab5b4b5b54b5b4b5bb4b5b5b4b5b5b4b5b5b55b5b5b535b53533503051511305130501505305035050355d7767751503550
5bb5bb4bb4bba765355515556bbb4b5b4b5b5bb4b5b5b9b5b5b4b5b5b5b5b4b5b5b5b5b5b5b5b5b5335353035050305035035151550513503566777731053530
b4b4b9b4bab4bdababdbababab9bb5b5b5b4b4b5b5b4b5b5b4bb4b5b4b5b5b5b4b5b5b4b5b435b535b5353503535053050551551315030505367777755353050
b4bb4bb5bb4bbb5b5babb5bb5b555b4355b535b535b5b535b5b4b5b4b5b4b4b5b5b4b5b55b5b55b5b535b5350503505035035535530505035566777730053530
5b4bb4bab4b54b5b5bb4bb4b4bb5b5b535353535b5b5b5b5b4b5b5b5b4bb4bb5b4b5b5b5b5b4b5b4b5b535353050305305305551550350513567777751535051
b5b9b5b5bb4bb4b5b435b4b5b4b5b55b53535b535b55b55b5b5b4b4b5b4bb4b5b5b5b4b5b5b5b5b55b4b5b535135053505053155315031305367777631053530
5bab5bab4bab4bb9b5b4b5b4bb4b5bb5b533535355b55b5b4b55b5b5b5b4b5b5b4b5b5b5b5b55b4b5b5b4b5b5053530531350355513505053567777751130501
b4b5b4bb9bbabab3b4bb4bbabababad55b53533533533535b43b5b4b4b5b535b4b5b4b9b4b4bb9bb5b5b9b4b535505305050353db10505355367777630503530
bb4bab5bb4b5bababababaa6666766666664b4b5353535353355b5b5b4b5b5b4bb4bb5b5b5b4b5ba5b4bba6b5531305303530505551305015367777751153503
4bab3b9b4bababbababba666666d6ddddd666665b535353535b55b5b4b5b5b4b4b5b4b4b5b5bab5bbab4b6b4b53505051105353d315053503567777635035305
b5b4b9bdbabdb5babba67776666dd35b53db6d666fdb4b53535b555b5355b4b5b5b4b5bab5b5b5b934bab5bab513530353505155511501355367777713503505
5bab5b5babb4babdabab7766666dd55d55553dd66667665b55353b55b5b5b535b4b5b4b5b9b4ba3b4bfb5b4bb53005305035353d350305015567777650535530
b4b5bab5b5bab5bbbfbab77666d6555515315533dd6666766a355353535b4b5b5b4b5b5b5bbab34bab5babbaba35305535551551535050503567777631053053
5b5a3b4bab5b5babababa6766666d35d35511551535d6d666676a5353535b5b5b4b5b5b4b4b5b5abbabababab435553551315151505db5351567777651305303
b4bb4ba335b4b9b5b5b6bb77666655d51551555155353d666666776adb535355b5b5b4b5b5b9bbbababbabf77653551515155dd53535aba35367777630535350
5b4ba3b5b4bb9b3babababd77766d3d55515551555155dbdb666667676fab4b5b4b5bb4b5b4baababfa67777763d13513535ddd3535035bda666776d50505035
b5b5b5b9bbabb5ab5bb5bab6776655535535535153555d5553dc6666777777f6fbadababaaba666f777777776d3515151015db653053534bdb65dd6351035350
5b5bab4b4b5b9bb5bababbab77d35515115155535155dc5355553dc6666677777777777777776777777777763515515303536dd305303535adbbd66503553505
b4b5b4bbababb4babb9baba77760101010515355d555d3551153553dc66666677777777777777777777676655515513551356d35050503533b9bab6d55355531
35b4bb4b5bdb9bbab4bba66bf76510505010511515d3d5555551155353db6666666767777677676766667663553515303555db1530305305535b5aa6ccbb94dc
b5bb4b5bababb9b5baba6bf6677d50101051105153dd5d3553551555155d3dc6c66666666666776767666655d1513535135dd503050305030534bbaac6ba44dc
__label__

ccccccccccccccccccccccccccc11111111111111ccccccccccccc111111111111111111ccccccccc1111111cccc111111111111111111111111111111111111
ccccccccccccccccccc11cccccccc1111111111111111c1111111111111c111cc11ccc111ccccccccc1111111cccc11111111111111111111111111111111111
ccccccccccccccccccc111cc11cccc11cccc1111111111111111111111ccc11cc111ccc11ccccccccccc1111111ccc1111111111111111111111111111111111
cccccccccccccccccccc11cc111ccccc11111ccc11111111111111111ccccccccc11cccccccccccc11cccc1111111cc111111111111111111111111111111111
cccccccccccccccccccccc1cc11cccccc1cccc111111111111111111cccccccccccc11cccccccccc111cc111111111cc11111111111111111111111111111111
cccccccccccccccccccccc11111ccccccccc111111111111111111cccccccccccccc111cccccccccc11c11111111111cc1111111111111111111111111111111
ccccccccccccccccccccccc11111111111111111ccccc11111ccccccccccccccccccc11cccccccccccc11cccc111111111111111111111111111111111111111
ccccccccccccccccccccc11cccccc111111111cc11cccccccccccccccccccccccccccccccccccccccc11cccccc11111111111111111111111111111111111111
cccccccccccccccccccc111cccc11ccccccccc11111cccccccccccccccccccccccccccccccccccccc111ccccccc1111111111111111111111111111111111111
cccccccccccccccccccc11cccc111cccccccc111c11cccccccccccccccccccccccccccccccccccccc11ccccccccc111111111111111111111111111111111111
cccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11ccccccccccc1111111111111111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc11cccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccccccccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc1111cccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccc1111ccccccccccc111111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccccccc111cc11c1111c111cccccccccc11111111111111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111cc11cccc11cccc111ccccc11cccccccccc1111111111111111111111111111
ccccccccccccfffccccccccccccccccccccccccccccccccccccccccccccccccc11cc111ccccc11111ccc11111111ccccccccc111111111111111111111111111
ccccccccccffff77fccccccccccccccccccccccccccccccccccccccccccccccccc1cc11cccccc1cccc1111111111111111111111111111111111111111111111
cccccccccfff77777fcccccccccccccccccccccccccccccccccccccccccccccccc11111ccccccccc1111111cccc1111111111111111111111111111111111111
cccccccffff777777fccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111ccccccccc11111111111111111111111111111111111
ccccccffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111cc11ccccccccc111111111111111111111111111111111
cccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11111cccccccccc1111111111111111111111111111111
ccccffff7777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccc111cccccccc111c11ccccccccccccc1111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccc11ccccccccc11cccccccccccccccccc111111111111111111111111111
ccccffff77777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111111
ccccffff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccfff77777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccffff777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccfffffff77777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff7777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
ccccccccfffff777777777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
cccccccffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11cccc11111111111111111111111111
ccccccfffffff7777777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111ccc11111111111111111111111111
77777cffffffff777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777fffffffffffff7777fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c11111111111111111111111111
77777777ffffffff7fff77ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111111
77777777ffffff7777fffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11c111111111111111111111111111
777777777777777777ffffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111c111111111111111111111111111
777777777777777777fffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11ccc11111111111111111111111111
777777777777777777fffcccf77777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777fcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc1111111111111111111111111
7777777777777777777fffff77777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
777777777777777777ffffff777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc11111111111111111111111111
7777777777777777777fffff7777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
77777777777777777777fffff77777777777fffffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
7777777777777777777777fffffff77777777777ffccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
777777777777777777777777ffffff77777777777ffcccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffff77777777777777777777fffff77777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
ffffff7777777777777777777fffffff777777777fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc111111111111111111111111111
fffffff777777777777777777fffffffffffffff7fffccccccccccccccccccccccccccccccccccccccccccccccccccccccccc191111111111111111111111111
ffffffff77777777777777777cccccfffcccccccccccccccccccccccccccccccccccccccccccccccccccc9ccccccccccccccc199111111111111111111111111
fffffffff7777777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9f9cccccccccccccc9ff911111111111111111111111
ffffffffff77777777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccff99ccccccccccccc9ff911111111111111111111111
fffffffffff77777777777ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc999999999999999999999911111111111111111111111
fffffffffffffffff7777cccccccccccccccccccffffccccccccccccccccccccccccccccccccccccccc999999999999999999999991111111111111111111111
fffffffffffffff7f77777cccccccccccccffff77777ffcccccccccccccccccccccccccccccccccccc9999999999999999999999991111111111111111111111
ffffffffffffffff77777777ccccccccccffff77777777fcccccccccccccccccccccccccccccccccc99999999999999999999999999111111111111111111111
fffffffffffffffff77777777cccccccfffffff777777777cccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
fffffffffffffffffffff7777ffffffffffffffff7777777fccccccccccccccccccccccccccccccc999999999999999999999999999111111111111111111111
ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff999990099999999999009999999911111111111111111111
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9999990099999999999009999999911111111111111111111
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc9999999999999999999999999999911111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999991111111111111111111
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc99999999999999999999999999999991111111111111111111
d6666666666666666666666666666666666666666666666666666666666666666666666666666699999999999999999999999999999999111111111111111111
df66666666666666666666666666666666666666dd66666666666666666666666666666666666999999999944444444449999999999999991111111111111111
ddff6666666666666666666666666666666666ddddf6666666666666666666666666666666666999999999999999999999999999999999999111111111111111
dddf666666666666666666666666666666666ddddddf666666666666666666666666666666669999999999999999999999999999999999999111111111111111
ddfff6666666666666ddd66666666666666ddddddddff66666666666666666666666666666699999999999999999999999999999999999999911111111111111
ddddfd66666666666ddddf666666666666ddddddddffff66666666666666666666666666669999999999ffffffffffffffffff99999999999911111111111111
dddddddd666666ddddddddf666666666dddddddddddffdd77777777777777777777777777799999999ffffffffffffffffffffff999999999911111111111111
dddddddddddddddddddddddfd66666ddddddddddddddddd6666666666666666666666666699999999ffffffffffffffffffffffff99999999991111111111111
dddddddfdddddddddddddddddddddddddddddddddddddddd77777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
dddddddffdddddddddddddddddddddddddddddddddddddddd7777777777777777777777779999999ffffffffffffffffffffffffff9999999991111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddd77dd7777777777777777777999999ffffffffffffffffffffffffff9999999911111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddd777777777777777777779999ffffffffffffffffffffffffff9999991111111111111111
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd7777717177777777779999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd717771777777777777999ffffffffffffffffffffffffff9999991111111111111111
ddddddddddddddddddddddddddddddddddddddddd9dddddddddddddddddd71717777777377777999fffffffffffffffffffffffff99999911111111111111111
dddddddddddddddddddddddddddddddddddddddd979ddddddddddddddd1dd1711771777377711999fffffffffffffffff5fffffff99999911111111111111111
ddddddddddddddddddddddddddddddddddedddddd9dddd1ddddddddddd1dd111117111773711199993fff3ffffffffff5fffffff999999111111111111111111
ddddddddddddddddddddddddddddddddde7edddddd3dddd1dddd1dddd1d3d131111111173111109993fff3ffffff5555fffffff9993999111111333111133311
ddddddddddddddddddddddddddddddddddeddddddd3d33d11dddd1d111d3313131111111313300999939933f3fff67ddfff3f999993333333313333333333331
dddddddddddddddddddddddddddddddddd3bdddddd333dddd1d3d1dd11113331311313111337700999393333333367dd39933933333333333311333333333333
ddddddddddddddddddddddddddddddddddbdddbddd3dddddd113301d11313331333333138877773333333333333367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbdbdddddd33dddd33010330333313333113333888777777888888888883367dd33333333333333333333333333333333
ddddddddddddddddddddddddddddddddbbbddddbd33ddddd30133b3333311333133333887733337788888998888867dd23333333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbdbddb33b33333d33bb333333333333338888877333377888893a9888867dd22888333333333333333333333333333
ddddddddddddddddddddddddbddddddbbdbbbbbb33b33bbbd33bb3333333333333888888873333722889999a9888555528838333333333333333333333333333
dddddddddddddddddddddbdddbdddbbbbdbbbbbbbbb33bbbbbbbbbb3333333333888888888888888888999999888888888883333333333333333333333333333
ddddddddaddddddddddddbbddbbdbbbbbbbbbbbbbbb3bbbbbbbbbbb3333333383888888888888888888899992288888888833333333333333333333333333333
ddddddda7addddddddddddbdbbbdbbbbebbbbbbbbbbbbbbbbbbbbbbbb333388888888888888888888888899228888888388333333333333333333333b3333333
ddddddddaddddddddddbbdbbbbbbbbbe7ebbbbbbbbbbbbbbbbbbbbbbbbb3888888888888888888888888888888888883883333333333333333333333b3333333
dddbdddd3ddddddbd333bdbbbbbbbbbbe3bbbbbbbbbbbbbbbbbbbbbbbbb888bb88888888888888888888888888888883833b3333333b3333b3333333b3333333
dddbdddbbbddddbbd3bbbdbbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbb88888b8888888b88888888888888b888888b83333b33bb333b3333b3333333bbb3b333
dddbbdbbbddddbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb8888888888888bb8888b8bbb3b3b33bb333b33333b33b333bbbb3333
dddbbddb3bdbdbddbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b88bbb888bbb8bbb888b88888b88bbbbbbbbbb333bbb333b33b33bbbbb3333
bbdbbbdb3bdbb33dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbb88888b8bbbbbbbbbbb3b3bbbbbbb33bb3bbbbb3333
bbbbbbbb3b3bbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8bbbbbbbbbbbbbbbbbbbbbbb3bbbb3b333b3333
bbbbbbbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bbbb3bbb3bb3333b3333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b3b3bb3bb3333bb333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b3b3bb3bb333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333b3333333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3b3bbb3333bbb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3bb33333bb33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bb3b3333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333333333333b33333333
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33333333333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333333b333bb3333333
bbbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3333b33b333bb3333333
bbbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b33b333333333
bbbbabbbbbb3bbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33bb3b33b333333333
bbba7abbbbbbbbb979bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33333bb33
bbbba3bbbbbbbbbb9bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb33b33b33bbb3
b3333333333bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb333b33b3bbbb
b3bb3bb3bb3bbbbbb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbbbbb
b33b3bb3bb3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3b33b33b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3bbb
b3bb3bb3b33bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
b3333333333bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

__gff__
0081030301811303030301010000010003030101010103030101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
fffffff0ffff0ffd89e32fc19aa67c51f47fc01ffcc05f7c3c8cff11bf818b9b851f420042b8c21112fee70148c0f8f821e008c20b0a84ff733842c042f8295c940f8c62f83f23e01906fe092f3811f00dff6fc641c03fe046f8427887ff73183f50caf8851bc3f87ff12338f818ffb342f9df13065ec2ff8a7084ff3fc0022e
12f03fe3e37fce013ef0bfe6ff2ff0ff57f8ffd360e003ff7f3a20bce1ff1f87833ff8ffc760fcc1ffbf0eff7f1f08c0cdff82ffbf03168484ff7f0bce4258085ff8ff8f0148180290e10bff3309ffd3702402168431aef07f927593ff2732788681ff215f0207ff5719070165fc9f780438c2ff344c7e201cfcdf643ce07fca
c107c1c7ff4ac617fec782977081ff8f8c13fc6f255c24e024fc2fc3ff990ffcc5ffdfe4ff007ee7ff8f12fe1789ffff6f08c0ffff178430feff7ea83c82ffffcd8df0ffafc31fe0ffdf08fe47899ff8ff3f89ff83952b9c99ff3f13fe47f2519af8ff3730e17f22e40a02feffd2f03b7f3090c4ffff41f89d4b4e59e2ffff10
fe9784ffff44f81f72642be4ff6f70f0ff4b207cfcff6ffe08ffffc4fe871c5c25f9ffd3e18fc2ffdf90ff6558f82095ffbf4c180f1bfeff3168380bff7f8df25bf82bfcffbdf02ff8ffafe1672efeff43ea7f127e92121ef93fa6fe59f8972bc98ffcaf63f883f12b5ff843feffc3f0bf4df2caff5f88fe0f79e59025fe92f1
ff17c2ff6963a91f648941fe47f6bfe497851a3933e1e37f633f871ff9273c591e3bc233c9ffc4fea7fcc498fd012ef9ff83e1e27fc0ffc881173ce1ff8fcae1f8ffd9ff5f73fcff3cffffc9fe17e137fbffff865cf9ffc7e1afede8ffca85ff8fe3f49dfc007eca35f2bfb125f9ff2be12ffbdf4827f99fd8ffba8fe4070b7f
8027c9ffc2fe57e11fccf2b22cb75c24c9ffc04efb8bbf198c1c5c593e7901d7ff07fcc7ff843f6a567ef2fcedb8c2af7ce1bff00b3fdbff24fcccff22fcbf72f5ffbff1bf03c05f791cfc6f1cff7f83f29790ff91fcff1bd03e38f9ffcf8d90c299f8fff07fcffc744402474eff173b12fff3087ed90c32421c83849ff2faff
17b9355f9bf885091c5442963709e7c66187fd7f930b5d5ed9350bc391385dc3f26c9c520e494e1f6184ff4f729f40220d04b2c44190cbd67110b2efb93a721096b8c3ff66d70f1eb19a6382a06982157ce8210924d22542867be2e5ff931f2493e8f1894d481cf4e08f3f8ec439f99ff0bfdc18310cdd6e2091c58365e569ea
95f1ff3f2258788e438207cd6152c006ea43f4c82ff97f87030788d0c31124f9411f4ef80707f63591ff2faf9c96f0931cfb83ee975f58f201d9fbc70f512bbff363c242001e0b0d07a75d76f2f9e30abf73e51f3f2432fc232fd7c25ff9c5f6cf7cf27fe049863790d09c4ef983097e4c62e109f831f1479e7f5e802b825f11
f9594e0cff0712e678466d9cfbe1cadf810fff0f88c41316fe4c6018fe083fe70fe34afc118e400ef0138667482a18c6ff499e05841fc0020c7f6c08214308f922c0c2ff949384302b022e063eca41c27158e2ffca4f213cdc618c845b2e09ffff28fc4a00c20f24fcff557280f00fff7f120ce0ffbf0f06e00affff39fc42f9
ffc724349cfcffe9d0808bff3f5c1046f8ffeb0316feff3f8087ffbfcecbff3f0f77f82b8fff3f1bfe8c0fff7f34fc9c7fbeffbf19be081e967f1c9e66feff6148f82909ca92e0ff7f7281ee49cec4ffdf0d0bece408ffff7430044110f0ff7f2938863ff8ffd70f20e0ff6f872308ff7f9d868fffffceffff2f000000000000
