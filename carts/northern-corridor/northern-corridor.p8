pico-8 cartridge // http://www.pico-8.com
version 34
__lua__
--northern corridor              v0.1.0
--caterpillar games



gs = nil

dirs = {
	left = 0,
	right = 1,
	up = 2,
	down = 3,
	z = 4,
	x = 5
}

gameOverWin = 'win'
gameOverLose = 'lose'

function _init()
	poke(0x5f2d, 0x1 | 0x2)

	gs = {
		treeColor1Height = 0,
		treeColor2Height = 0,
		nullLightColor = 0,
		lightHeight = 0,
		isDivertedToLights = function(self)
			return self.switches[2].state
		end,
		isTreeFull = function(self)
			return self.treeColor2 != 5
		end,
		isLightsFull = function(self)
			return self.lightColor != 0
		end,
		nullTreeColor = 5,
		isGameOver = false,
		lightColor = 0,
		treeColor1 = 5,
		treeColor2 = 5,
		gameOverState = nil,
		startTime = t(),
		endTime = nil,
		currentAnimation = nil,
		switches = makeSwitches(),
		treeLights = makeTreeLights(),
		orbs = makeOrbs(),
		cursor = makeCursor()
	}
end

function makeCursor()
	return {
		draw = function(self)
			local pos = self.pos
			local spriteNumber = 0

			if self.isLeadingClick or self:isGrasping() then
				spriteNumber = 16
			end

			spr(spriteNumber, pos.x - 4, pos.y - 3, 2, 1)
		end,
		isClicked = false,
		isLeadingClick = false,

		isClickedPreviousFrame = false,
		updateCursor = function(self)
			self.pos = vec2(
				stat(32),
				stat(33)
				) + camOffset
			self.isLeadingClick = false

			self.isRightClick = (stat(34) & 0x2) > 0 or btn(dirs.z)

			if (stat(34) & 0x1) > 0 or btn(dirs.x) then
				self.isClicked = true
				if not self.isClickedPreviousFrame then
					self.isLeadingClick = true
				end
			else
				self.isClicked = false
			end

			self.isClickedPreviousFrame = self.isClicked
		end,
		pos = vec2(0,0),
		rad = 20,
		stickiness = 10,
		canGrasp = function(self)
			return gs.graspedResource == nil
		end,
		isGrasping = function(self)
			return not (gs.graspedResource == nil)
		end
	}
end

function rndrange(_min, _max)
	local diff = _max - _min
	return _min + diff * rnd()
end

metaTable = {
	__add = function(v1, v2)
		return vec2(v1.x + v2.x, v1.y + v2.y)
	end,
	__sub = function(v1, v2)
		return vec2(v1.x - v2.x, v1.y - v2.y)
	end,
	__mul = function(s, v)
		if type(s) == 'table' then
			s,v = v,s
		end

		return vec2(s * v.x, s * v.y)
	end,
	__div = function(v, s)
		return vec2(v.x / s, v.y / s)
	end,
	__eq = function(v1, v2)
		return v1.x == v2.x and v1.y == v2.y
	end
}

function vec2fromAngle(ang)
	return vec2(cos(ang), sin(ang))
end

function vecFromDir(dir)
	if dir == dirs.left then
		return vec2(-1, 0)
	elseif dir == dirs.right then
		return vec2(1, 0)
	elseif dir == dirs.up then
		return vec2(0, -1)
	elseif dir == dirs.down then
		return vec2(0, 1)
	else
		assert(false)
	end
end

function modInc(x, mod)
	return (x + 1) % mod
end

function modDec(x, mod)
	return (x - 1) % mod
end

function vec2(x, y)
	local ret = {
		x = x,
		y = y,
		norm = function(self)
			return vec2fromAngle(atan2(self.x, self.y))
		end,
		squareDist = function(self, other)
			return max(abs(self.x - other.x), abs(self.y - other.y))
		end,
		taxiDist = function(self, other)
			return abs(self.x - other.x) + abs(self.y - other.y)
		end,
		-- Beware of using this on vectors that are more than 128 away
		eucDist = function(self, other)
			local dx = self.x - other.x
			local dy = self.y - other.y
			-- return sqrt(dx * dx + dy * dy)
			return approx_magnitude(dx, dy)
		end,
		isWithin = function(self, other, value)
			return self:taxiDist(other) <= value and
				self:eucDist(other) <= value
		end,
		isOnScreen = function(self, extra)
			if extra == nil then extra = 0 end

			return extra <= self.x and self.x <= 128 - extra
				and extra <= self.y and self.y <= 128 - extra
		end,
		length = function(self)
			return self:eucDist(vec2(0, 0))
		end,
		angle = function(self)
			return atan2(self.x, self.y)
		end
	}

	setmetatable(ret, metaTable)

	return ret
end


function hasAnimation()
	return gs.currentAnimation != nil and costatus(gs.currentAnimation) != 'dead'
end

function acceptInput()
	gs.cursor:updateCursor()
	for switch in all(gs.switches) do
		switch:acceptInput()
	end
end

function _update()
	if gs.isGameOver then
		if gs.endTime == nil then
			gs.endTime = t()
		end
		-- Restart
		if btnp(dirs.x) then
			_init()
		end
		return
	end

	if hasAnimation() then
		local active, exception = coresume(gs.currentAnimation)
		if exception then
			stop(trace(gs.currentAnimation, exception))
		end
		gs.cursor:updateCursor()

		return
	end

	acceptInput()

	checkWin()
end

function checkWin()
	if gs.treeColor2 == compositeColors.green[3] and
		gs.lightColor == pc.white and not hasAnimation() then
			-- sfx(mysfx.win)
			music(40)
			gs.currentAnimation = cocreate(function()
				for i = 1, 120 do
					yield()
				end

				gs.isGameOver = true
				gs.gameOverState = 'win'
			end)
	end
end

function drawGameOverWin()
	sspr(0,0,128,128,0,0,128,128)
	rectfill(0,0,16,16,7)
	-- color(7)
	-- print('\n\n you win!\n\n press x to play again')
end

function drawGameOverLose()

end

function makeLight(pos)
	return {
		pos = pos
	}
end

function makeTreeLights()
	local ret = {}
	for y = 0, 100, 10 do
		for x = 20, 100, 10 do
			x = x + (flr(y/10)%2) * 5
			-- x = x * 2
			local lightPos = vec2(x, y)
			local xStart = 65 - y/2
			local xEnd = xStart + y - 20
			local yoff = -20
			isValid = xStart < lightPos.x and lightPos.x < xEnd
			isValid = isValid and y < 80

			if isValid then
				add(ret, makeLight(
					lightPos
					))
			end
		end
	end
	-- for i = 1, 20 do
	-- 	local lightPos = vec2(rnd(64), rnd(64)) + vec2(20, 20)
	-- 	local isValid = false

	-- 	local y = lightPos.y
	-- 	-- for y = 20, 100 do
	-- 	local xStart = 65 - y/2
	-- 	local xEnd = xStart + y - 20
	-- 	local yoff = -20
	-- 	isValid = xStart < lightPos.x and lightPos.x < xEnd
	-- 	isValid = isValid and y < 75
	-- 		-- line(xStart, y + yoff, xEnd	, y + yoff, 7)
	-- 	-- end
	-- 	if isValid then
	-- 		add(ret, {
	-- 			pos = lightPos
	-- 		})
	-- 	end
	-- end
	return ret
end

function drawTreeLights()
	for light in all(gs.treeLights) do
		-- assert(false)
		circfill(light.pos.x, light.pos.y, 2, 0)
	end

	clip(0, 80 - gs.lightHeight, 128, 128)

	for light in all(gs.treeLights) do
		-- assert(false)
		circfill(light.pos.x, light.pos.y, 2, gs.lightColor)
	end
end

function drawTreeOutline()
	for y = 20, 100 do
		-- local color = gs.treeColor1
		-- if y > 70 then
		-- 	color = gs.treeColor2
		-- end
		local xStart = 65 - y/2
		local xEnd = xStart + y - 20
		local yoff = -20
		line(xStart, y + yoff, xEnd	, y + yoff, 5)

		if y > 100 - gs.treeColor1Height then
			line(xStart, y + yoff, xEnd	, y + yoff, gs.treeColor1)
		end

		if y > 100 - gs.treeColor2Height then
			line(xStart, y + yoff, xEnd	, y + yoff, gs.treeColor2)
		end

	end

	drawTreeLights()
end

pc = {
	blue = 11,
	red = 8,
	yellow = 10,
	white = 7
}
compositeColors = {
	purple = {pc.blue, pc.red, 13},
	orange = {pc.yellow, pc.red, 9},
	green = {pc.yellow, pc.blue, 3},

	lightBlue = {pc.blue, pc.white, 12},
	pink = {pc.red, pc.white, 14},
	tan = {pc.yellow, pc.white, 15}
}

function getCombinedColor(col1, col2)
	if col1 == col2 then
		return col1
	end

	for key, val in pairs(compositeColors) do
		-- assert(false)
		if (val[1] == col1 and val[2] == col2)
			or
			(val[2] == col1 and val[1] == col2) then
				return val[3]
		end
	end

	-- assert(false)
	-- if col1 > col2 then
	-- 	col1, col2 = col2, col1
	-- end
	-- if col1 == 1 then
	-- 	if col2 == 7
	-- end
	-- return 0
end

-- function yield() end


function makeOrb(pos, col)
	return {
		pos = pos,
		col = col,
		height = 1,
		clickCount = 0,
		onActivate = function(self)
			-- self.height = 0.5
			gs.currentAnimation = cocreate(function()
				if self.clickCount >= 2 then
					-- TODO play sound
					sfx(mysfx.blocked)
					return
				end

				if gs:isDivertedToLights() and gs:isLightsFull() then
					sfx(mysfx.blocked)
					return
				end

				if not gs:isDivertedToLights() and gs:isTreeFull() then
					sfx(mysfx.blocked)
					-- longblocked
					return
				end

				self.clickCount += 1

				local playSound = true
				for i = 1, 30 do
					self.height -= 0.5 / 30
					if playSound then
						sfx(mysfx.orbDrain)
						playSound = false
					end
					yield()
				end

				if gs:isDivertedToLights() then
					gs.lightColor = self.col
					sfx(mysfx.progress)
					for i = 0, 70 do
						gs.lightHeight = i
						yield()
					end
				elseif gs.treeColor1 == 5 then
					gs.treeColor1 = self.col
					sfx(mysfx.bubbly)
					for i = 0, 30 do
						gs.treeColor1Height = i
						yield()
					end
				else
					sfx(mysfx.bubbly)
					
					gs.treeColor2 = getCombinedColor(self.col, gs.treeColor1)
					local initial = gs.treeColor1Height
					for i = gs.treeColor1Height, 81 do
						gs.treeColor1Height = i
						gs.treeColor2Height = (i - initial) * 2
						yield()
					end

				end				
			end)
		end,
		rad = 10,
		-- maxRad = 10,
		-- rad = 1,
		draw = function(self)
			clip(0, self.pos.y + self.rad - 2 * self.rad * self.height,
					128, 100)
			circfill(self.pos.x,self.pos.y,10,self.col)
			clip()
			circ(self.pos.x, self.pos.y, self.rad, 6)
		end
	}
end

mysfx = {
	chachunk = 32,
	orbDrain = 55,
	win = 34,
	progress = 52,
	reverseProgress = 57,
	reverseBubbly = 58,
	bubbly = 53,
	blocked = 51,
	blockedTwoProng = 56,
	longblocked = 54,
	switch = 39
}

function drawOrbs()
	-- for i = 1, 4 do
	-- 	drawOrb(i * 30 - 20, 100, 7)
	-- end
	for orb in all(gs.orbs) do
		orb:draw()
	end
end

-- function drawOrb(x, y, col)
-- 	circfill(x,y,10,col)
-- 	-- drawSwitch(x-2, y+15, col)
-- end

-- function drawSwitch(x,y,col)
-- 	rectfill(x,y,x+5,y+5,col)
-- end

orbColorMap = {
	pc.red,
	pc.yellow,
	pc.blue,
	pc.white
}

function makeOrbs()
	local ret = {}
	for i = 1, 4 do
		add(ret, makeOrb(
			vec2(i*30 - 20, 100), orbColorMap[i])
			)
	end
	return ret
end

function allOrbsFull()
	for orb in all(gs.orbs) do
		if orb.height < 1 then
			return false
		end
	end
	return true
end

function resetPuzzle()
	-- TODO do an animation
	gs.currentAnimation = cocreate(function()
		local playReverseProgress	= true
		
		local delay = 10
		-- Tree
		while gs.treeColor1Height > 0 or 
					gs.treeColor2Height > 0 or
					gs.lightHeight > 0 do
				delay -= 1
				if playReverseProgress and delay <= 0 then
					if gs.treeColor1Height > 0 then
						-- sfx(mysfx.reverseBubbly)
						sfx(mysfx.orbDrain)
					end
					if gs.lightHeight > 0 then
						sfx(mysfx.reverseProgress)
					end
					playReverseProgress = false
				end
				gs.treeColor1Height -= 1
				gs.treeColor2Height -= 1
				gs.lightHeight -= 1
				yield()
		end

		-- Orbs
		local playOrbFill = true
		while not allOrbsFull() do
			for orb in all(gs.orbs) do
				orb.height += 0.05
				if playOrbFill then
					sfx(mysfx.bubbly)
					playOrbFill = false
				end
				yield()
			end
		end

		-- Switch
		local playSwitchSound = true
		while gs.switches[2].angle < 3 * 0.125 do
			if playSwitchSound then
				sfx(mysfx.switch)
				playSwitchSound = false
			end
			gs.switches[2].angle += 0.025
			yield()
		end

		yield()

		_init()
	end)
end

function makeSwitches()
	local ret = {
		makeSwitch(vec2(10, 30), false, function()
			resetPuzzle()
		end),
		makeSwitch(vec2(100, 30), false, function()

		end)
	}

	ret[2].type = 'switch'

	for i = 1, 4 do
		add(ret, makeSwitch(
			vec2(i * 30 - 23, 120),
			true,
			function(self) 
				gs.orbs[i]:onActivate()
			end
			))
	end

	return ret
end

function makeSwitch(pos, state, onclick)
	return {
		pos = pos,
		state = state,
		type = 'button',
		angle = 3 * 0.125,
		onclick = function(self)
			gs.currentAnimation = cocreate(function()
				if self.type == 'button' then
					sfx(mysfx.chachunk)

					for i = 0, 1, 0.05 do
						self.angle = 0.125 * 2 + cos(i) * 0.125
						yield()
					end
					self.angle = 3 * 0.125
				elseif self.type == 'switch' then
					sfx(mysfx.switch)
					self.angle = 3 * 0.125
					local dir = -1
					if self.state then
						self.angle = 0.125
						dir = 1
					end

					for i = 0, 1, 0.15 do
						self.angle += dir * 0.15 * 0.25
						yield()
					end
					self.state = not self.state
				else
					-- Unsupported type
					assert(false)
				end

				onclick(self)
			end)
		end,
		boundingBox = function(self)
			return {
				upperLeft = self.pos + vec2(-5, -8),
				bottomRight = self.pos + vec2(10, 7)
			}
		end,
		acceptInput = function(self)
			if gs.cursor.isLeadingClick and self:isHighlighted() then
				self:onclick()
			end
		end,
		isHighlighted = function(self)
			if hasAnimation() then
				return false
			end
			local upperLeft = self:boundingBox().upperLeft
			local bottomRight = self:boundingBox().bottomRight
			
			return upperLeft.x < gs.cursor.pos.x and gs.cursor.pos.x < bottomRight.x and
				upperLeft.y < gs.cursor.pos.y and gs.cursor.pos.y < bottomRight.y
		end,
		draw = function(self)
			local upperLeft = self:boundingBox().upperLeft
			local bottomRight = self:boundingBox().bottomRight

			-- leverDir = vec2(1, -1) * 5
			-- if self.state then
			-- 	leverDir = vec2(-1, -1) * 5
			-- end
			local leverDir = vec2fromAngle(self.angle) * 5
			local leverStart = vec2(
				self.pos.x + 2,
				self.pos.y)

			line(leverStart.x,
				leverStart.y,
				leverStart.x + leverDir.x,
				leverStart.y + leverDir.y,
				4)
			rectfill(pos.x,pos.y,pos.x+5,pos.y+5,5)
			if self:isHighlighted() then
				rect(upperLeft.x, upperLeft.y, bottomRight.x, bottomRight.y, 7)
			end
		end
	}
end

camOffset = vec2(-9, -1)

function _draw()
	cls(0)
	camera()
	if gs.isGameOver then
		pal()
		if gs.gameOverState == gameOverWin then
			drawGameOverWin()
		else
			drawGameOverLose()
		end
		return
	end

	camera(camOffset.x, camOffset.y)

	drawTreeOutline()
	drawOrbs()

	for switch in all(gs.switches) do
		switch:draw()
	end

	gs.cursor:draw()

	pal(pc.blue, 140, 1)
	pal(compositeColors.tan[3], 135, 1)
	pal(compositeColors.purple[3], 141, 1)
	pal(compositeColors.orange[3], 137, 1)
	-- print(compositeColors.green, 0, 0)
	-- drawSwitch(10, 30, 7)
	-- drawSwitch(100, 30, 7)
	-- Draw
end

__gfx__
00666660000000007777777777777777777777777777777777777777777777771000000550177777777777777777777777777777777777777777777777777777
00676766600000007777777777777777777777777777777777777777777777771000000660177777777777777777777777777777777777777777777777777777
66676767600000007777777777777777777777777777777777777777775111112222222552211577777777777777777777777777777777777777777777777777
67676767600000007777777777777777777777777777777777777777771000028888888888800177777777777777777777777777777777777777777777777777
67677777600000007777777777777777777777777777777777777777771000028888888888800177777777777777777777777777777777777777777777777777
67777777600000007777777777777511111577777777777777777751112222288888888888822211577777777777777777777777777777777777777777777777
66777776600000007777777777777000000177777777511111111100008888888888888888888800177777777777777777777777777777777777777777777777
06666666000000007777777777777500000011111111000000000000008888888888888888888800177777777777777777777777777777777777777777777777
00000000000000007777777711117612222222222222222240002222288888888888888888888822211777777777777777777777777777777777777777777777
00666660000000007777777500001588888888888888888882008888888888888888888888888888200177777777777777777777777777777777777777777777
00676766600000007777777610000288888888888888888882008888888888888888888888888888200177777777777777777777777777777777777777777777
66676767600000007777751548888888888888888888882002888888888888888888820000288801100111115777777777777777777777777777777777777777
67677777600000007777710288888888888888888888882002888888888888888888800000088800000000001777777777777777777777777777777777777777
67777777600000007777710288888888888888888888882002888888888888888888821111148215555155101777777777777777777777777777777777777777
667777766000000077511488888888888888888888888888888888888888888200000d7777650567777777501777777777777777777777777777777777777777
066666660000000077100888888888888888888888888888888888888888888200000d7777710577777777501777777777777777777777777777777777777777
77777777777777777710288888888888888888888888888888888888888822825555567777755577777777d11777777777777777777777777777777777777777
77777777777777751188888888888888888888888888888888888888882000057777777777777777777777776505777777777777777777777777777777777777
77777777777777710088888888888888888888888888888888888888880000057777777777777777777777777501777777777777777777777777777777777777
777777777777777100888888888888888888888888888888882222222255555d7777777777777777777777777501777777777777777777777777777777777777
77777777777777710088888888888888888888888888888880000000017777777777777777777777777777777501777777777777777777777777777777777777
77777777777777710088888888888888888888888888888880000000017777777777777777777777777777777501777777777777777777777777777777777777
77777777777775652288888888888888888888888222222225dddddddd7777777777777777777777777777777d55117777777777777777777777777777777777
7777777777771018888888888888888888888888200000000d777777777777777777777777777777777777777777105777777777777777777777777777777777
77777777777710088888888888888888888888882000000006777777777777777777777777777777777777777777101777777777777777777777777777777777
77777777777710088888888888888888888888220000330006777777777777777777777777751115515677777777101777777777777777777777777777777777
77777777777710088888888888888888888888000000330006777777777777777777777777710000000d77777777101777777777777777777777777777777777
7777777777771008888888888888888888888400000033100d777777777777777777777777710001111d77777776101777777777777777777777777777777777
777777777777100888888888888888888882203333333333011577777777777777777777777100d6666511111111001777777777777777777777777777777777
77777777777710088888888888888888888000333333333330006777777777777777777777710167776500000000001777777777777777777777777777777777
77777777777710088888888888888888884000333333333331156777777777777777777777610166666511000111115777777777777777777777777777777777
7777777777771008888820028888888800022200033333100d7777777777777777d155111116fd11115566501777777777777777777777777777777777777777
7777777777771008888820028888888800022200033333000d7777777777777777500000000ff600000566501777777777777777777777777777777777777777
7777777777771008888420008888888400022200033333111d7777777777777777515111515fff51111566501777777777777777777777777777777777777777
7777777777771008880003300000000022200000033000d77777777777511111115ffffffffffffffffd51001777777777777777777777777777777777777777
7777777777771008880003300000000022200000033000d7777777777d10000000dffffffffffffffffd00001777777777777777777777777777777777777777
77777777777710122200033000000000222000000333116777776d6dd5dd100000dfffffffffffdddddd55101777777777777777777777777777777777777777
7777777775112880003333333333333300022222200377777777500015d6610000dfffffffffff100055df501777777777777777777777777777777777777777
7777777771002880003333333333333300022222200d7777777710000167d00000dffffffffff6000005ff501777777777777777777777777777777777777777
7777777771002882220033330033333300022222200d776ddddd5ddddd777ddddd5ddffffffddd5555dd55501777777777777777777777777777777777777777
7777777771008888880003300003333300022222200d77500000d7777777777777501dfffff10177777d00001777777777777777777777777777777777777777
7777777771004888840003300003333300022222200d77500000d7777777777777500dfffff10177777d00001777777777777777777777777777777777777777
777777777122888888222000221000000000000015d55555d101d555555555d555500dfffff10177777d00001777777777777777777777777777777777777777
7777777514888888888820028820000000000000177d005ff50000000000000000000dfffff10177777d00000111111111115777777777777777777777777777
77777771048888888888200288200000000111101775005ff50000000000000000000dfffff10177777d00000000000000001777777777777777777777777777
77777771028888888888822888822222001666666d51005ff6dd55555d005ddddd100dfffff101dddddd005ddddddddddddd5111157777777777777777777777
77777771028888888888888888888888001677776100005fffffffffff10577777d00dfffff101dcccd100dfffffffffffff5000017777777777777777777777
77777771028888888888888888888888001676666110005fffffffffff10577777d00dfffff100dcccd1005fffffffffffffd111017777777777777777777777
77777771048888888888888888888888001676555661005fffffffffff10577777d00dfffff1000111110015ddddffffffffff6d001157777777777777777777
77777771048888888888888888888888001676105676105fffffffffff10577777d00dfffff10000000000000000fffffffffffd000017777777777777777777
77777771048888888888888888888888001666115676105fffffffffff10567776d00dfffff100000000000111116ffffffffffd000017777777777777777777
77751118888888888888888888888888000115666676105fffffffffff101dcccd1001116ff100000000005ddd6d505ffffffffd000001111157777777777777
77700028888888888888888888888888000001677776105fffffffffff105ccccc100000dff10000000000566666101ffffffffd000000000007777777777777
77750028888888888888888888888888000115676661005fffffffffff101ddddd111111dfd1111111100056666d101ffffffffd001110001117777777777777
77771028888888888888888888888888001666676110000115ffffffff1000000056666d1016fffffff50056666d101ffffffffd00d76100d761157777777777
77771028888888888888888888888888001677776100000005ffffffff10000000566666101ffffffff50056666d101ffffffffd006775016771007777777777
7777102888888888888888888888888800167666655555555dffffffff10000000566666101ffffffffd515d6ddd5555d5ddddd5116771016775557777777777
777710288888888888888888888888880016761156ffffffffffffffff10000000566666101fffffffffff511110d7710000000d777775016777761157777777
77750028888888888888888888888888001676105fffffffffffffffff00000000566666101fffffffffffd00000d7710000000d777775016777760017777777
77771028888888888888888888888888001676105fffffffffffffffff55555555555555555fffffffffffd005dd777ddddddddd77777501677777d551177777
77771028888888888888888888888888001676105fffffffffffffffffffffffff5000006fffffffffffffd00d777777777777777777710067777777d0017777
77710028888888888888888888888888001676105fffffffffffffffffffffffffd001016fffffffffffffd00d777777777777777777650167777777d0017777
77710028888888888888888888888888001676105fffffffffff55dddd55555555100ddd555ffffffff6555dd7777777777777777765565d77777777d0017777
77710028888888888888888888888888001676105fffffffffff00000000000000000df6101ffffffff500d7777777777777777777d0056777777777d0017777
77710028888888888888888888888888001676105ffffffffff650000000000000000df61016fffffff500d7777777777777777777d00d7777777777d0017777
77710028888888888888888888888888001676105ffffffff51565d666dd666dddd00115d6d51111111dd677777777777777777777d00d77777777777ddd1177
77710028888888888888888888888888001676105ffffffff10056777777777777d0000177710000000d7777777777777777777777d00d7777777777777d0017
77751128888888888888888888888888001666105ffffffff11167777777777777d0000177750111001d7777777777777777777776500d7777777777777d0017
77777750028888888888888888888888000111005fffff511d66777777777777777ddddd777766776667777777777777777761111565d77777777777777d0017
77777760028888888888888888888888000000005fffff100d7777777777777777777777777777777777777777777777777760000056777777777777777d0017
777777500288888888888888888888880000001156fff6555677777777777777777777777777777777777777777777777777d11111d7777777777777777d0017
7777777102888888888888888888888800000167d11111d777777777777777777777777777777777611d777777777775111157777777777777777777777d0017
7777777102888888888888888888888800000177600000d7777777777777777777777777777777776005777777777771000057777777777777777777777d0017
7777777102888888888888888888888800011566d11111d777777777777777777777777777777766d105d666666666d5555557777777777777777777777d0017
7777777102888888888888888888888800167d1057777777777777777777777777777777777776002882000000000017777777777777777777777777777d0017
777777710288888888888888888888880017760057777777777777777777777777777777777776102882000000000017777777777777777777777777777d0017
7777777515228888888888888888842255d777d55dd677777777777777777777777777776d666d2228820055555555d777777777777777777777777776d51157
7777777771004888888888888888820167777777d00d7777777777777777777777777777100000888882005777777777777777777777777777777777d1017777
7777777771008888888888888888820167777777d00d7777777777777777777777777777100000888882005777777777777777777777777777777777d0017777
77777777710028888888888888888001677777777ddd55677777777777777dddd5d55555000002888220001dd777777777777777777777777777777760017777
7777777771002888888888888888800067777777777d00d777777777777760000000000000088888820000000677777777777777777777777777777760017777
7777777775114888888888888888800167777777777d00d77777777777765d100000000000088888820000000677777777777777777777777777777760017777
77777777777712288888888888422566777777777776ddd55555555555555dddddddddddddd2222224d6ddddd777777777777777777777777777777760017777
77777777777710088888888888200677777777777777775000000000000056777777777777610000577777777777777777777777777777777777777760017777
77777777777710088888888888200677777777777777775000000000000057777777777777710000d77777777777777777777777777777777777777760017777
77777777777710088888888888200677777777777777777d6666666666666777777777777776666d677777777777777777777777777777777777777760017777
77777777777710088888888888200677777777777777777777777777777777777777777777777777777777777777777777777777777777777777777760017777
777777777777100888888888882016777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777d0017777
777777777777100888888882005667777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777d0017777
77777777777710088888888200d777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777d0017777
77777777777710088888888251d777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777d1157777
77777775111100088888200577777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777761117777777
77777770000000088888200d77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777760017777777
77777711111111122222200d777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777d0017777777
77751117777777710000000d77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777760017777777
77701117777777710111000d77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777760017777777
77751117777777757777100d777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777d0017777777
77771117777777777777710d77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777760017777777
77771057777777777777710d77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777760017777777
77111177777777777777751555677777777777777777777777777777777777777777777777777777777777777777777777777777777777777777760017777777
77111777777777777777777100d77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777760017777777
71117777777777777777777100d77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777760017777777
71117777777777777777777100d77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777761017777777
71177777777777777777777100d777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777d0017777777
71177777777777777777777100d777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777d1157777777
71177777777777777777777100d77777777777777777777777777777777777777777777777777777777777777777777777777777777777777775117777777777
71117777777777777777777100d77777777777777777777777777777777777777777777777777777777777777777777777777777777777777771017777777777
71117777777777777777777111d77777777777777777777777777777777777777777777777777777777777777777777777777777777777777771017777777777
77117777777777777777750177111677777777777777777777777777777777777777777777777777777777777777777777777777777777777771017777777777
77117777777777777777700777100d77777777777777777777777777777777777777777777777777777777777777777777777777777777777771017777777777
77117777777777777777711777511d667777777777777777777777777777777777777777777777777777777777777777777777777777777777d1157777777777
77111177777777777777711777777111677777777777777777777777777777777777777777777777777777777777777777777777777777775117777777777777
77111117777777777777700777777101677777777777777777777777777777777777777777777777777777777777777777777777777777771017777777777777
77711111777777777777111777777511dd6666ddddd67777777777777777777777777777777777777777777777777777777777777777766d1157777777777777
77771111117777770111111777777777101000000005777777777777777777777777777777777777777777777777777777777777777775017777777777777777
77777771111177711101117777777777100000100005777777777777777777777777777777777777777777777777777777777777777775017777777777777777
7777777711111111117777777777777751110565010577777777dd67777777777777777777777777777777777777777777777776ddddd1157777777777777777
7777777771001111177777777777777777777777610577777777101777777777777777777777777777777777777777777777777d000017777777777777777777
7777777777111057777777777777777777777777750577777777101677777777777777777777777777777777777777777777777d111157777777777777777777
777777777777777777777777777777777777777777715ddd5677101d5d7777777777777777777777777777777777777dddddddd1777777777777777777777777
77777777777777777777777777777777777777777771000006771000017777777777777777777777777777777777777100000001777777777777777777777777
7777777777777777777777777777777777777777777101111d761011106777777777777777777777777777777777776000000001777777777777777777777777
777777777777777777777777777777777777777777775777711515777555d7777777777777777777777777777777d55111111117777777777777777777777777
77777777777777777777777777777777777777777777777771016777770057777777777777777777777777777777101777777777777777777777777777777777
77777777777777777777777777777777777777777777777775157777775156777777777777777777777777777777505777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777771155555555555555555555555555151577777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777771000000000000000000000000000000777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777771000000000000000000000000000001777777777777777777777777777777777777
__label__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000055500000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000555500000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000555550000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000005555550000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000005555555000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000055555555000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000055555555500000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000555555555500000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000555555555550000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000005555555555550000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000005555555555555000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000055555555555555000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000055555555555555500000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000555555555555555500000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000555555555555555550000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000005555555555555555550000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000005555555555555555555000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000055555555555555555555000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000055555555555555555555500000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000555555555555555555555500000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000555555555555555555555550000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000005555555555555555555555550000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000005555555555555555555555555000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000055555555555555555555555555000000000000000000000000000000000000000000000000000
00000000000000000400000000000000000000000000000000055555555555555555555555555500000000000000000000000000000400000000000000000000
00000000000000000040000000000000000000000000000000555555555555555555555555555500000000000000000000000000000040000000000000000000
00000000000000000004000000000000000000000000000000555555555555500055555555555550000000000000000000000000000004000000000000000000
00000000000000000000400000000000000000000000000005555555555555000005555555555550000000000000000000000000000000400000000000000000
00000000000000000005555550000000000000000000000005555555555555000005555555555555000000000000000000000000000005555550000000000000
00000000000000000005555550000000000000000000000055555555555555000005555555555555000000000000000000000000000005555550000000000000
00000000000000000005555550000000000000000000000055555555555555500055555555555555500000000000000000000000000005555550000000000000
00000000000000000005555550000000000000000000000555555555555555555555555555555555500000000000000000000000000005555550000000000000
00000000000000000005555550000000000000000000000555555555555555555555555555555555550000000000000000000000000005555550000000000000
00000000000000000005555550000000000000000000005555555555555555555555555555555555550000000000000000000000000005555550000000000000
00000000000000000000000000000000000000000000005555555555555555555555555555555555555000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000055555555555555555555555555555555555555000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000055555555555550005555555000555555555555500000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000555555555555500000555550000055555555555500000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000555555555555500000555550000055555555555550000000000000000000000000000000000000000000
00000000000000000000000000000000000000000005555555555555500000555550000055555555555550000000000000000000000000000000000000000000
00000000000000000000000000000000000000000005555555555555550005555555000555555555555555000000000000000000000000000000000000000000
00000000000000000000000000000000000000000055555555555555555555555555555555555555555555000000000000000000000000000000000000000000
00000000000000000000000000000000000000000055555555555555555555555555555555555555555555500000000000000000000000000000000000000000
00000000000000000000000000000000000000000555555555555555555555555555555555555555555555500000000000000000000000000000000000000000
00000000000000000000000000000000000000000555555555555555555555555555555555555555555555550000000000000000000000000000000000000000
00000000000000000000000000000000000000005555555555555555555555555555555555555555555555550000000000000000000000000000000000000000
00000000000000000000000000000000000000005555555555555000555555500055555550005555555555555000000000000000000000000000000000000000
00000000000000000000000000000000000000055555555555550000055555000005555500000555555555555000000000000000000000000000000000000000
00000000000000000000000000000000000000055555555555550000055555000005555500000555555555555500000000000000000000066666000000000000
00000000000000000000000000000000000000555555555555550000055555000005555500000555555555555500000000000000000000067676660000000000
00000000000000000000000000000000000000555555555555555000555555500055555550005555555555555550000000000000000006667676760000000000
00000000000000000000000000000000000005555555555555555555555555555555555555555555555555555550000000000000000006767676760000000000
00000000000000000000000000000000000005555555555555555555555555555555555555555555555555555555000000000000000006767777760000000000
00000000000000000000000000000000000055555555555555555555555555555555555555555555555555555555000000000000000006777777760000000000
00000000000000000000000000000000000055555555555555555555555555555555555555555555555555555555500000000000000006677777660000000000
00000000000000000000000000000000000555555555555555555555555555555555555555555555555555555555500000000000000000666666600000000000
00000000000000000000000000000000000555555555555500055555550005555555000555555500055555555555550000000000000000000000000000000000
00000000000000000000000000000000005555555555555000005555500000555550000055555000005555555555550000000000000000000000000000000000
00000000000000000000000000000000005555555555555000005555500000555550000055555000005555555555555000000000000000000000000000000000
00000000000000000000000000000000055555555555555000005555500000555550000055555000005555555555555000000000000000000000000000000000
00000000000000000000000000000000055555555555555500055555550005555555000555555500055555555555555500000000000000000000000000000000
00000000000000000000000000000000555555555555555555555555555555555555555555555555555555555555555500000000000000000000000000000000
00000000000000000000000000000000555555555555555555555555555555555555555555555555555555555555555550000000000000000000000000000000
00000000000000000000000000000005555555555555555555555555555555555555555555555555555555555555555550000000000000000000000000000000
00000000000000000000000000000005555555555555555555555555555555555555555555555555555555555555555555000000000000000000000000000000
00000000000000000000000000000055555555555555555555555555555555555555555555555555555555555555555555000000000000000000000000000000
00000000000000000000000000000055555555555550005555555000555555500055555550005555555000555555555555500000000000000000000000000000
00000000000000000000000000000555555555555500000555550000055555000005555500000555550000055555555555500000000000000000000000000000
00000000000000000000000000000555555555555500000555550000055555000005555500000555550000055555555555550000000000000000000000000000
00000000000000000000000000005555555555555500000555550000055555000005555500000555550000055555555555550000000000000000000000000000
00000000000000000000000000005555555555555550005555555000555555500055555550005555555000555555555555555000000000000000000000000000
00000000000000000000000000055555555555555555555555555555555555555555555555555555555555555555555555555000000000000000000000000000
00000000000000000000000000055555555555555555555555555555555555555555555555555555555555555555555555555500000000000000000000000000
00000000000000000000000000555555555555555555555555555555555555555555555555555555555555555555555555555500000000000000000000000000
00000000000000000000000000555555555555555555555555555555555555555555555555555555555555555555555555555550000000000000000000000000
00000000000000000000000005555555555555555555555555555555555555555555555555555555555555555555555555555550000000000000000000000000
00000000000000000000000005555555555555555555555555555555555555555555555555555555555555555555555555555555000000000000000000000000
00000000000000000000000055555555555555555555555555555555555555555555555555555555555555555555555555555555000000000000000000000000
00000000000000000000000055555555555555555555555555555555555555555555555555555555555555555555555555555555500000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000006666666000000000000000000000006666666000000000000000000000006666666000000000000000000000006666666000000000000000
0000000000000066888888866000000000000000000066aaaaaaa66000000000000000000066sssssss660000000000000000000667777777660000000000000
00000000000006888888888886000000000000000006aaaaaaaaaaa6000000000000000006sssssssssss6000000000000000006777777777776000000000000
0000000000006888888888888860000000000000006aaaaaaaaaaaaa60000000000000006sssssssssssss600000000000000067777777777777600000000000
000000000006888888888888888600000000000006aaaaaaaaaaaaaaa600000000000006sssssssssssssss60000000000000677777777777777760000000000
00000000006888888888888888886000000000006aaaaaaaaaaaaaaaaa6000000000006sssssssssssssssss6000000000006777777777777777776000000000
00000000006888888888888888886000000000006aaaaaaaaaaaaaaaaa6000000000006sssssssssssssssss6000000000006777777777777777776000000000
0000000006888888888888888888860000000006aaaaaaaaaaaaaaaaaaa60000000006sssssssssssssssssss600000000067777777777777777777600000000
0000000006888888888888888888860000000006aaaaaaaaaaaaaaaaaaa60000000006sssssssssssssssssss600000000067777777777777777777600000000
0000000006888888888888888888860000000006aaaaaaaaaaaaaaaaaaa60000000006sssssssssssssssssss600000000067777777777777777777600000000
0000000006888888888888888888860000000006aaaaaaaaaaaaaaaaaaa60000000006sssssssssssssssssss600000000067777777777777777777600000000
0000000006888888888888888888860000000006aaaaaaaaaaaaaaaaaaa60000000006sssssssssssssssssss600000000067777777777777777777600000000
0000000006888888888888888888860000000006aaaaaaaaaaaaaaaaaaa60000000006sssssssssssssssssss600000000067777777777777777777600000000
0000000006888888888888888888860000000006aaaaaaaaaaaaaaaaaaa60000000006sssssssssssssssssss600000000067777777777777777777600000000
00000000006888888888888888886000000000006aaaaaaaaaaaaaaaaa6000000000006sssssssssssssssss6000000000006777777777777777776000000000
00000000006888888888888888886000000000006aaaaaaaaaaaaaaaaa6000000000006sssssssssssssssss6000000000006777777777777777776000000000
000000000006888888888888888600000000000006aaaaaaaaaaaaaaa600000000000006sssssssssssssss60000000000000677777777777777760000000000
0000000000006888888888888860000000000000006aaaaaaaaaaaaa60000000000000006sssssssssssss600000000000000067777777777777600000000000
00000000000006888888888886000000000000000006aaaaaaaaaaa6000000000000000006sssssssssss6000000000000000006777777777776000000000000
0000000000000066888888866000000000000000000066aaaaaaa66000000000000000000066sssssss660000000000000000000667777777660000000000000
00000000000000006666666000000000000000000000006666666000000000000000000000006666666000000000000000000000006666666000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000400000000000000000000000000000400000000000000000000000000000400000000000000000000000000000400000000000000000000000
00000000000000040000000000000000000000000000040000000000000000000000000000040000000000000000000000000000040000000000000000000000
00000000000000004000000000000000000000000000004000000000000000000000000000004000000000000000000000000000004000000000000000000000
00000000000000000400000000000000000000000000000400000000000000000000000000000400000000000000000000000000000400000000000000000000
00000000000000005555550000000000000000000000005555550000000000000000000000005555550000000000000000000000005555550000000000000000
00000000000000005555550000000000000000000000005555550000000000000000000000005555550000000000000000000000005555550000000000000000
00000000000000005555550000000000000000000000005555550000000000000000000000005555550000000000000000000000005555550000000000000000
00000000000000005555550000000000000000000000005555550000000000000000000000005555550000000000000000000000005555550000000000000000
00000000000000005555550000000000000000000000005555550000000000000000000000005555550000000000000000000000005555550000000000000000
00000000000000005555550000000000000000000000005555550000000000000000000000005555550000000000000000000000005555550000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__sfx__
000300003c61500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010a1f200c4520c4510c4410c4310c4210c4110c4110c4100c4100c4100c4100c4100c4120c4120c4120c4120c4120c4210c4310c4410c4510c4610c4710c4020c4020c4020c4020c4020c4020c4020c4020c402
000f00000004400011000001c7141c7151c51510001237040704007011000001c7141c715000001c515237040504405011000001c7141c7152351510001240150204002011000001c7141c715000001c51523714
010f00000c04300000000001871418715185151c0001c700246150000000000187141871500000185151f7040c04300000000001f7141f7151f715100001f015246150000000000187141871500000245151f714
010f00000304403011000001b7141b7151b51510001237040704007011000001b7141b715000001b5152370405044050110000020714207152451510001240150a0400a011000001a51526515225151d51522714
010f00000c043287102b7101871418715185152471024702246152f7102b71018714187152b710185152b7100c0432d710307101f7141f7151f715247101f01524615347102b715187141871500000245151f714
000f00000c04324510275101871418715185151b51033700246152c5102b510187141871527510185151f7040c04327510245101f7141f7151f715245101f015246152451022510187141871522510245151f714
010f00000804408011000001b7141b7151b51510001237040804008011000001b7141b715000001b5152370407044070110000022714227152751513001270150704007011000001a51526515225151d51522714
010f00000c04330700337001871430710307152e7102e715246152e7102e71518714187152e700185151f7040c04333700307001b5142c5102c5152b5102b515246152751027515337051a71526715227151d715
010e0000184251d3252032524425356152c325184251d32520325184251d3252c325356151d32520325184251d32520325184251d32535615244251d32520325184251d3252c3252442535615203251842529325
010e00000c0430544505435054450543505445054350544501435014450143501445014350144501435014450c0430344503435034450343503445034350344500435004450043500445004350c0430043500445
010e00002042524325293252c4251d3252032524425293252c3251d4252032524325294252c3251d3252042524325293252c4251d3252032524412293252c3251d4252032524325294252c3251d3252042524325
010e00000c043014350144501435014450143520415014350c04320415014350143501435014451d415204150c043014350144501435014450143501445014350c04300445004350044500435004350043500445
010e0000182151d3251d3251d325356151d325304201d3252e4202e4201d3251d325356151d325292202c2202c2201d3251d3251d325356151d3252e4201d325294201b3251b32527420356151b3251b3251b325
010e00000c043014450143501425034450343503425034150c04305445054350542508445084350842508415356150a4450a4350a425356150c4350c4250c4150c04300445004450044500445004450043500435
010e000029420294112941229415356152b4202b4112b4122d4202d4112d4122d4123561530420304123041232411324103241032412354113541235412294163541635416294162941635416354162941629416
01100000070402671524815247150b0402671524815075010c04024715248150d040237250e0402481500000070402571524815267150b04023715248151d7150c04023715248150d0401d7150e0402481507501
011000000c50022735230252873522025237352672522035237252803523725280352672528005260050c5000c5002e7352f0252e7352f0252b7352802526735220251f735210251c7351f0250c5000c5000c500
01100000070402b715248151f7150b04030715248152d7150c04023715248150d040237150e0402481523715130400000030715000002f71500000070430000029715280152971528015297151c0052e7110a700
0110000035725340253571534025357153402532715300252e7252b0352d725280352b7252d0352f7253203537725000053772500005377250000524815000052b0152b7152b0152b7152b0151f7052f7110a700
0110000009040020003271502000317150200009043020002b7152a0152b7152a0152b7151e005307110c700000401c015297152d7002871500000040401f01529715257002871500700050401f715070400c501
0110000037725000053772500005377250000524815000052b0152b7152b0152b7152b0151f7052f7110a70024815180152b7252d7002b7253600524815220153072524815307252a0052481528715248153c715
0110000037725000053772500005377250000524815000052b0152b7152b0152b7152b0151f7052f7110a700248152d7352e0252d7352e0252d735248153402532725248152e7252f025248152b0352481528735
010e00000c0433f2153f215243032461018615243033f2150c043243033f2153f215246101203403041000410c043001053f2153f21524610186153f215003040c0433f215000053f21524610000140c02118031
010e00000c0450015500140000350c043001400003500324001550014000035001400c043186153f215003240c0450015500140000350c043001400003500324001550014000035001400c043186153f21500324
010e00000c0430010500100000050c0430010000005003040c0430010000005001000c0431202403031000310c0430010500100000050c0430010000005003040c0430010000005001000c043000140c01118021
010e00000c0450015500140000350015500140000350032400155001400003500140000351861430600003240c045001550014000035001550014000035003240015500140000350014000035186143060000324
010e00000c0433f2153f215000052461018615000053f2150c043001003f2153f215246101200403000000000c043001053f2153f21524610186153f215003040c0433f215000053f21524610000040c00018000
010e00000c0450015500150000050c043001500000500304001550015000005001500c043186153f215003040c0450015500150000050c043001500000500304001550015000005001500c043186153f21500304
011400002743018726217161871627430187162171627430295150040026435264352443526435247162043000400000001d430004002772618716217161871627700187162d5151870024615187162d51518700
011400000c04305320295150c320306150332005320295050c043053201d22505320306151d225000000c04305330000001b42005320306150000003320053300c04300320335150c043033200f3300432010330
011400002e4302a72627716247162051524716304302c430000000b2100c2100d2200f2101e420204101e420314302d7262a716277162351527716334302f4302f7262b51528716257162b5152b5152b5152b515
00060000096140961009615096000c6140c6100c615086000c6030b60000600016000360006600086000b6000c603096000b6000c603306050b600236050c6030960019605076000c60330605126000760013600
0114000027400187002171618716270001800021716187162740018700217161801627000184152171618716274001870021016187161831518415217161801627400187002151624506275162d3152171118016
010c00001075513755187451c7451f735247252b71512755157551a7451e74521735267252d71514755177551c7452074523735287252f7153472500000000000000000000000000000000000000000000000000
010c0000000001072513725187251c7251f725247252b70512725157251a7251e72521725267252d70514725177251c7252072523725287252f72534705000001ca051ca051ca051ca051ca051ca051ca051ca05
012000001474014731147211471516740167311672116715197401973119721197151b7401b7311b7211b7111b7101b7121b7121b7121b7151970019700197001970019700197001b7001b7001b7001b7001b700
012000001272012720127251270510720107201072510705117201172011725117051572015720157201572015722157221572215725057000570005700007000070006705087050970009700097000970009700
012000000102001020010200102506020060200602006025080200802008020080250402004020040200402004020040200402204022040250400500000000000000000000000000000000000000000000000000
010900000c6241c6252b6002f60024600286002b6002f6003060034600376001360415604176040c6040e60410604116041360400000000000000000000000000000000000000000000000000000000000000000
000100002c2502b6202a2502962028250276202625025620242502362022250216202025000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100002a3502a5102a515245653005030510305152a565361503651036515365053450029500295002f5003f500335003450029500295002f5003f500335003450029500295002f5003f500005000050000500
000200001021304611102230462110223046311023304631102430464110253046511026304661102630465110253046511024304641102430463110233046211022304621102130461110213046111021304611
000100000c1500e0511105114051170511705014051120510f0510c15100100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100
000200003f6142646525361242512345122341212413f6041f3050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100001b3501b2501c1511d1411f141211312313127121371213b1101b3301b2301c1311d1311f131211312312127121371113b1101b3101b2101c1111d1111f111211112311127111371113b1100000000000
000100000905009040090400903009031090310902109021090210a0210b0210b0210c0210d0200e0210f02111011120111c0011a0011700116001140011200111001100010d0010d00100001000010000100001
000300000c7500f041130311312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00020000296632866528604276532765426605256432564524604236432264421603206351e6351c6031b6341762314604106230c625086030661503613026040c0040740400604083040c004172041160400404
0002000000373016732b3730167300473233731c26301663053631a26301663016530d253024531e3530164300343054431c2430163325333016330033325423016230162309323016231d313016131021300413
000100000f12500000000000710500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000c00000c34300300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300
0005000011574160741357418074155641a064165641b054185541d0541a7541f5441b044217441d544220441f744245342103426734220242772424014297140070400704007040070400704007040070400704
000600000b07012741127350c07013741137350d07014741147350f0701674116735182001840018300185021800512200122050a2000a4000a3000a0050a70500000000000d0001400014005000000000000000
000300000c343236450933520621063311b6210432116611023210f611013110a6110361104600036000260001600016000460003600026000160001600016000160004600036000260001600016000160001600
0006000018755197551a7551574516745177451273513735147350f72510725117250c7150d7150e7150070000700007000070000700007000070000700007000070000700007000070000700007000070000700
010600001c36311000103331031310303107031070513005306041070310705000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00060000297742407427764220642675421054245541f744220441d544217441b0441f5441a7341d034185341b034165241a02415524180141351416014115142770000000000000000000000000000000000000
000600000f07017741177350e07013741137350d07010741107350b0700d7410e7350000300003000030000300003153030b3031a7031f5031b003217031d5032200300000000000000000000000000000000000
00010000352103751534100371003f10039100331001f1001f1001f1001f100231002a10034100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000c0150c0050c005110350c0050c0050c00516055000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005
00020000071540f163163730b22332643216331c6231861315613136130e6130a61304600000000000000000000000b1010710105101031010110100000000000000000000000000000000000000000000000000
000100001b5611e06125061010001a0511d0512405100000197411c7412374100700187301b731227310050000000000000000000000000000000000000000000000000000000000000000000000000000000000
000600002336311000103330400010705107031070513005306041070310705000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
01 02034344
00 02034344
00 04034344
00 04034344
00 02054344
00 02054344
00 04064344
00 04064344
00 07084344
02 04084344
01 0b0a4344
00 0b0a4344
00 090a4344
00 090a4344
00 0c0d4344
00 0c0d4344
00 0c0d4344
00 0a0d4344
02 0e0f4344
01 10114344
00 12134344
00 10114344
00 12134344
00 14164344
00 14154344
00 14164344
02 14154344
01 191a4344
00 191a4344
00 17184344
00 17184344
00 1b1c4344
02 1b1c4344
01 211e7a44
00 211e7a44
00 1d1e7a44
00 1d1e7a44
00 1f207a44
02 1f207a44
04 22234344
04 24252644


__meta:cart_info_start__
cart_type: game
# Embed: 750 x 680
game_name: Northern Corridor
# Leave blank to use game-name
game_slug: 
jam_info: []
tagline: You must decipher the locking mechanism to proceed
time_left: '0:00:00'
develop_time: 'N/A'
description: |
  You have traveled to the northern-most edge of the continent with your party. You have discovered
  the location of the enemy base, incapacitated the guards, and infiltrated the compound.

  You have found a corridor that leads to the barracks, but you are blocked by a door containing a strange
  sequence of patterns and devices. This door is the last obstacle to reaching your ultimate goal...
controls:
  - inputs: [MOUSE]
    desc:  move the cursor
  - inputs: [LEFT_CLICK]
    desc:  activate a lever
hints: ''
acknowledgements: |
  * Sound effects from [Toy Box Jam 2020](https://itch.io/jam/toy-box-jam-2020) start cart
  * Ending pixel art from [ampeduplearning.com](https://ampeduplearning.com/santa-christmas-long-division-with-remainders-pixel-art-mystery-picture-editable/)
to_do: []
version: 0.1.0
img_alt: Gray triangular rune with levers on either side. Four orbs of different colors underneath with 4 corresponding levers.
about_extra: |
  Based on a puzzle from a Dungeons and Dragons campaign
number_players: [1]
__meta:cart_info_end__
